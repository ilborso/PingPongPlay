{
	"id": "d81999159674753ce920525459987a19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PingPongPlay.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\n/**\n * @title PingPongPlay\n * @dev ERC20 Token con funzionalità di staking, vesting e gestione della liquidità.\n */\ncontract PingPongPlay is ERC20, Ownable(address(this)), ReentrancyGuard, ERC20Burnable {\n    using SafeMath for uint256;\n\n    uint256 public constant TOTAL_SUPPLY = 100_000_000 * 10 ** 18;\n    \n    // Allocazione dei token\n    uint256 public constant PUBLIC_SALE = TOTAL_SUPPLY * 40 / 100;\n    uint256 public constant TEAM_FOUNDERS = TOTAL_SUPPLY * 20 / 100;\n    uint256 public constant MARKETING_PARTNERSHIP = TOTAL_SUPPLY * 15 / 100;\n    uint256 public constant PROJECT_DEVELOPMENT = TOTAL_SUPPLY * 10 / 100;\n    uint256 public constant RESERVE = TOTAL_SUPPLY * 10 / 100;\n    uint256 public constant COMMUNITY_REWARDS = TOTAL_SUPPLY * 5 / 100;\n\n    // Variabili per il vesting del team e fondatori\n    uint256 public vestingStart;\n    uint256 public constant VESTING_DURATION = 365 days;\n    uint256 public teamReleased;\n\n    // Variabili per lo staking\n    struct Stake {\n        uint256 amount;       // Importo dello stake\n        uint256 timestamp;    // Timestamp dell'ultimo aggiornamento dello stake\n        uint256 lastClaimed;  // Ultima volta che l'interesse è stato rilasciato\n    }\n\n    mapping(address => Stake) public stakes;\n    address[] public stakeAddresses; // mantiene la lista di tutti gliindirizzi cheh hanno effettuato stake\n    uint256 public rewardRate; // Tasso di ricompensa annuale in percentuale\n\n    /**\n     * @dev Costruttore del contratto.\n     * @param _rewardRate Tasso di ricompensa annuale per lo staking.\n     */\n    constructor(uint256 _rewardRate) ERC20(\"PingPongPlay\", \"PINGPP\") {\n        require(_rewardRate > 0, \"Reward rate must be greater than 0\");\n        \n        rewardRate = _rewardRate;\n        \n        _mint(address(this), TOTAL_SUPPLY);\n        \n        vestingStart = block.timestamp;\n\n        // Distribuzione iniziale\n        _transfer(address(this), msg.sender, PUBLIC_SALE); // Vendita pubblica\n        _transfer(address(this), address(this), TEAM_FOUNDERS); // Token del team mantenuti nel contratto\n        _transfer(address(this), msg.sender, MARKETING_PARTNERSHIP);\n        _transfer(address(this), msg.sender, PROJECT_DEVELOPMENT);\n        _transfer(address(this), msg.sender, RESERVE);\n        _transfer(address(this), msg.sender, COMMUNITY_REWARDS);\n    }\n\n    /**\n     * @dev Aggiorna il tasso di ricompensa per lo staking.\n     * @param _newRate Nuovo tasso di ricompensa annuale.\n     */\n    function updateRewardRate(uint256 _newRate) external onlyOwner {\n        require(_newRate > 0, \"Reward rate must be greater than 0\");\n        rewardRate = _newRate;\n    }\n\n    /**\n     * @dev Rilascia i token del team secondo il piano di vesting.\n     */\n    function releaseTeamTokens() external nonReentrant onlyOwner {\n        require(block.timestamp >= vestingStart, \"Vesting not started\");\n        \n        uint256 elapsed = block.timestamp.sub(vestingStart);\n        uint256 totalReleasable = TEAM_FOUNDERS.mul(elapsed).div(VESTING_DURATION);\n        uint256 amountToRelease = totalReleasable.sub(teamReleased);\n\n        require(amountToRelease > 0, \"No tokens to release\");\n\n        teamReleased = teamReleased.add(amountToRelease);\n        _transfer(address(this), owner(), amountToRelease);\n    }\n\n    /**\n     * @dev Permette agli utenti di mettere in staking i propri token.\n     * @param amount Quantità di token da mettere in staking.\n     */\n    function stake(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Cannot stake 0 tokens\");\n        _transfer(msg.sender, address(this), amount);\n\n        Stake storage userStake = stakes[msg.sender];\n        stakeAddresses.push(msg.sender);\n\n        // Calcola e rilascia gli interessi accumulati\n        uint256 pendingReward = calculateReward(msg.sender);\n        if (pendingReward > 0) {\n            _transfer(address(this), msg.sender, pendingReward);\n            emit InterestClaimed(msg.sender, pendingReward);\n        }\n\n        // Aggiorna lo stake e l'ultimo giorno in cui sono stati rilasciati gli interessi\n        userStake.amount = userStake.amount.add(amount);\n        userStake.timestamp = block.timestamp;\n        userStake.lastClaimed = block.timestamp;\n    }\n\n    /**\n     * @dev Permette agli utenti di ritirare i propri token in staking e le ricompense accumulate.\n     * @param amount Quantità di token da ritirare.\n     */\n    function unstake(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Cannot unstake 0 tokens\");\n        require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\");\n\n        // Calcola gli interessi accumulati\n        uint256 reward = calculateReward(msg.sender);\n        uint256 totalAmount = amount.add(reward);\n\n        // Aggiorna lo stake\n        stakes[msg.sender].amount = stakes[msg.sender].amount.sub(amount);\n        stakes[msg.sender].timestamp = block.timestamp;\n        stakes[msg.sender].lastClaimed = block.timestamp;\n\n        // Rilascia i token e gli interessi\n        _transfer(address(this), msg.sender, totalAmount);\n        \n        // rimuove l'indirizzo dalla lista degli stakers\n        for (uint i = 0; i < stakeAddresses.length; i++) {\n            if (stakeAddresses[i] == msg.sender) {\n                stakeAddresses[i] = stakeAddresses[stakeAddresses.length - 1];\n                stakeAddresses.pop();\n                break;\n            }\n        }\n\n\n        emit Unstaked(msg.sender, amount);\n        emit InterestClaimed(msg.sender, reward);\n    }\n\n    /**\n     * @dev Calcola la ricompensa accumulata per un indirizzo staker.\n     * @param staker Indirizzo dello staker.\n     * @return Ricompensa accumulata.\n     */\n    function calculateReward(address staker) public view returns (uint256) {\n        Stake memory userStake = stakes[staker];\n        if (userStake.amount == 0) return 0;\n\n        uint256 daysStaked = (block.timestamp - userStake.lastClaimed) / 1 days;\n        uint256 annualReward = userStake.amount.mul(rewardRate).div(100);\n        return annualReward.mul(daysStaked).div(365);\n    }\n\n    /**\n     * @dev Rilascia tutti gli interessi maturati per ogni utente che ha stake attivo.\n     */\n    function releaseAllInterest() external onlyOwner {\n        address[] memory stakers = _getAllStakers();\n        uint256 totalReleased = 0;\n\n        for (uint256 i = 0; i < stakers.length; i++) {\n            Stake storage userStake = stakes[stakers[i]];\n            uint256 pendingReward = calculateReward(stakers[i]);\n            if (pendingReward > 0) {\n                _transfer(address(this), stakers[i], pendingReward);\n                userStake.lastClaimed = block.timestamp;  // Aggiorna l'ultimo giorno di rilascio\n                totalReleased = totalReleased.add(pendingReward);\n                emit InterestClaimed(stakers[i], pendingReward);\n            }\n        }\n        \n        emit AllInterestReleased(totalReleased);\n    }\n\n    // Funzione di supporto per ottenere l'elenco degli staker\n    function _getAllStakers() internal view returns (address[] memory) {\n        uint256 stakerCount = 0;\n        for (uint i = 0; i < stakeAddresses.length; i++) {\n            if (stakes[stakeAddresses[i]].amount > 0) { // corrected line here!\n                stakerCount++;\n            }\n        }\n        address[] memory stakers = new address[](stakerCount);\n        uint256 index = 0;\n        for (uint i = 0; i < stakeAddresses.length; i++) {\n            if (stakes[stakeAddresses[i]].amount > 0) {\n                stakers[index] = stakeAddresses[i];\n                index++;\n            }\n        }\n        return stakers;\n    }\n\n    // Eventi per tracciare le azioni di staking e ricompensa\n    event InterestClaimed(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event AllInterestReleased(uint256 totalAmount);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/PingPongPlay.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PingPongPlay.sol": {
				"PingPongPlay": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								}
							],
							"name": "AllInterestReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InterestClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COMMUNITY_REWARDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MARKETING_PARTNERSHIP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PROJECT_DEVELOPMENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_SALE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RESERVE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TEAM_FOUNDERS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VESTING_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseAllInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseTeamTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakeAddresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimed",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamReleased",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRate",
									"type": "uint256"
								}
							],
							"name": "updateRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 Token con funzionalità di staking, vesting e gestione della liquidità.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"calculateReward(address)": {
								"details": "Calcola la ricompensa accumulata per un indirizzo staker.",
								"params": {
									"staker": "Indirizzo dello staker."
								},
								"returns": {
									"_0": "Ricompensa accumulata."
								}
							},
							"constructor": {
								"details": "Costruttore del contratto.",
								"params": {
									"_rewardRate": "Tasso di ricompensa annuale per lo staking."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releaseAllInterest()": {
								"details": "Rilascia tutti gli interessi maturati per ogni utente che ha stake attivo."
							},
							"releaseTeamTokens()": {
								"details": "Rilascia i token del team secondo il piano di vesting."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"details": "Permette agli utenti di mettere in staking i propri token.",
								"params": {
									"amount": "Quantità di token da mettere in staking."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unstake(uint256)": {
								"details": "Permette agli utenti di ritirare i propri token in staking e le ricompense accumulate.",
								"params": {
									"amount": "Quantità di token da ritirare."
								}
							},
							"updateRewardRate(uint256)": {
								"details": "Aggiorna il tasso di ricompensa per lo staking.",
								"params": {
									"_newRate": "Nuovo tasso di ricompensa annuale."
								}
							}
						},
						"title": "PingPongPlay",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PingPongPlay.sol\":482:8229  contract PingPongPlay is ERC20, Ownable(address(this)), ReentrancyGuard, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PingPongPlay.sol\":1940:2705  constructor(uint256 _rewardRate) ERC20(\"PingPongPlay\", \"PINGPP\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PingPongPlay.sol\":530:534  this */\n  address\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x50696e67506f6e67506c61790000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x50494e4750500000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay.sol\":2037:2038  0 */\n  0x00\n    /* \"contracts/PingPongPlay.sol\":2023:2034  _rewardRate */\n  dup2\n    /* \"contracts/PingPongPlay.sol\":2023:2038  _rewardRate > 0 */\n  gt\n    /* \"contracts/PingPongPlay.sol\":2015:2077  require(_rewardRate > 0, \"Reward rate must be greater than 0\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"contracts/PingPongPlay.sol\":2109:2120  _rewardRate */\n  dup1\n    /* \"contracts/PingPongPlay.sol\":2096:2106  rewardRate */\n  0x0b\n    /* \"contracts/PingPongPlay.sol\":2096:2120  rewardRate = _rewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay.sol\":2139:2173  _mint(address(this), TOTAL_SUPPLY) */\n  tag_23\n    /* \"contracts/PingPongPlay.sol\":2153:2157  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":2139:2144  _mint */\n  shl(0x20, tag_24)\n    /* \"contracts/PingPongPlay.sol\":2139:2173  _mint(address(this), TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/PingPongPlay.sol\":2207:2222  block.timestamp */\n  timestamp\n    /* \"contracts/PingPongPlay.sol\":2192:2204  vestingStart */\n  0x07\n    /* \"contracts/PingPongPlay.sol\":2192:2222  vestingStart = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay.sol\":2267:2316  _transfer(address(this), msg.sender, PUBLIC_SALE) */\n  tag_25\n    /* \"contracts/PingPongPlay.sol\":2285:2289  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":2292:2302  msg.sender */\n  caller\n    /* \"contracts/PingPongPlay.sol\":767:770  100 */\n  0x64\n    /* \"contracts/PingPongPlay.sol\":762:764  40 */\n  0x28\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":747:764  TOTAL_SUPPLY * 40 */\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"contracts/PingPongPlay.sol\":747:770  TOTAL_SUPPLY * 40 / 100 */\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"contracts/PingPongPlay.sol\":2267:2276  _transfer */\n  shl(0x20, tag_30)\n    /* \"contracts/PingPongPlay.sol\":2267:2316  _transfer(address(this), msg.sender, PUBLIC_SALE) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/PingPongPlay.sol\":2346:2400  _transfer(address(this), address(this), TEAM_FOUNDERS) */\n  tag_31\n    /* \"contracts/PingPongPlay.sol\":2364:2368  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":2379:2383  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":836:839  100 */\n  0x64\n    /* \"contracts/PingPongPlay.sol\":831:833  20 */\n  0x14\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":816:833  TOTAL_SUPPLY * 20 */\n  tag_32\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_32:\n    /* \"contracts/PingPongPlay.sol\":816:839  TOTAL_SUPPLY * 20 / 100 */\n  tag_33\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_33:\n    /* \"contracts/PingPongPlay.sol\":2346:2355  _transfer */\n  shl(0x20, tag_30)\n    /* \"contracts/PingPongPlay.sol\":2346:2400  _transfer(address(this), address(this), TEAM_FOUNDERS) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/PingPongPlay.sol\":2452:2511  _transfer(address(this), msg.sender, MARKETING_PARTNERSHIP) */\n  tag_34\n    /* \"contracts/PingPongPlay.sol\":2470:2474  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":2477:2487  msg.sender */\n  caller\n    /* \"contracts/PingPongPlay.sol\":913:916  100 */\n  0x64\n    /* \"contracts/PingPongPlay.sol\":908:910  15 */\n  0x0f\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":893:910  TOTAL_SUPPLY * 15 */\n  tag_35\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_35:\n    /* \"contracts/PingPongPlay.sol\":893:916  TOTAL_SUPPLY * 15 / 100 */\n  tag_36\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_36:\n    /* \"contracts/PingPongPlay.sol\":2452:2461  _transfer */\n  shl(0x20, tag_30)\n    /* \"contracts/PingPongPlay.sol\":2452:2511  _transfer(address(this), msg.sender, MARKETING_PARTNERSHIP) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"contracts/PingPongPlay.sol\":2521:2578  _transfer(address(this), msg.sender, PROJECT_DEVELOPMENT) */\n  tag_37\n    /* \"contracts/PingPongPlay.sol\":2539:2543  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":2546:2556  msg.sender */\n  caller\n    /* \"contracts/PingPongPlay.sol\":988:991  100 */\n  0x64\n    /* \"contracts/PingPongPlay.sol\":983:985  10 */\n  0x0a\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":968:985  TOTAL_SUPPLY * 10 */\n  tag_38\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_38:\n    /* \"contracts/PingPongPlay.sol\":968:991  TOTAL_SUPPLY * 10 / 100 */\n  tag_39\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_39:\n    /* \"contracts/PingPongPlay.sol\":2521:2530  _transfer */\n  shl(0x20, tag_30)\n    /* \"contracts/PingPongPlay.sol\":2521:2578  _transfer(address(this), msg.sender, PROJECT_DEVELOPMENT) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"contracts/PingPongPlay.sol\":2588:2633  _transfer(address(this), msg.sender, RESERVE) */\n  tag_40\n    /* \"contracts/PingPongPlay.sol\":2606:2610  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":2613:2623  msg.sender */\n  caller\n    /* \"contracts/PingPongPlay.sol\":1051:1054  100 */\n  0x64\n    /* \"contracts/PingPongPlay.sol\":1046:1048  10 */\n  0x0a\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":1031:1048  TOTAL_SUPPLY * 10 */\n  tag_41\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_41:\n    /* \"contracts/PingPongPlay.sol\":1031:1054  TOTAL_SUPPLY * 10 / 100 */\n  tag_42\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_42:\n    /* \"contracts/PingPongPlay.sol\":2588:2597  _transfer */\n  shl(0x20, tag_30)\n    /* \"contracts/PingPongPlay.sol\":2588:2633  _transfer(address(this), msg.sender, RESERVE) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"contracts/PingPongPlay.sol\":2643:2698  _transfer(address(this), msg.sender, COMMUNITY_REWARDS) */\n  tag_43\n    /* \"contracts/PingPongPlay.sol\":2661:2665  this */\n  address\n    /* \"contracts/PingPongPlay.sol\":2668:2678  msg.sender */\n  caller\n    /* \"contracts/PingPongPlay.sol\":1123:1126  100 */\n  0x64\n    /* \"contracts/PingPongPlay.sol\":1119:1120  5 */\n  0x05\n    /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/PingPongPlay.sol\":1104:1120  TOTAL_SUPPLY * 5 */\n  tag_44\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_44:\n    /* \"contracts/PingPongPlay.sol\":1104:1126  TOTAL_SUPPLY * 5 / 100 */\n  tag_45\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"contracts/PingPongPlay.sol\":2643:2652  _transfer */\n  shl(0x20, tag_30)\n    /* \"contracts/PingPongPlay.sol\":2643:2698  _transfer(address(this), msg.sender, COMMUNITY_REWARDS) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"contracts/PingPongPlay.sol\":1940:2705  constructor(uint256 _rewardRate) ERC20(\"PingPongPlay\", \"PINGPP\") {... */\n  pop\n    /* \"contracts/PingPongPlay.sol\":482:8229  contract PingPongPlay is ERC20, Ownable(address(this)), ReentrancyGuard, ERC20Burnable {... */\n  jump(tag_46)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_51\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_52)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n  mload(0x40)\n  0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_55\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_55:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_57\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_57:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n  tag_58\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n  shl(0x20, tag_52)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_61\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_63)\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_64\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_65\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_66\n  jump\t// in\ntag_65:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_64:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_67\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_68)\ntag_67:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_68:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_69\n  swap2\n  swap1\n  tag_70\n  jump\t// in\ntag_69:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_72:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_74:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_75:\n    /* \"#utility.yul\":490:514   */\n  tag_111\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_74\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_112:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_76:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_114\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_75\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_117\n  tag_72\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":781:900   */\ntag_116:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_118\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_76\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_77:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_78:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_79:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_80:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_123:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_125\n  tag_79\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1758:1842   */\ntag_124:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_81:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_82:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_83:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_84:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_130\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_83\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2473:2512   */\n  tag_131\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_83\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_85:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_86:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_134\n    /* \"#utility.yul\":2779:2813   */\n  tag_135\n    /* \"#utility.yul\":2788:2812   */\n  tag_136\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_74\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2779:2813   */\n  tag_85\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2761:2814   */\n  tag_74\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_87:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_88:\n    /* \"#utility.yul\":3017:3056   */\n  tag_139\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_86\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3078:3169   */\n  tag_140\n    /* \"#utility.yul\":3127:3168   */\n  tag_141\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_87\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_84\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_89:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_90:\n    /* \"#utility.yul\":3338:3370   */\n  tag_144\n  tag_89\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3379:3444   */\n  tag_145\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_88\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_91:\n    /* \"#utility.yul\":3516:3636   */\ntag_147:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_150\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_90\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_92:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_153\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_81\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3867:3896   */\n  tag_154\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_82\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_155:\n    /* \"#utility.yul\":4094:4174   */\n  tag_156\n    /* \"#utility.yul\":4150:4172   */\n  tag_157\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_82\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_91\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_152:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_93:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_94:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_160\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_93\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_95:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_162\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_94\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_10:\n    /* \"#utility.yul\":4911:4948   */\n  tag_164\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_77\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_166\n  tag_78\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":4999:5055   */\ntag_165:\n    /* \"#utility.yul\":5079:5117   */\n  tag_167\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_80\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5164:5231   */\n  tag_168\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_92\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_171:\n    /* \"#utility.yul\":6105:6172   */\n  tag_172\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_95\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_169)\n    /* \"#utility.yul\":5326:5944   */\ntag_170:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_173\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_81\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_174:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_174)\ntag_176:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_178\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_94\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_177:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_169:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_96:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_97:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_181\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_96\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_98:\n    /* \"#utility.yul\":6516:6540   */\n  tag_183\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_97\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_15:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_185\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_98\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6950   */\ntag_99:\n    /* \"#utility.yul\":6865:6876   */\n  0x00\n    /* \"#utility.yul\":6899:6905   */\n  dup3\n    /* \"#utility.yul\":6894:6897   */\n  dup3\n    /* \"#utility.yul\":6887:6906   */\n  mstore\n    /* \"#utility.yul\":6939:6943   */\n  0x20\n    /* \"#utility.yul\":6934:6937   */\n  dup3\n    /* \"#utility.yul\":6930:6944   */\n  add\n    /* \"#utility.yul\":6915:6944   */\n  swap1\n  pop\n    /* \"#utility.yul\":6781:6950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6956:7177   */\ntag_100:\n    /* \"#utility.yul\":7096:7130   */\n  0x5265776172642072617465206d7573742062652067726561746572207468616e\n    /* \"#utility.yul\":7092:7093   */\n  0x00\n    /* \"#utility.yul\":7084:7090   */\n  dup3\n    /* \"#utility.yul\":7080:7094   */\n  add\n    /* \"#utility.yul\":7073:7131   */\n  mstore\n    /* \"#utility.yul\":7165:7169   */\n  0x2030000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7160:7162   */\n  0x20\n    /* \"#utility.yul\":7152:7158   */\n  dup3\n    /* \"#utility.yul\":7148:7163   */\n  add\n    /* \"#utility.yul\":7141:7170   */\n  mstore\n    /* \"#utility.yul\":6956:7177   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7183:7549   */\ntag_101:\n    /* \"#utility.yul\":7325:7328   */\n  0x00\n    /* \"#utility.yul\":7346:7413   */\n  tag_189\n    /* \"#utility.yul\":7410:7412   */\n  0x22\n    /* \"#utility.yul\":7405:7408   */\n  dup4\n    /* \"#utility.yul\":7346:7413   */\n  tag_99\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7339:7413   */\n  swap2\n  pop\n    /* \"#utility.yul\":7422:7515   */\n  tag_190\n    /* \"#utility.yul\":7511:7514   */\n  dup3\n    /* \"#utility.yul\":7422:7515   */\n  tag_100\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7540:7542   */\n  0x40\n    /* \"#utility.yul\":7535:7538   */\n  dup3\n    /* \"#utility.yul\":7531:7543   */\n  add\n    /* \"#utility.yul\":7524:7543   */\n  swap1\n  pop\n    /* \"#utility.yul\":7183:7549   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7555:7974   */\ntag_22:\n    /* \"#utility.yul\":7721:7725   */\n  0x00\n    /* \"#utility.yul\":7759:7761   */\n  0x20\n    /* \"#utility.yul\":7748:7757   */\n  dup3\n    /* \"#utility.yul\":7744:7762   */\n  add\n    /* \"#utility.yul\":7736:7762   */\n  swap1\n  pop\n    /* \"#utility.yul\":7808:7817   */\n  dup2\n    /* \"#utility.yul\":7802:7806   */\n  dup2\n    /* \"#utility.yul\":7798:7818   */\n  sub\n    /* \"#utility.yul\":7794:7795   */\n  0x00\n    /* \"#utility.yul\":7783:7792   */\n  dup4\n    /* \"#utility.yul\":7779:7796   */\n  add\n    /* \"#utility.yul\":7772:7819   */\n  mstore\n    /* \"#utility.yul\":7836:7967   */\n  tag_192\n    /* \"#utility.yul\":7962:7966   */\n  dup2\n    /* \"#utility.yul\":7836:7967   */\n  tag_101\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7828:7967   */\n  swap1\n  pop\n    /* \"#utility.yul\":7555:7974   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7980:8160   */\ntag_102:\n    /* \"#utility.yul\":8028:8105   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8025:8026   */\n  0x00\n    /* \"#utility.yul\":8018:8106   */\n  mstore\n    /* \"#utility.yul\":8125:8129   */\n  0x11\n    /* \"#utility.yul\":8122:8123   */\n  0x04\n    /* \"#utility.yul\":8115:8130   */\n  mstore\n    /* \"#utility.yul\":8149:8153   */\n  0x24\n    /* \"#utility.yul\":8146:8147   */\n  0x00\n    /* \"#utility.yul\":8139:8154   */\n  revert\n    /* \"#utility.yul\":8166:8576   */\ntag_27:\n    /* \"#utility.yul\":8206:8213   */\n  0x00\n    /* \"#utility.yul\":8229:8249   */\n  tag_195\n    /* \"#utility.yul\":8247:8248   */\n  dup3\n    /* \"#utility.yul\":8229:8249   */\n  tag_74\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8224:8249   */\n  swap2\n  pop\n    /* \"#utility.yul\":8263:8283   */\n  tag_196\n    /* \"#utility.yul\":8281:8282   */\n  dup4\n    /* \"#utility.yul\":8263:8283   */\n  tag_74\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8258:8283   */\n  swap3\n  pop\n    /* \"#utility.yul\":8318:8319   */\n  dup3\n    /* \"#utility.yul\":8315:8316   */\n  dup3\n    /* \"#utility.yul\":8311:8320   */\n  mul\n    /* \"#utility.yul\":8340:8370   */\n  tag_197\n    /* \"#utility.yul\":8358:8369   */\n  dup2\n    /* \"#utility.yul\":8340:8370   */\n  tag_74\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8329:8370   */\n  swap2\n  pop\n    /* \"#utility.yul\":8519:8520   */\n  dup3\n    /* \"#utility.yul\":8510:8517   */\n  dup3\n    /* \"#utility.yul\":8506:8521   */\n  div\n    /* \"#utility.yul\":8503:8504   */\n  dup5\n    /* \"#utility.yul\":8500:8522   */\n  eq\n    /* \"#utility.yul\":8480:8481   */\n  dup4\n    /* \"#utility.yul\":8473:8482   */\n  iszero\n    /* \"#utility.yul\":8453:8536   */\n  or\n    /* \"#utility.yul\":8430:8569   */\n  tag_198\n  jumpi\n    /* \"#utility.yul\":8549:8567   */\n  tag_199\n  tag_102\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8430:8569   */\ntag_198:\n    /* \"#utility.yul\":8214:8576   */\n  pop\n    /* \"#utility.yul\":8166:8576   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8582:8762   */\ntag_103:\n    /* \"#utility.yul\":8630:8707   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8627:8628   */\n  0x00\n    /* \"#utility.yul\":8620:8708   */\n  mstore\n    /* \"#utility.yul\":8727:8731   */\n  0x12\n    /* \"#utility.yul\":8724:8725   */\n  0x04\n    /* \"#utility.yul\":8717:8732   */\n  mstore\n    /* \"#utility.yul\":8751:8755   */\n  0x24\n    /* \"#utility.yul\":8748:8749   */\n  0x00\n    /* \"#utility.yul\":8741:8756   */\n  revert\n    /* \"#utility.yul\":8768:8953   */\ntag_29:\n    /* \"#utility.yul\":8808:8809   */\n  0x00\n    /* \"#utility.yul\":8825:8845   */\n  tag_202\n    /* \"#utility.yul\":8843:8844   */\n  dup3\n    /* \"#utility.yul\":8825:8845   */\n  tag_74\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8820:8845   */\n  swap2\n  pop\n    /* \"#utility.yul\":8859:8879   */\n  tag_203\n    /* \"#utility.yul\":8877:8878   */\n  dup4\n    /* \"#utility.yul\":8859:8879   */\n  tag_74\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8854:8879   */\n  swap3\n  pop\n    /* \"#utility.yul\":8898:8899   */\n  dup3\n    /* \"#utility.yul\":8888:8923   */\n  tag_204\n  jumpi\n    /* \"#utility.yul\":8903:8921   */\n  tag_205\n  tag_103\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8888:8923   */\ntag_204:\n    /* \"#utility.yul\":8945:8946   */\n  dup3\n    /* \"#utility.yul\":8942:8943   */\n  dup3\n    /* \"#utility.yul\":8938:8947   */\n  div\n    /* \"#utility.yul\":8933:8947   */\n  swap1\n  pop\n    /* \"#utility.yul\":8768:8953   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8959:9150   */\ntag_62:\n    /* \"#utility.yul\":8999:9002   */\n  0x00\n    /* \"#utility.yul\":9018:9038   */\n  tag_207\n    /* \"#utility.yul\":9036:9037   */\n  dup3\n    /* \"#utility.yul\":9018:9038   */\n  tag_74\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9013:9038   */\n  swap2\n  pop\n    /* \"#utility.yul\":9052:9072   */\n  tag_208\n    /* \"#utility.yul\":9070:9071   */\n  dup4\n    /* \"#utility.yul\":9052:9072   */\n  tag_74\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":9047:9072   */\n  swap3\n  pop\n    /* \"#utility.yul\":9095:9096   */\n  dup3\n    /* \"#utility.yul\":9092:9093   */\n  dup3\n    /* \"#utility.yul\":9088:9097   */\n  add\n    /* \"#utility.yul\":9081:9097   */\n  swap1\n  pop\n    /* \"#utility.yul\":9116:9119   */\n  dup1\n    /* \"#utility.yul\":9113:9114   */\n  dup3\n    /* \"#utility.yul\":9110:9120   */\n  gt\n    /* \"#utility.yul\":9107:9143   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":9123:9141   */\n  tag_210\n  tag_102\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9107:9143   */\ntag_209:\n    /* \"#utility.yul\":8959:9150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9156:9274   */\ntag_104:\n    /* \"#utility.yul\":9243:9267   */\n  tag_212\n    /* \"#utility.yul\":9261:9266   */\n  dup2\n    /* \"#utility.yul\":9243:9267   */\n  tag_74\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9238:9241   */\n  dup3\n    /* \"#utility.yul\":9231:9268   */\n  mstore\n    /* \"#utility.yul\":9156:9274   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9280:9722   */\ntag_66:\n    /* \"#utility.yul\":9429:9433   */\n  0x00\n    /* \"#utility.yul\":9467:9469   */\n  0x60\n    /* \"#utility.yul\":9456:9465   */\n  dup3\n    /* \"#utility.yul\":9452:9470   */\n  add\n    /* \"#utility.yul\":9444:9470   */\n  swap1\n  pop\n    /* \"#utility.yul\":9480:9551   */\n  tag_214\n    /* \"#utility.yul\":9548:9549   */\n  0x00\n    /* \"#utility.yul\":9537:9546   */\n  dup4\n    /* \"#utility.yul\":9533:9550   */\n  add\n    /* \"#utility.yul\":9524:9530   */\n  dup7\n    /* \"#utility.yul\":9480:9551   */\n  tag_98\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9561:9633   */\n  tag_215\n    /* \"#utility.yul\":9629:9631   */\n  0x20\n    /* \"#utility.yul\":9618:9627   */\n  dup4\n    /* \"#utility.yul\":9614:9632   */\n  add\n    /* \"#utility.yul\":9605:9611   */\n  dup6\n    /* \"#utility.yul\":9561:9633   */\n  tag_104\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9643:9715   */\n  tag_216\n    /* \"#utility.yul\":9711:9713   */\n  0x40\n    /* \"#utility.yul\":9700:9709   */\n  dup4\n    /* \"#utility.yul\":9696:9714   */\n  add\n    /* \"#utility.yul\":9687:9693   */\n  dup5\n    /* \"#utility.yul\":9643:9715   */\n  tag_104\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9280:9722   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9728:9950   */\ntag_70:\n    /* \"#utility.yul\":9821:9825   */\n  0x00\n    /* \"#utility.yul\":9859:9861   */\n  0x20\n    /* \"#utility.yul\":9848:9857   */\n  dup3\n    /* \"#utility.yul\":9844:9862   */\n  add\n    /* \"#utility.yul\":9836:9862   */\n  swap1\n  pop\n    /* \"#utility.yul\":9872:9943   */\n  tag_218\n    /* \"#utility.yul\":9940:9941   */\n  0x00\n    /* \"#utility.yul\":9929:9938   */\n  dup4\n    /* \"#utility.yul\":9925:9942   */\n  add\n    /* \"#utility.yul\":9916:9922   */\n  dup5\n    /* \"#utility.yul\":9872:9943   */\n  tag_104\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9728:9950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PingPongPlay.sol\":482:8229  contract PingPongPlay is ERC20, Ownable(address(this)), ReentrancyGuard, ERC20Burnable {... */\ntag_46:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PingPongPlay.sol\":482:8229  contract PingPongPlay is ERC20, Ownable(address(this)), ReentrancyGuard, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x9ef3a261\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xd82e3962\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe75c4927\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf6f0fa8d\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x9ef3a261\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcb3dbecb\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9d2cc436\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x254800d4\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x39cf9b00\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x39cf9b00\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4cfc4d30\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5f89584e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x254800d4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x294f5fa3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x16934fc4\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1cfe31c2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x14c411c7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1571ccf6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":3104:3650  function releaseTeamTokens() external nonReentrant onlyOwner {... */\n    tag_5:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/PingPongPlay.sol\":776:839  uint256 public constant TEAM_FOUNDERS = TOTAL_SUPPLY * 20 / 100 */\n    tag_6:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":1584:1623  mapping(address => Stake) public stakes */\n    tag_7:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":1060:1126  uint256 public constant COMMUNITY_REWARDS = TOTAL_SUPPLY * 5 / 100 */\n    tag_9:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":1186:1213  uint256 public vestingStart */\n    tag_11:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":1629:1660  address[] public stakeAddresses */\n    tag_12:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":4774:5883  function unstake(uint256 amount) external nonReentrant {... */\n    tag_13:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_14:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":845:916  uint256 public constant MARKETING_PARTNERSHIP = TOTAL_SUPPLY * 15 / 100 */\n    tag_15:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_16:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/PingPongPlay.sol\":1219:1270  uint256 public constant VESTING_DURATION = 365 days */\n    tag_17:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":709:770  uint256 public constant PUBLIC_SALE = TOTAL_SUPPLY * 40 / 100 */\n    tag_18:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_21:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/PingPongPlay.sol\":1737:1762  uint256 public rewardRate */\n    tag_22:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":608:669  uint256 public constant TOTAL_SUPPLY = 100_000_000 * 10 ** 18 */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":997:1054  uint256 public constant RESERVE = TOTAL_SUPPLY * 10 / 100 */\n    tag_26:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":2845:3015  function updateRewardRate(uint256 _newRate) external onlyOwner {... */\n    tag_27:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/PingPongPlay.sol\":3806:4600  function stake(uint256 amount) external nonReentrant {... */\n    tag_28:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":6549:7289  function releaseAllInterest() external onlyOwner {... */\n    tag_30:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/PingPongPlay.sol\":6058:6440  function calculateReward(address staker) public view returns (uint256) {... */\n    tag_31:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_32:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay.sol\":922:991  uint256 public constant PROJECT_DEVELOPMENT = TOTAL_SUPPLY * 10 / 100 */\n    tag_33:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"contracts/PingPongPlay.sol\":1276:1303  uint256 public teamReleased */\n    tag_35:\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":3104:3650  function releaseTeamTokens() external nonReentrant onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/PingPongPlay.sol\":3202:3214  vestingStart */\n      sload(0x07)\n        /* \"contracts/PingPongPlay.sol\":3183:3198  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":3183:3214  block.timestamp >= vestingStart */\n      lt\n      iszero\n        /* \"contracts/PingPongPlay.sol\":3175:3238  require(block.timestamp >= vestingStart, \"Vesting not started\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/PingPongPlay.sol\":3257:3272  uint256 elapsed */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":3275:3308  block.timestamp.sub(vestingStart) */\n      tag_180\n        /* \"contracts/PingPongPlay.sol\":3295:3307  vestingStart */\n      sload(0x07)\n        /* \"contracts/PingPongPlay.sol\":3275:3290  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":3275:3294  block.timestamp.sub */\n      tag_181\n      swap1\n        /* \"contracts/PingPongPlay.sol\":3275:3308  block.timestamp.sub(vestingStart) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"contracts/PingPongPlay.sol\":3257:3308  uint256 elapsed = block.timestamp.sub(vestingStart) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":3318:3341  uint256 totalReleasable */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":3344:3392  TEAM_FOUNDERS.mul(elapsed).div(VESTING_DURATION) */\n      tag_182\n        /* \"contracts/PingPongPlay.sol\":1262:1270  365 days */\n      0x01e13380\n        /* \"contracts/PingPongPlay.sol\":3344:3370  TEAM_FOUNDERS.mul(elapsed) */\n      tag_183\n        /* \"contracts/PingPongPlay.sol\":3362:3369  elapsed */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":836:839  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":831:833  20 */\n      0x14\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":816:833  TOTAL_SUPPLY * 20 */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/PingPongPlay.sol\":816:839  TOTAL_SUPPLY * 20 / 100 */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"contracts/PingPongPlay.sol\":3344:3361  TEAM_FOUNDERS.mul */\n      tag_188\n      swap1\n        /* \"contracts/PingPongPlay.sol\":3344:3370  TEAM_FOUNDERS.mul(elapsed) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/PingPongPlay.sol\":3344:3374  TEAM_FOUNDERS.mul(elapsed).div */\n      tag_189\n      swap1\n        /* \"contracts/PingPongPlay.sol\":3344:3392  TEAM_FOUNDERS.mul(elapsed).div(VESTING_DURATION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"contracts/PingPongPlay.sol\":3318:3392  uint256 totalReleasable = TEAM_FOUNDERS.mul(elapsed).div(VESTING_DURATION) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":3402:3425  uint256 amountToRelease */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":3428:3461  totalReleasable.sub(teamReleased) */\n      tag_190\n        /* \"contracts/PingPongPlay.sol\":3448:3460  teamReleased */\n      sload(0x08)\n        /* \"contracts/PingPongPlay.sol\":3428:3443  totalReleasable */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":3428:3447  totalReleasable.sub */\n      tag_181\n      swap1\n        /* \"contracts/PingPongPlay.sol\":3428:3461  totalReleasable.sub(teamReleased) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/PingPongPlay.sol\":3402:3461  uint256 amountToRelease = totalReleasable.sub(teamReleased) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":3498:3499  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":3480:3495  amountToRelease */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":3480:3499  amountToRelease > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":3472:3524  require(amountToRelease > 0, \"No tokens to release\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/PingPongPlay.sol\":3550:3583  teamReleased.add(amountToRelease) */\n      tag_194\n        /* \"contracts/PingPongPlay.sol\":3567:3582  amountToRelease */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":3550:3562  teamReleased */\n      sload(0x08)\n        /* \"contracts/PingPongPlay.sol\":3550:3566  teamReleased.add */\n      tag_195\n      swap1\n        /* \"contracts/PingPongPlay.sol\":3550:3583  teamReleased.add(amountToRelease) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/PingPongPlay.sol\":3535:3547  teamReleased */\n      0x08\n        /* \"contracts/PingPongPlay.sol\":3535:3583  teamReleased = teamReleased.add(amountToRelease) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":3593:3643  _transfer(address(this), owner(), amountToRelease) */\n      tag_196\n        /* \"contracts/PingPongPlay.sol\":3611:3615  this */\n      address\n        /* \"contracts/PingPongPlay.sol\":3618:3625  owner() */\n      tag_197\n        /* \"contracts/PingPongPlay.sol\":3618:3623  owner */\n      tag_117\n        /* \"contracts/PingPongPlay.sol\":3618:3625  owner() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/PingPongPlay.sol\":3627:3642  amountToRelease */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":3593:3602  _transfer */\n      tag_198\n        /* \"contracts/PingPongPlay.sol\":3593:3643  _transfer(address(this), owner(), amountToRelease) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/PingPongPlay.sol\":3165:3650  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_199\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/PingPongPlay.sol\":3104:3650  function releaseTeamTokens() external nonReentrant onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":776:839  uint256 public constant TEAM_FOUNDERS = TOTAL_SUPPLY * 20 / 100 */\n    tag_56:\n        /* \"contracts/PingPongPlay.sol\":836:839  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":831:833  20 */\n      0x14\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":816:833  TOTAL_SUPPLY * 20 */\n      tag_201\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_201:\n        /* \"contracts/PingPongPlay.sol\":816:839  TOTAL_SUPPLY * 20 / 100 */\n      tag_202\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_202:\n        /* \"contracts/PingPongPlay.sol\":776:839  uint256 public constant TEAM_FOUNDERS = TOTAL_SUPPLY * 20 / 100 */\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1584:1623  mapping(address => Stake) public stakes */\n    tag_62:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1060:1126  uint256 public constant COMMUNITY_REWARDS = TOTAL_SUPPLY * 5 / 100 */\n    tag_69:\n        /* \"contracts/PingPongPlay.sol\":1123:1126  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":1119:1120  5 */\n      0x05\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":1104:1120  TOTAL_SUPPLY * 5 */\n      tag_204\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_204:\n        /* \"contracts/PingPongPlay.sol\":1104:1126  TOTAL_SUPPLY * 5 / 100 */\n      tag_205\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_205:\n        /* \"contracts/PingPongPlay.sol\":1060:1126  uint256 public constant COMMUNITY_REWARDS = TOTAL_SUPPLY * 5 / 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1186:1213  uint256 public vestingStart */\n    tag_77:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1629:1660  address[] public stakeAddresses */\n    tag_82:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":4774:5883  function unstake(uint256 amount) external nonReentrant {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_214\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/PingPongPlay.sol\":4856:4857  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":4847:4853  amount */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":4847:4857  amount > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":4839:4885  require(amount > 0, \"Cannot unstake 0 tokens\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/PingPongPlay.sol\":4932:4938  amount */\n      dup1\n        /* \"contracts/PingPongPlay.sol\":4903:4909  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":4903:4921  stakes[msg.sender] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":4910:4920  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":4903:4921  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":4903:4928  stakes[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/PingPongPlay.sol\":4903:4938  stakes[msg.sender].amount >= amount */\n      lt\n      iszero\n        /* \"contracts/PingPongPlay.sol\":4895:4969  require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/PingPongPlay.sol\":5024:5038  uint256 reward */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5041:5068  calculateReward(msg.sender) */\n      tag_222\n        /* \"contracts/PingPongPlay.sol\":5057:5067  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5041:5056  calculateReward */\n      tag_142\n        /* \"contracts/PingPongPlay.sol\":5041:5068  calculateReward(msg.sender) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/PingPongPlay.sol\":5024:5068  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":5078:5097  uint256 totalAmount */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5100:5118  amount.add(reward) */\n      tag_223\n        /* \"contracts/PingPongPlay.sol\":5111:5117  reward */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":5100:5106  amount */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":5100:5110  amount.add */\n      tag_195\n      swap1\n        /* \"contracts/PingPongPlay.sol\":5100:5118  amount.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"contracts/PingPongPlay.sol\":5078:5118  uint256 totalAmount = amount.add(reward) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":5186:5223  stakes[msg.sender].amount.sub(amount) */\n      tag_224\n        /* \"contracts/PingPongPlay.sol\":5216:5222  amount */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":5186:5192  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":5186:5204  stakes[msg.sender] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5193:5203  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5186:5204  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":5186:5211  stakes[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/PingPongPlay.sol\":5186:5215  stakes[msg.sender].amount.sub */\n      tag_181\n      swap1\n        /* \"contracts/PingPongPlay.sol\":5186:5223  stakes[msg.sender].amount.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"contracts/PingPongPlay.sol\":5158:5164  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":5158:5176  stakes[msg.sender] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5165:5175  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5158:5176  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":5158:5183  stakes[msg.sender].amount */\n      0x00\n      add\n        /* \"contracts/PingPongPlay.sol\":5158:5223  stakes[msg.sender].amount = stakes[msg.sender].amount.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":5264:5279  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":5233:5239  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":5233:5251  stakes[msg.sender] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5240:5250  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5233:5251  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":5233:5261  stakes[msg.sender].timestamp */\n      0x01\n      add\n        /* \"contracts/PingPongPlay.sol\":5233:5279  stakes[msg.sender].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":5322:5337  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":5289:5295  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":5289:5307  stakes[msg.sender] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5296:5306  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5289:5307  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":5289:5319  stakes[msg.sender].lastClaimed */\n      0x02\n      add\n        /* \"contracts/PingPongPlay.sol\":5289:5337  stakes[msg.sender].lastClaimed = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":5392:5441  _transfer(address(this), msg.sender, totalAmount) */\n      tag_225\n        /* \"contracts/PingPongPlay.sol\":5410:5414  this */\n      address\n        /* \"contracts/PingPongPlay.sol\":5417:5427  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5429:5440  totalAmount */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":5392:5401  _transfer */\n      tag_198\n        /* \"contracts/PingPongPlay.sol\":5392:5441  _transfer(address(this), msg.sender, totalAmount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/PingPongPlay.sol\":5522:5528  uint i */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5531:5532  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5522:5532  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":5517:5782  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n    tag_226:\n        /* \"contracts/PingPongPlay.sol\":5538:5552  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":5538:5559  stakeAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":5534:5535  i */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":5534:5559  i < stakeAddresses.length */\n      lt\n        /* \"contracts/PingPongPlay.sol\":5517:5782  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":5605:5615  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5584:5615  stakeAddresses[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay.sol\":5584:5598  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":5599:5600  i */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":5584:5601  stakeAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n    tag_229:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay.sol\":5584:5615  stakeAddresses[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay.sol\":5580:5772  if (stakeAddresses[i] == msg.sender) {... */\n      tag_233\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":5655:5669  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":5694:5695  1 */\n      0x01\n        /* \"contracts/PingPongPlay.sol\":5670:5684  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":5670:5691  stakeAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":5670:5695  stakeAddresses.length - 1 */\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"contracts/PingPongPlay.sol\":5655:5696  stakeAddresses[stakeAddresses.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_231\n      jump\t// in\n    tag_237:\n    tag_236:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay.sol\":5635:5649  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":5650:5651  i */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":5635:5652  stakeAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_231\n      jump\t// in\n    tag_240:\n    tag_239:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/PingPongPlay.sol\":5635:5696  stakeAddresses[i] = stakeAddresses[stakeAddresses.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":5714:5728  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":5714:5734  stakeAddresses.pop() */\n      dup1\n      sload\n      dup1\n      tag_242\n      jumpi\n      tag_243\n      tag_244\n      jump\t// in\n    tag_243:\n    tag_242:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/PingPongPlay.sol\":5752:5757  break */\n      jump(tag_227)\n        /* \"contracts/PingPongPlay.sol\":5580:5772  if (stakeAddresses[i] == msg.sender) {... */\n    tag_233:\n        /* \"contracts/PingPongPlay.sol\":5561:5564  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":5517:5782  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n      jump(tag_226)\n    tag_227:\n      pop\n        /* \"contracts/PingPongPlay.sol\":5807:5817  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5798:5826  Unstaked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"contracts/PingPongPlay.sol\":5819:5825  amount */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":5798:5826  Unstaked(msg.sender, amount) */\n      mload(0x40)\n      tag_246\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PingPongPlay.sol\":5857:5867  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":5841:5876  InterestClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea3530\n        /* \"contracts/PingPongPlay.sol\":5869:5875  reward */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":5841:5876  InterestClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_247\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PingPongPlay.sol\":4829:5883  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_248\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/PingPongPlay.sol\":4774:5883  function unstake(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":845:916  uint256 public constant MARKETING_PARTNERSHIP = TOTAL_SUPPLY * 15 / 100 */\n    tag_93:\n        /* \"contracts/PingPongPlay.sol\":913:916  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":908:910  15 */\n      0x0f\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":893:910  TOTAL_SUPPLY * 15 */\n      tag_250\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_250:\n        /* \"contracts/PingPongPlay.sol\":893:916  TOTAL_SUPPLY * 15 / 100 */\n      tag_251\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_251:\n        /* \"contracts/PingPongPlay.sol\":845:916  uint256 public constant MARKETING_PARTNERSHIP = TOTAL_SUPPLY * 15 / 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1219:1270  uint256 public constant VESTING_DURATION = 365 days */\n    tag_99:\n        /* \"contracts/PingPongPlay.sol\":1262:1270  365 days */\n      0x01e13380\n        /* \"contracts/PingPongPlay.sol\":1219:1270  uint256 public constant VESTING_DURATION = 365 days */\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":709:770  uint256 public constant PUBLIC_SALE = TOTAL_SUPPLY * 40 / 100 */\n    tag_102:\n        /* \"contracts/PingPongPlay.sol\":767:770  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":762:764  40 */\n      0x28\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":747:764  TOTAL_SUPPLY * 40 */\n      tag_256\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_256:\n        /* \"contracts/PingPongPlay.sol\":747:770  TOTAL_SUPPLY * 40 / 100 */\n      tag_257\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_257:\n        /* \"contracts/PingPongPlay.sol\":709:770  uint256 public constant PUBLIC_SALE = TOTAL_SUPPLY * 40 / 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1737:1762  uint256 public rewardRate */\n    tag_114:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":608:669  uint256 public constant TOTAL_SUPPLY = 100_000_000 * 10 ** 18 */\n    tag_120:\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":608:669  uint256 public constant TOTAL_SUPPLY = 100_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_270\n      swap1\n      tag_160\n      jump\t// in\n    tag_270:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_271\n      swap1\n      tag_160\n      jump\t// in\n    tag_271:\n      dup1\n      iszero\n      tag_272\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_273\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_272)\n    tag_273:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_274:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_274\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":997:1054  uint256 public constant RESERVE = TOTAL_SUPPLY * 10 / 100 */\n    tag_126:\n        /* \"contracts/PingPongPlay.sol\":1051:1054  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":1046:1048  10 */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":1031:1048  TOTAL_SUPPLY * 10 */\n      tag_275\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_275:\n        /* \"contracts/PingPongPlay.sol\":1031:1054  TOTAL_SUPPLY * 10 / 100 */\n      tag_276\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_276:\n        /* \"contracts/PingPongPlay.sol\":997:1054  uint256 public constant RESERVE = TOTAL_SUPPLY * 10 / 100 */\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":2845:3015  function updateRewardRate(uint256 _newRate) external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_278:\n        /* \"contracts/PingPongPlay.sol\":2937:2938  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":2926:2934  _newRate */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":2926:2938  _newRate > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":2918:2977  require(_newRate > 0, \"Reward rate must be greater than 0\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/PingPongPlay.sol\":3000:3008  _newRate */\n      dup1\n        /* \"contracts/PingPongPlay.sol\":2987:2997  rewardRate */\n      0x0b\n        /* \"contracts/PingPongPlay.sol\":2987:3008  rewardRate = _newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":2845:3015  function updateRewardRate(uint256 _newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":3806:4600  function stake(uint256 amount) external nonReentrant {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_284\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/PingPongPlay.sol\":3886:3887  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":3877:3883  amount */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":3877:3887  amount > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":3869:3913  require(amount > 0, \"Cannot stake 0 tokens\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/PingPongPlay.sol\":3923:3967  _transfer(msg.sender, address(this), amount) */\n      tag_289\n        /* \"contracts/PingPongPlay.sol\":3933:3943  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":3953:3957  this */\n      address\n        /* \"contracts/PingPongPlay.sol\":3960:3966  amount */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":3923:3932  _transfer */\n      tag_198\n        /* \"contracts/PingPongPlay.sol\":3923:3967  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/PingPongPlay.sol\":3978:4001  Stake storage userStake */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":4004:4010  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":4004:4022  stakes[msg.sender] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":4011:4021  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":4004:4022  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":3978:4022  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":4032:4046  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":4052:4062  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":4032:4063  stakeAddresses.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":4129:4150  uint256 pendingReward */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":4153:4180  calculateReward(msg.sender) */\n      tag_291\n        /* \"contracts/PingPongPlay.sol\":4169:4179  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":4153:4168  calculateReward */\n      tag_142\n        /* \"contracts/PingPongPlay.sol\":4153:4180  calculateReward(msg.sender) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/PingPongPlay.sol\":4129:4180  uint256 pendingReward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":4210:4211  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":4194:4207  pendingReward */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":4194:4211  pendingReward > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":4190:4350  if (pendingReward > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":4227:4278  _transfer(address(this), msg.sender, pendingReward) */\n      tag_293\n        /* \"contracts/PingPongPlay.sol\":4245:4249  this */\n      address\n        /* \"contracts/PingPongPlay.sol\":4252:4262  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":4264:4277  pendingReward */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":4227:4236  _transfer */\n      tag_198\n        /* \"contracts/PingPongPlay.sol\":4227:4278  _transfer(address(this), msg.sender, pendingReward) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/PingPongPlay.sol\":4313:4323  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay.sol\":4297:4339  InterestClaimed(msg.sender, pendingReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea3530\n        /* \"contracts/PingPongPlay.sol\":4325:4338  pendingReward */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":4297:4339  InterestClaimed(msg.sender, pendingReward) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PingPongPlay.sol\":4190:4350  if (pendingReward > 0) {... */\n    tag_292:\n        /* \"contracts/PingPongPlay.sol\":4469:4497  userStake.amount.add(amount) */\n      tag_295\n        /* \"contracts/PingPongPlay.sol\":4490:4496  amount */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":4469:4478  userStake */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":4469:4485  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/PingPongPlay.sol\":4469:4489  userStake.amount.add */\n      tag_195\n      swap1\n        /* \"contracts/PingPongPlay.sol\":4469:4497  userStake.amount.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"contracts/PingPongPlay.sol\":4450:4459  userStake */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":4450:4466  userStake.amount */\n      0x00\n      add\n        /* \"contracts/PingPongPlay.sol\":4450:4497  userStake.amount = userStake.amount.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":4529:4544  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":4507:4516  userStake */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":4507:4526  userStake.timestamp */\n      0x01\n      add\n        /* \"contracts/PingPongPlay.sol\":4507:4544  userStake.timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":4578:4593  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":4554:4563  userStake */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":4554:4575  userStake.lastClaimed */\n      0x02\n      add\n        /* \"contracts/PingPongPlay.sol\":4554:4593  userStake.lastClaimed = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":3859:4600  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_296\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/PingPongPlay.sol\":3806:4600  function stake(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":6549:7289  function releaseAllInterest() external onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/PingPongPlay.sol\":6608:6632  address[] memory stakers */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6635:6651  _getAllStakers() */\n      tag_303\n        /* \"contracts/PingPongPlay.sol\":6635:6649  _getAllStakers */\n      tag_304\n        /* \"contracts/PingPongPlay.sol\":6635:6651  _getAllStakers() */\n      jump\t// in\n    tag_303:\n        /* \"contracts/PingPongPlay.sol\":6608:6651  address[] memory stakers = _getAllStakers() */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6661:6682  uint256 totalReleased */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6685:6686  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6661:6686  uint256 totalReleased = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6702:6711  uint256 i */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6714:6715  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6702:6715  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6697:7225  for (uint256 i = 0; i < stakers.length; i++) {... */\n    tag_305:\n        /* \"contracts/PingPongPlay.sol\":6721:6728  stakers */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":6721:6735  stakers.length */\n      mload\n        /* \"contracts/PingPongPlay.sol\":6717:6718  i */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":6717:6735  i < stakers.length */\n      lt\n        /* \"contracts/PingPongPlay.sol\":6697:7225  for (uint256 i = 0; i < stakers.length; i++) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":6756:6779  Stake storage userStake */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6782:6788  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":6782:6800  stakes[stakers[i]] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6789:6796  stakers */\n      dup6\n        /* \"contracts/PingPongPlay.sol\":6797:6798  i */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":6789:6799  stakers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_309\n      tag_231\n      jump\t// in\n    tag_309:\n    tag_308:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":6782:6800  stakes[stakers[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":6756:6800  Stake storage userStake = stakes[stakers[i]] */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6814:6835  uint256 pendingReward */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6838:6865  calculateReward(stakers[i]) */\n      tag_310\n        /* \"contracts/PingPongPlay.sol\":6854:6861  stakers */\n      dup6\n        /* \"contracts/PingPongPlay.sol\":6862:6863  i */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":6854:6864  stakers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_312\n      tag_231\n      jump\t// in\n    tag_312:\n    tag_311:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":6838:6853  calculateReward */\n      tag_142\n        /* \"contracts/PingPongPlay.sol\":6838:6865  calculateReward(stakers[i]) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/PingPongPlay.sol\":6814:6865  uint256 pendingReward = calculateReward(stakers[i]) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6899:6900  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6883:6896  pendingReward */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":6883:6900  pendingReward > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":6879:7215  if (pendingReward > 0) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":6920:6971  _transfer(address(this), stakers[i], pendingReward) */\n      tag_314\n        /* \"contracts/PingPongPlay.sol\":6938:6942  this */\n      address\n        /* \"contracts/PingPongPlay.sol\":6945:6952  stakers */\n      dup7\n        /* \"contracts/PingPongPlay.sol\":6953:6954  i */\n      dup6\n        /* \"contracts/PingPongPlay.sol\":6945:6955  stakers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_316\n      tag_231\n      jump\t// in\n    tag_316:\n    tag_315:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":6957:6970  pendingReward */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":6920:6929  _transfer */\n      tag_198\n        /* \"contracts/PingPongPlay.sol\":6920:6971  _transfer(address(this), stakers[i], pendingReward) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/PingPongPlay.sol\":7013:7028  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":6989:6998  userStake */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":6989:7010  userStake.lastClaimed */\n      0x02\n      add\n        /* \"contracts/PingPongPlay.sol\":6989:7028  userStake.lastClaimed = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay.sol\":7103:7135  totalReleased.add(pendingReward) */\n      tag_317\n        /* \"contracts/PingPongPlay.sol\":7121:7134  pendingReward */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7103:7116  totalReleased */\n      dup6\n        /* \"contracts/PingPongPlay.sol\":7103:7120  totalReleased.add */\n      tag_195\n      swap1\n        /* \"contracts/PingPongPlay.sol\":7103:7135  totalReleased.add(pendingReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/PingPongPlay.sol\":7087:7135  totalReleased = totalReleased.add(pendingReward) */\n      swap4\n      pop\n        /* \"contracts/PingPongPlay.sol\":7174:7181  stakers */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":7182:7183  i */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":7174:7184  stakers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_319\n      tag_231\n      jump\t// in\n    tag_319:\n    tag_318:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":7158:7200  InterestClaimed(stakers[i], pendingReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea3530\n        /* \"contracts/PingPongPlay.sol\":7186:7199  pendingReward */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":7158:7200  InterestClaimed(stakers[i], pendingReward) */\n      mload(0x40)\n      tag_320\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PingPongPlay.sol\":6879:7215  if (pendingReward > 0) {... */\n    tag_313:\n        /* \"contracts/PingPongPlay.sol\":6742:7225  {... */\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":6737:6740  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":6697:7225  for (uint256 i = 0; i < stakers.length; i++) {... */\n      jump(tag_305)\n    tag_306:\n      pop\n        /* \"contracts/PingPongPlay.sol\":7248:7282  AllInterestReleased(totalReleased) */\n      0x6a51b76326892cba00f44f8bc83414a1c2e4715f4bc1ebcac12326172ed53f18\n        /* \"contracts/PingPongPlay.sol\":7268:7281  totalReleased */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7248:7282  AllInterestReleased(totalReleased) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PingPongPlay.sol\":6598:7289  {... */\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":6549:7289  function releaseAllInterest() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":6058:6440  function calculateReward(address staker) public view returns (uint256) {... */\n    tag_142:\n        /* \"contracts/PingPongPlay.sol\":6120:6127  uint256 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6139:6161  Stake memory userStake */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6164:6170  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":6164:6178  stakes[staker] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6171:6177  staker */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":6164:6178  stakes[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":6139:6178  Stake memory userStake = stakes[staker] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6212:6213  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6192:6201  userStake */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":6192:6208  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":6192:6213  userStake.amount == 0 */\n      sub\n        /* \"contracts/PingPongPlay.sol\":6188:6223  if (userStake.amount == 0) return 0 */\n      tag_323\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":6222:6223  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6215:6223  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_322)\n        /* \"contracts/PingPongPlay.sol\":6188:6223  if (userStake.amount == 0) return 0 */\n    tag_323:\n        /* \"contracts/PingPongPlay.sol\":6234:6252  uint256 daysStaked */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6299:6305  1 days */\n      0x015180\n        /* \"contracts/PingPongPlay.sol\":6274:6283  userStake */\n      dup3\n        /* \"contracts/PingPongPlay.sol\":6274:6295  userStake.lastClaimed */\n      0x40\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":6256:6271  block.timestamp */\n      timestamp\n        /* \"contracts/PingPongPlay.sol\":6256:6295  block.timestamp - userStake.lastClaimed */\n      tag_324\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_324:\n        /* \"contracts/PingPongPlay.sol\":6255:6305  (block.timestamp - userStake.lastClaimed) / 1 days */\n      tag_325\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_325:\n        /* \"contracts/PingPongPlay.sol\":6234:6305  uint256 daysStaked = (block.timestamp - userStake.lastClaimed) / 1 days */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6315:6335  uint256 annualReward */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":6338:6379  userStake.amount.mul(rewardRate).div(100) */\n      tag_326\n        /* \"contracts/PingPongPlay.sol\":6375:6378  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":6338:6370  userStake.amount.mul(rewardRate) */\n      tag_327\n        /* \"contracts/PingPongPlay.sol\":6359:6369  rewardRate */\n      sload(0x0b)\n        /* \"contracts/PingPongPlay.sol\":6338:6347  userStake */\n      dup7\n        /* \"contracts/PingPongPlay.sol\":6338:6354  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/PingPongPlay.sol\":6338:6358  userStake.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/PingPongPlay.sol\":6338:6370  userStake.amount.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"contracts/PingPongPlay.sol\":6338:6374  userStake.amount.mul(rewardRate).div */\n      tag_189\n      swap1\n        /* \"contracts/PingPongPlay.sol\":6338:6379  userStake.amount.mul(rewardRate).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_326:\n        /* \"contracts/PingPongPlay.sol\":6315:6379  uint256 annualReward = userStake.amount.mul(rewardRate).div(100) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":6396:6433  annualReward.mul(daysStaked).div(365) */\n      tag_328\n        /* \"contracts/PingPongPlay.sol\":6429:6432  365 */\n      0x016d\n        /* \"contracts/PingPongPlay.sol\":6396:6424  annualReward.mul(daysStaked) */\n      tag_329\n        /* \"contracts/PingPongPlay.sol\":6413:6423  daysStaked */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":6396:6408  annualReward */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":6396:6412  annualReward.mul */\n      tag_188\n      swap1\n        /* \"contracts/PingPongPlay.sol\":6396:6424  annualReward.mul(daysStaked) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_329:\n        /* \"contracts/PingPongPlay.sol\":6396:6428  annualReward.mul(daysStaked).div */\n      tag_189\n      swap1\n        /* \"contracts/PingPongPlay.sol\":6396:6433  annualReward.mul(daysStaked).div(365) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"contracts/PingPongPlay.sol\":6389:6433  return annualReward.mul(daysStaked).div(365) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":6058:6440  function calculateReward(address staker) public view returns (uint256) {... */\n    tag_322:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":922:991  uint256 public constant PROJECT_DEVELOPMENT = TOTAL_SUPPLY * 10 / 100 */\n    tag_150:\n        /* \"contracts/PingPongPlay.sol\":988:991  100 */\n      0x64\n        /* \"contracts/PingPongPlay.sol\":983:985  10 */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":647:669  100_000_000 * 10 ** 18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/PingPongPlay.sol\":968:985  TOTAL_SUPPLY * 10 */\n      tag_331\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_331:\n        /* \"contracts/PingPongPlay.sol\":968:991  TOTAL_SUPPLY * 10 / 100 */\n      tag_332\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_332:\n        /* \"contracts/PingPongPlay.sol\":922:991  uint256 public constant PROJECT_DEVELOPMENT = TOTAL_SUPPLY * 10 / 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_338\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":1276:1303  uint256 public teamReleased */\n    tag_156:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap1\n      tag_346\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_344:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_348\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_354\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_356\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_358\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_360\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_366\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_367\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_371\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_376\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_380\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay.sol\":7358:7989  function _getAllStakers() internal view returns (address[] memory) {... */\n    tag_304:\n        /* \"contracts/PingPongPlay.sol\":7407:7423  address[] memory */\n      0x60\n        /* \"contracts/PingPongPlay.sol\":7435:7454  uint256 stakerCount */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7457:7458  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7435:7458  uint256 stakerCount = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7473:7479  uint i */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7482:7483  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7473:7483  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7468:7653  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n    tag_383:\n        /* \"contracts/PingPongPlay.sol\":7489:7503  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":7489:7510  stakeAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7485:7486  i */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7485:7510  i < stakeAddresses.length */\n      lt\n        /* \"contracts/PingPongPlay.sol\":7468:7653  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":7570:7571  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7535:7541  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":7535:7560  stakes[stakeAddresses[i]] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7542:7556  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":7557:7558  i */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":7542:7559  stakeAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_386\n      jumpi\n      tag_387\n      tag_231\n      jump\t// in\n    tag_387:\n    tag_386:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay.sol\":7535:7560  stakes[stakeAddresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":7535:7567  stakes[stakeAddresses[i]].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/PingPongPlay.sol\":7535:7571  stakes[stakeAddresses[i]].amount > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":7531:7643  if (stakes[stakeAddresses[i]].amount > 0) { // corrected line here!... */\n      iszero\n      tag_389\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":7615:7628  stakerCount++ */\n      dup2\n      dup1\n      tag_390\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      swap3\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":7531:7643  if (stakes[stakeAddresses[i]].amount > 0) { // corrected line here!... */\n    tag_389:\n        /* \"contracts/PingPongPlay.sol\":7512:7515  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":7468:7653  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n      jump(tag_383)\n    tag_384:\n      pop\n        /* \"contracts/PingPongPlay.sol\":7662:7686  address[] memory stakers */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7703:7714  stakerCount */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7689:7715  new address[](stakerCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_392\n      jumpi\n      tag_393\n      tag_394\n      jump\t// in\n    tag_393:\n    tag_392:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_395\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_395:\n      pop\n        /* \"contracts/PingPongPlay.sol\":7662:7715  address[] memory stakers = new address[](stakerCount) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7725:7738  uint256 index */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7741:7742  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7725:7742  uint256 index = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7757:7763  uint i */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7766:7767  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7757:7767  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7752:7959  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n    tag_396:\n        /* \"contracts/PingPongPlay.sol\":7773:7787  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":7773:7794  stakeAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/PingPongPlay.sol\":7769:7770  i */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7769:7794  i < stakeAddresses.length */\n      lt\n        /* \"contracts/PingPongPlay.sol\":7752:7959  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n      iszero\n      tag_397\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":7854:7855  0 */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7819:7825  stakes */\n      0x09\n        /* \"contracts/PingPongPlay.sol\":7819:7844  stakes[stakeAddresses[i]] */\n      0x00\n        /* \"contracts/PingPongPlay.sol\":7826:7840  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":7841:7842  i */\n      dup5\n        /* \"contracts/PingPongPlay.sol\":7826:7843  stakeAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_399\n      jumpi\n      tag_400\n      tag_231\n      jump\t// in\n    tag_400:\n    tag_399:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay.sol\":7819:7844  stakes[stakeAddresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay.sol\":7819:7851  stakes[stakeAddresses[i]].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/PingPongPlay.sol\":7819:7855  stakes[stakeAddresses[i]].amount > 0 */\n      gt\n        /* \"contracts/PingPongPlay.sol\":7815:7949  if (stakes[stakeAddresses[i]].amount > 0) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"contracts/PingPongPlay.sol\":7892:7906  stakeAddresses */\n      0x0a\n        /* \"contracts/PingPongPlay.sol\":7907:7908  i */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7892:7909  stakeAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_403\n      jumpi\n      tag_404\n      tag_231\n      jump\t// in\n    tag_404:\n    tag_403:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay.sol\":7875:7882  stakers */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":7883:7888  index */\n      dup4\n        /* \"contracts/PingPongPlay.sol\":7875:7889  stakers[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_406\n      jumpi\n      tag_407\n      tag_231\n      jump\t// in\n    tag_407:\n    tag_406:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PingPongPlay.sol\":7875:7909  stakers[index] = stakeAddresses[i] */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":7927:7934  index++ */\n      dup2\n      dup1\n      tag_408\n      swap1\n      tag_391\n      jump\t// in\n    tag_408:\n      swap3\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":7815:7949  if (stakes[stakeAddresses[i]].amount > 0) {... */\n    tag_402:\n        /* \"contracts/PingPongPlay.sol\":7796:7799  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":7752:7959  for (uint i = 0; i < stakeAddresses.length; i++) {... */\n      jump(tag_396)\n    tag_397:\n      pop\n        /* \"contracts/PingPongPlay.sol\":7975:7982  stakers */\n      dup2\n        /* \"contracts/PingPongPlay.sol\":7968:7982  return stakers */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PingPongPlay.sol\":7358:7989  function _getAllStakers() internal view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_415\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_415:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_418\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_418:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_419)\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_422\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_423)\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_424\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_425:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_426:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_427:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_428:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_429:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_469\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_425\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":711:782   */\n      tag_470\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_426\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_471\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_427\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":881:910   */\n      tag_472\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_428\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_46:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_474\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_429\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_431:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_433:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_434:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_480\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_433\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_435:\n        /* \"#utility.yul\":1876:1900   */\n      tag_482\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_434\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_483:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_436:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_485\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_435\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_437:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_438:\n        /* \"#utility.yul\":2232:2256   */\n      tag_488\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_437\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_489:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_439:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_491\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_438\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_49:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_494\n      tag_431\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":2525:2644   */\n    tag_493:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_495\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_436\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_496\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_439\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_440:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_441:\n        /* \"#utility.yul\":3089:3110   */\n      tag_499\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_440\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_52:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_501\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_441\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_442:\n        /* \"#utility.yul\":3426:3450   */\n      tag_503\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_437\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_58:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_505\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_442\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_61:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_508\n      tag_431\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":3767:3886   */\n    tag_507:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_509\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_436\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4468   */\n    tag_64:\n        /* \"#utility.yul\":4175:4179   */\n      0x00\n        /* \"#utility.yul\":4213:4215   */\n      0x60\n        /* \"#utility.yul\":4202:4211   */\n      dup3\n        /* \"#utility.yul\":4198:4216   */\n      add\n        /* \"#utility.yul\":4190:4216   */\n      swap1\n      pop\n        /* \"#utility.yul\":4226:4297   */\n      tag_511\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4283:4292   */\n      dup4\n        /* \"#utility.yul\":4279:4296   */\n      add\n        /* \"#utility.yul\":4270:4276   */\n      dup7\n        /* \"#utility.yul\":4226:4297   */\n      tag_442\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":4307:4379   */\n      tag_512\n        /* \"#utility.yul\":4375:4377   */\n      0x20\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4360:4378   */\n      add\n        /* \"#utility.yul\":4351:4357   */\n      dup6\n        /* \"#utility.yul\":4307:4379   */\n      tag_442\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4389:4461   */\n      tag_513\n        /* \"#utility.yul\":4457:4459   */\n      0x40\n        /* \"#utility.yul\":4446:4455   */\n      dup4\n        /* \"#utility.yul\":4442:4460   */\n      add\n        /* \"#utility.yul\":4433:4439   */\n      dup5\n        /* \"#utility.yul\":4389:4461   */\n      tag_442\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":4026:4468   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4474:5093   */\n    tag_73:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4559:4565   */\n      0x00\n        /* \"#utility.yul\":4567:4573   */\n      0x00\n        /* \"#utility.yul\":4616:4618   */\n      0x60\n        /* \"#utility.yul\":4604:4613   */\n      dup5\n        /* \"#utility.yul\":4595:4602   */\n      dup7\n        /* \"#utility.yul\":4591:4614   */\n      sub\n        /* \"#utility.yul\":4587:4619   */\n      slt\n        /* \"#utility.yul\":4584:4703   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":4622:4701   */\n      tag_516\n      tag_431\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4584:4703   */\n    tag_515:\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4767:4820   */\n      tag_517\n        /* \"#utility.yul\":4812:4819   */\n      dup7\n        /* \"#utility.yul\":4803:4809   */\n      dup3\n        /* \"#utility.yul\":4792:4801   */\n      dup8\n        /* \"#utility.yul\":4788:4810   */\n      add\n        /* \"#utility.yul\":4767:4820   */\n      tag_436\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4757:4820   */\n      swap4\n      pop\n        /* \"#utility.yul\":4713:4830   */\n      pop\n        /* \"#utility.yul\":4869:4871   */\n      0x20\n        /* \"#utility.yul\":4895:4948   */\n      tag_518\n        /* \"#utility.yul\":4940:4947   */\n      dup7\n        /* \"#utility.yul\":4931:4937   */\n      dup3\n        /* \"#utility.yul\":4920:4929   */\n      dup8\n        /* \"#utility.yul\":4916:4938   */\n      add\n        /* \"#utility.yul\":4895:4948   */\n      tag_436\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":4885:4948   */\n      swap3\n      pop\n        /* \"#utility.yul\":4840:4958   */\n      pop\n        /* \"#utility.yul\":4997:4999   */\n      0x40\n        /* \"#utility.yul\":5023:5076   */\n      tag_519\n        /* \"#utility.yul\":5068:5075   */\n      dup7\n        /* \"#utility.yul\":5059:5065   */\n      dup3\n        /* \"#utility.yul\":5048:5057   */\n      dup8\n        /* \"#utility.yul\":5044:5066   */\n      add\n        /* \"#utility.yul\":5023:5076   */\n      tag_439\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":5013:5076   */\n      swap2\n      pop\n        /* \"#utility.yul\":4968:5086   */\n      pop\n        /* \"#utility.yul\":4474:5093   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5099:5428   */\n    tag_81:\n        /* \"#utility.yul\":5158:5164   */\n      0x00\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5195:5204   */\n      dup3\n        /* \"#utility.yul\":5186:5193   */\n      dup5\n        /* \"#utility.yul\":5182:5205   */\n      sub\n        /* \"#utility.yul\":5178:5210   */\n      slt\n        /* \"#utility.yul\":5175:5294   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":5213:5292   */\n      tag_522\n      tag_431\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5175:5294   */\n    tag_521:\n        /* \"#utility.yul\":5333:5334   */\n      0x00\n        /* \"#utility.yul\":5358:5411   */\n      tag_523\n        /* \"#utility.yul\":5403:5410   */\n      dup5\n        /* \"#utility.yul\":5394:5400   */\n      dup3\n        /* \"#utility.yul\":5383:5392   */\n      dup6\n        /* \"#utility.yul\":5379:5401   */\n      add\n        /* \"#utility.yul\":5358:5411   */\n      tag_439\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5348:5411   */\n      swap2\n      pop\n        /* \"#utility.yul\":5304:5421   */\n      pop\n        /* \"#utility.yul\":5099:5428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5434:5552   */\n    tag_443:\n        /* \"#utility.yul\":5521:5545   */\n      tag_525\n        /* \"#utility.yul\":5539:5544   */\n      dup2\n        /* \"#utility.yul\":5521:5545   */\n      tag_434\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5516:5519   */\n      dup3\n        /* \"#utility.yul\":5509:5546   */\n      mstore\n        /* \"#utility.yul\":5434:5552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:5780   */\n    tag_84:\n        /* \"#utility.yul\":5651:5655   */\n      0x00\n        /* \"#utility.yul\":5689:5691   */\n      0x20\n        /* \"#utility.yul\":5678:5687   */\n      dup3\n        /* \"#utility.yul\":5674:5692   */\n      add\n        /* \"#utility.yul\":5666:5692   */\n      swap1\n      pop\n        /* \"#utility.yul\":5702:5773   */\n      tag_527\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5759:5768   */\n      dup4\n        /* \"#utility.yul\":5755:5772   */\n      add\n        /* \"#utility.yul\":5746:5752   */\n      dup5\n        /* \"#utility.yul\":5702:5773   */\n      tag_443\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":5558:5780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5786:5872   */\n    tag_444:\n        /* \"#utility.yul\":5821:5828   */\n      0x00\n        /* \"#utility.yul\":5861:5865   */\n      0xff\n        /* \"#utility.yul\":5854:5859   */\n      dup3\n        /* \"#utility.yul\":5850:5866   */\n      and\n        /* \"#utility.yul\":5839:5866   */\n      swap1\n      pop\n        /* \"#utility.yul\":5786:5872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5878:5990   */\n    tag_445:\n        /* \"#utility.yul\":5961:5983   */\n      tag_530\n        /* \"#utility.yul\":5977:5982   */\n      dup2\n        /* \"#utility.yul\":5961:5983   */\n      tag_444\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":5956:5959   */\n      dup3\n        /* \"#utility.yul\":5949:5984   */\n      mstore\n        /* \"#utility.yul\":5878:5990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5996:6210   */\n    tag_91:\n        /* \"#utility.yul\":6085:6089   */\n      0x00\n        /* \"#utility.yul\":6123:6125   */\n      0x20\n        /* \"#utility.yul\":6112:6121   */\n      dup3\n        /* \"#utility.yul\":6108:6126   */\n      add\n        /* \"#utility.yul\":6100:6126   */\n      swap1\n      pop\n        /* \"#utility.yul\":6136:6203   */\n      tag_532\n        /* \"#utility.yul\":6200:6201   */\n      0x00\n        /* \"#utility.yul\":6189:6198   */\n      dup4\n        /* \"#utility.yul\":6185:6202   */\n      add\n        /* \"#utility.yul\":6176:6182   */\n      dup5\n        /* \"#utility.yul\":6136:6203   */\n      tag_445\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":5996:6210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6216:6690   */\n    tag_146:\n        /* \"#utility.yul\":6284:6290   */\n      0x00\n        /* \"#utility.yul\":6292:6298   */\n      0x00\n        /* \"#utility.yul\":6341:6343   */\n      0x40\n        /* \"#utility.yul\":6329:6338   */\n      dup4\n        /* \"#utility.yul\":6320:6327   */\n      dup6\n        /* \"#utility.yul\":6316:6339   */\n      sub\n        /* \"#utility.yul\":6312:6344   */\n      slt\n        /* \"#utility.yul\":6309:6428   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":6347:6426   */\n      tag_535\n      tag_431\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6309:6428   */\n    tag_534:\n        /* \"#utility.yul\":6467:6468   */\n      0x00\n        /* \"#utility.yul\":6492:6545   */\n      tag_536\n        /* \"#utility.yul\":6537:6544   */\n      dup6\n        /* \"#utility.yul\":6528:6534   */\n      dup3\n        /* \"#utility.yul\":6517:6526   */\n      dup7\n        /* \"#utility.yul\":6513:6535   */\n      add\n        /* \"#utility.yul\":6492:6545   */\n      tag_436\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":6482:6545   */\n      swap3\n      pop\n        /* \"#utility.yul\":6438:6555   */\n      pop\n        /* \"#utility.yul\":6594:6596   */\n      0x20\n        /* \"#utility.yul\":6620:6673   */\n      tag_537\n        /* \"#utility.yul\":6665:6672   */\n      dup6\n        /* \"#utility.yul\":6656:6662   */\n      dup3\n        /* \"#utility.yul\":6645:6654   */\n      dup7\n        /* \"#utility.yul\":6641:6663   */\n      add\n        /* \"#utility.yul\":6620:6673   */\n      tag_436\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6610:6673   */\n      swap2\n      pop\n        /* \"#utility.yul\":6565:6683   */\n      pop\n        /* \"#utility.yul\":6216:6690   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6696:6876   */\n    tag_446:\n        /* \"#utility.yul\":6744:6821   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6741:6742   */\n      0x00\n        /* \"#utility.yul\":6734:6822   */\n      mstore\n        /* \"#utility.yul\":6841:6845   */\n      0x22\n        /* \"#utility.yul\":6838:6839   */\n      0x04\n        /* \"#utility.yul\":6831:6846   */\n      mstore\n        /* \"#utility.yul\":6865:6869   */\n      0x24\n        /* \"#utility.yul\":6862:6863   */\n      0x00\n        /* \"#utility.yul\":6855:6870   */\n      revert\n        /* \"#utility.yul\":6882:7202   */\n    tag_160:\n        /* \"#utility.yul\":6926:6932   */\n      0x00\n        /* \"#utility.yul\":6963:6964   */\n      0x02\n        /* \"#utility.yul\":6957:6961   */\n      dup3\n        /* \"#utility.yul\":6953:6965   */\n      div\n        /* \"#utility.yul\":6943:6965   */\n      swap1\n      pop\n        /* \"#utility.yul\":7010:7011   */\n      0x01\n        /* \"#utility.yul\":7004:7008   */\n      dup3\n        /* \"#utility.yul\":7000:7012   */\n      and\n        /* \"#utility.yul\":7031:7049   */\n      dup1\n        /* \"#utility.yul\":7021:7102   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":7087:7091   */\n      0x7f\n        /* \"#utility.yul\":7079:7085   */\n      dup3\n        /* \"#utility.yul\":7075:7092   */\n      and\n        /* \"#utility.yul\":7065:7092   */\n      swap2\n      pop\n        /* \"#utility.yul\":7021:7102   */\n    tag_540:\n        /* \"#utility.yul\":7149:7151   */\n      0x20\n        /* \"#utility.yul\":7141:7147   */\n      dup3\n        /* \"#utility.yul\":7138:7152   */\n      lt\n        /* \"#utility.yul\":7118:7136   */\n      dup2\n        /* \"#utility.yul\":7115:7153   */\n      sub\n        /* \"#utility.yul\":7112:7196   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":7168:7186   */\n      tag_542\n      tag_446\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":7112:7196   */\n    tag_541:\n        /* \"#utility.yul\":6933:7202   */\n      pop\n        /* \"#utility.yul\":6882:7202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7377   */\n    tag_447:\n        /* \"#utility.yul\":7348:7369   */\n      0x56657374696e67206e6f74207374617274656400000000000000000000000000\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7336:7342   */\n      dup3\n        /* \"#utility.yul\":7332:7346   */\n      add\n        /* \"#utility.yul\":7325:7370   */\n      mstore\n        /* \"#utility.yul\":7208:7377   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7383:7749   */\n    tag_448:\n        /* \"#utility.yul\":7525:7528   */\n      0x00\n        /* \"#utility.yul\":7546:7613   */\n      tag_545\n        /* \"#utility.yul\":7610:7612   */\n      0x13\n        /* \"#utility.yul\":7605:7608   */\n      dup4\n        /* \"#utility.yul\":7546:7613   */\n      tag_426\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7539:7613   */\n      swap2\n      pop\n        /* \"#utility.yul\":7622:7715   */\n      tag_546\n        /* \"#utility.yul\":7711:7714   */\n      dup3\n        /* \"#utility.yul\":7622:7715   */\n      tag_447\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":7740:7742   */\n      0x20\n        /* \"#utility.yul\":7735:7738   */\n      dup3\n        /* \"#utility.yul\":7731:7743   */\n      add\n        /* \"#utility.yul\":7724:7743   */\n      swap1\n      pop\n        /* \"#utility.yul\":7383:7749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7755:8174   */\n    tag_179:\n        /* \"#utility.yul\":7921:7925   */\n      0x00\n        /* \"#utility.yul\":7959:7961   */\n      0x20\n        /* \"#utility.yul\":7948:7957   */\n      dup3\n        /* \"#utility.yul\":7944:7962   */\n      add\n        /* \"#utility.yul\":7936:7962   */\n      swap1\n      pop\n        /* \"#utility.yul\":8008:8017   */\n      dup2\n        /* \"#utility.yul\":8002:8006   */\n      dup2\n        /* \"#utility.yul\":7998:8018   */\n      sub\n        /* \"#utility.yul\":7994:7995   */\n      0x00\n        /* \"#utility.yul\":7983:7992   */\n      dup4\n        /* \"#utility.yul\":7979:7996   */\n      add\n        /* \"#utility.yul\":7972:8019   */\n      mstore\n        /* \"#utility.yul\":8036:8167   */\n      tag_548\n        /* \"#utility.yul\":8162:8166   */\n      dup2\n        /* \"#utility.yul\":8036:8167   */\n      tag_448\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8028:8167   */\n      swap1\n      pop\n        /* \"#utility.yul\":7755:8174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8180:8360   */\n    tag_449:\n        /* \"#utility.yul\":8228:8305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8225:8226   */\n      0x00\n        /* \"#utility.yul\":8218:8306   */\n      mstore\n        /* \"#utility.yul\":8325:8329   */\n      0x11\n        /* \"#utility.yul\":8322:8323   */\n      0x04\n        /* \"#utility.yul\":8315:8330   */\n      mstore\n        /* \"#utility.yul\":8349:8353   */\n      0x24\n        /* \"#utility.yul\":8346:8347   */\n      0x00\n        /* \"#utility.yul\":8339:8354   */\n      revert\n        /* \"#utility.yul\":8366:8776   */\n    tag_185:\n        /* \"#utility.yul\":8406:8413   */\n      0x00\n        /* \"#utility.yul\":8429:8449   */\n      tag_551\n        /* \"#utility.yul\":8447:8448   */\n      dup3\n        /* \"#utility.yul\":8429:8449   */\n      tag_437\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":8424:8449   */\n      swap2\n      pop\n        /* \"#utility.yul\":8463:8483   */\n      tag_552\n        /* \"#utility.yul\":8481:8482   */\n      dup4\n        /* \"#utility.yul\":8463:8483   */\n      tag_437\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8458:8483   */\n      swap3\n      pop\n        /* \"#utility.yul\":8518:8519   */\n      dup3\n        /* \"#utility.yul\":8515:8516   */\n      dup3\n        /* \"#utility.yul\":8511:8520   */\n      mul\n        /* \"#utility.yul\":8540:8570   */\n      tag_553\n        /* \"#utility.yul\":8558:8569   */\n      dup2\n        /* \"#utility.yul\":8540:8570   */\n      tag_437\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":8529:8570   */\n      swap2\n      pop\n        /* \"#utility.yul\":8719:8720   */\n      dup3\n        /* \"#utility.yul\":8710:8717   */\n      dup3\n        /* \"#utility.yul\":8706:8721   */\n      div\n        /* \"#utility.yul\":8703:8704   */\n      dup5\n        /* \"#utility.yul\":8700:8722   */\n      eq\n        /* \"#utility.yul\":8680:8681   */\n      dup4\n        /* \"#utility.yul\":8673:8682   */\n      iszero\n        /* \"#utility.yul\":8653:8736   */\n      or\n        /* \"#utility.yul\":8630:8769   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":8749:8767   */\n      tag_555\n      tag_449\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8630:8769   */\n    tag_554:\n        /* \"#utility.yul\":8414:8776   */\n      pop\n        /* \"#utility.yul\":8366:8776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8782:8962   */\n    tag_450:\n        /* \"#utility.yul\":8830:8907   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8827:8828   */\n      0x00\n        /* \"#utility.yul\":8820:8908   */\n      mstore\n        /* \"#utility.yul\":8927:8931   */\n      0x12\n        /* \"#utility.yul\":8924:8925   */\n      0x04\n        /* \"#utility.yul\":8917:8932   */\n      mstore\n        /* \"#utility.yul\":8951:8955   */\n      0x24\n        /* \"#utility.yul\":8948:8949   */\n      0x00\n        /* \"#utility.yul\":8941:8956   */\n      revert\n        /* \"#utility.yul\":8968:9153   */\n    tag_187:\n        /* \"#utility.yul\":9008:9009   */\n      0x00\n        /* \"#utility.yul\":9025:9045   */\n      tag_558\n        /* \"#utility.yul\":9043:9044   */\n      dup3\n        /* \"#utility.yul\":9025:9045   */\n      tag_437\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9020:9045   */\n      swap2\n      pop\n        /* \"#utility.yul\":9059:9079   */\n      tag_559\n        /* \"#utility.yul\":9077:9078   */\n      dup4\n        /* \"#utility.yul\":9059:9079   */\n      tag_437\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":9054:9079   */\n      swap3\n      pop\n        /* \"#utility.yul\":9098:9099   */\n      dup3\n        /* \"#utility.yul\":9088:9123   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":9103:9121   */\n      tag_561\n      tag_450\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9088:9123   */\n    tag_560:\n        /* \"#utility.yul\":9145:9146   */\n      dup3\n        /* \"#utility.yul\":9142:9143   */\n      dup3\n        /* \"#utility.yul\":9138:9147   */\n      div\n        /* \"#utility.yul\":9133:9147   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:9153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9159:9329   */\n    tag_451:\n        /* \"#utility.yul\":9299:9321   */\n      0x4e6f20746f6b656e7320746f2072656c65617365000000000000000000000000\n        /* \"#utility.yul\":9295:9296   */\n      0x00\n        /* \"#utility.yul\":9287:9293   */\n      dup3\n        /* \"#utility.yul\":9283:9297   */\n      add\n        /* \"#utility.yul\":9276:9322   */\n      mstore\n        /* \"#utility.yul\":9159:9329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9335:9701   */\n    tag_452:\n        /* \"#utility.yul\":9477:9480   */\n      0x00\n        /* \"#utility.yul\":9498:9565   */\n      tag_564\n        /* \"#utility.yul\":9562:9564   */\n      0x14\n        /* \"#utility.yul\":9557:9560   */\n      dup4\n        /* \"#utility.yul\":9498:9565   */\n      tag_426\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":9491:9565   */\n      swap2\n      pop\n        /* \"#utility.yul\":9574:9667   */\n      tag_565\n        /* \"#utility.yul\":9663:9666   */\n      dup3\n        /* \"#utility.yul\":9574:9667   */\n      tag_451\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":9692:9694   */\n      0x20\n        /* \"#utility.yul\":9687:9690   */\n      dup3\n        /* \"#utility.yul\":9683:9695   */\n      add\n        /* \"#utility.yul\":9676:9695   */\n      swap1\n      pop\n        /* \"#utility.yul\":9335:9701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9707:10126   */\n    tag_193:\n        /* \"#utility.yul\":9873:9877   */\n      0x00\n        /* \"#utility.yul\":9911:9913   */\n      0x20\n        /* \"#utility.yul\":9900:9909   */\n      dup3\n        /* \"#utility.yul\":9896:9914   */\n      add\n        /* \"#utility.yul\":9888:9914   */\n      swap1\n      pop\n        /* \"#utility.yul\":9960:9969   */\n      dup2\n        /* \"#utility.yul\":9954:9958   */\n      dup2\n        /* \"#utility.yul\":9950:9970   */\n      sub\n        /* \"#utility.yul\":9946:9947   */\n      0x00\n        /* \"#utility.yul\":9935:9944   */\n      dup4\n        /* \"#utility.yul\":9931:9948   */\n      add\n        /* \"#utility.yul\":9924:9971   */\n      mstore\n        /* \"#utility.yul\":9988:10119   */\n      tag_567\n        /* \"#utility.yul\":10114:10118   */\n      dup2\n        /* \"#utility.yul\":9988:10119   */\n      tag_452\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":9980:10119   */\n      swap1\n      pop\n        /* \"#utility.yul\":9707:10126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10132:10305   */\n    tag_453:\n        /* \"#utility.yul\":10272:10297   */\n      0x43616e6e6f7420756e7374616b65203020746f6b656e73000000000000000000\n        /* \"#utility.yul\":10268:10269   */\n      0x00\n        /* \"#utility.yul\":10260:10266   */\n      dup3\n        /* \"#utility.yul\":10256:10270   */\n      add\n        /* \"#utility.yul\":10249:10298   */\n      mstore\n        /* \"#utility.yul\":10132:10305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10311:10677   */\n    tag_454:\n        /* \"#utility.yul\":10453:10456   */\n      0x00\n        /* \"#utility.yul\":10474:10541   */\n      tag_570\n        /* \"#utility.yul\":10538:10540   */\n      0x17\n        /* \"#utility.yul\":10533:10536   */\n      dup4\n        /* \"#utility.yul\":10474:10541   */\n      tag_426\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":10467:10541   */\n      swap2\n      pop\n        /* \"#utility.yul\":10550:10643   */\n      tag_571\n        /* \"#utility.yul\":10639:10642   */\n      dup3\n        /* \"#utility.yul\":10550:10643   */\n      tag_453\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10668:10670   */\n      0x20\n        /* \"#utility.yul\":10663:10666   */\n      dup3\n        /* \"#utility.yul\":10659:10671   */\n      add\n        /* \"#utility.yul\":10652:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10311:10677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:11102   */\n    tag_218:\n        /* \"#utility.yul\":10849:10853   */\n      0x00\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"#utility.yul\":10876:10885   */\n      dup3\n        /* \"#utility.yul\":10872:10890   */\n      add\n        /* \"#utility.yul\":10864:10890   */\n      swap1\n      pop\n        /* \"#utility.yul\":10936:10945   */\n      dup2\n        /* \"#utility.yul\":10930:10934   */\n      dup2\n        /* \"#utility.yul\":10926:10946   */\n      sub\n        /* \"#utility.yul\":10922:10923   */\n      0x00\n        /* \"#utility.yul\":10911:10920   */\n      dup4\n        /* \"#utility.yul\":10907:10924   */\n      add\n        /* \"#utility.yul\":10900:10947   */\n      mstore\n        /* \"#utility.yul\":10964:11095   */\n      tag_573\n        /* \"#utility.yul\":11090:11094   */\n      dup2\n        /* \"#utility.yul\":10964:11095   */\n      tag_454\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":10956:11095   */\n      swap1\n      pop\n        /* \"#utility.yul\":10683:11102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11108:11284   */\n    tag_455:\n        /* \"#utility.yul\":11248:11276   */\n      0x496e73756666696369656e74207374616b656420616d6f756e74000000000000\n        /* \"#utility.yul\":11244:11245   */\n      0x00\n        /* \"#utility.yul\":11236:11242   */\n      dup3\n        /* \"#utility.yul\":11232:11246   */\n      add\n        /* \"#utility.yul\":11225:11277   */\n      mstore\n        /* \"#utility.yul\":11108:11284   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11290:11656   */\n    tag_456:\n        /* \"#utility.yul\":11432:11435   */\n      0x00\n        /* \"#utility.yul\":11453:11520   */\n      tag_576\n        /* \"#utility.yul\":11517:11519   */\n      0x1a\n        /* \"#utility.yul\":11512:11515   */\n      dup4\n        /* \"#utility.yul\":11453:11520   */\n      tag_426\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":11446:11520   */\n      swap2\n      pop\n        /* \"#utility.yul\":11529:11622   */\n      tag_577\n        /* \"#utility.yul\":11618:11621   */\n      dup3\n        /* \"#utility.yul\":11529:11622   */\n      tag_455\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11647:11649   */\n      0x20\n        /* \"#utility.yul\":11642:11645   */\n      dup3\n        /* \"#utility.yul\":11638:11650   */\n      add\n        /* \"#utility.yul\":11631:11650   */\n      swap1\n      pop\n        /* \"#utility.yul\":11290:11656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11662:12081   */\n    tag_221:\n        /* \"#utility.yul\":11828:11832   */\n      0x00\n        /* \"#utility.yul\":11866:11868   */\n      0x20\n        /* \"#utility.yul\":11855:11864   */\n      dup3\n        /* \"#utility.yul\":11851:11869   */\n      add\n        /* \"#utility.yul\":11843:11869   */\n      swap1\n      pop\n        /* \"#utility.yul\":11915:11924   */\n      dup2\n        /* \"#utility.yul\":11909:11913   */\n      dup2\n        /* \"#utility.yul\":11905:11925   */\n      sub\n        /* \"#utility.yul\":11901:11902   */\n      0x00\n        /* \"#utility.yul\":11890:11899   */\n      dup4\n        /* \"#utility.yul\":11886:11903   */\n      add\n        /* \"#utility.yul\":11879:11926   */\n      mstore\n        /* \"#utility.yul\":11943:12074   */\n      tag_579\n        /* \"#utility.yul\":12069:12073   */\n      dup2\n        /* \"#utility.yul\":11943:12074   */\n      tag_456\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":11935:12074   */\n      swap1\n      pop\n        /* \"#utility.yul\":11662:12081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12087:12267   */\n    tag_231:\n        /* \"#utility.yul\":12135:12212   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12132:12133   */\n      0x00\n        /* \"#utility.yul\":12125:12213   */\n      mstore\n        /* \"#utility.yul\":12232:12236   */\n      0x32\n        /* \"#utility.yul\":12229:12230   */\n      0x04\n        /* \"#utility.yul\":12222:12237   */\n      mstore\n        /* \"#utility.yul\":12256:12260   */\n      0x24\n        /* \"#utility.yul\":12253:12254   */\n      0x00\n        /* \"#utility.yul\":12246:12261   */\n      revert\n        /* \"#utility.yul\":12273:12467   */\n    tag_235:\n        /* \"#utility.yul\":12313:12317   */\n      0x00\n        /* \"#utility.yul\":12333:12353   */\n      tag_582\n        /* \"#utility.yul\":12351:12352   */\n      dup3\n        /* \"#utility.yul\":12333:12353   */\n      tag_437\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":12328:12353   */\n      swap2\n      pop\n        /* \"#utility.yul\":12367:12387   */\n      tag_583\n        /* \"#utility.yul\":12385:12386   */\n      dup4\n        /* \"#utility.yul\":12367:12387   */\n      tag_437\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":12362:12387   */\n      swap3\n      pop\n        /* \"#utility.yul\":12411:12412   */\n      dup3\n        /* \"#utility.yul\":12408:12409   */\n      dup3\n        /* \"#utility.yul\":12404:12413   */\n      sub\n        /* \"#utility.yul\":12396:12413   */\n      swap1\n      pop\n        /* \"#utility.yul\":12435:12436   */\n      dup2\n        /* \"#utility.yul\":12429:12433   */\n      dup2\n        /* \"#utility.yul\":12426:12437   */\n      gt\n        /* \"#utility.yul\":12423:12460   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":12440:12458   */\n      tag_585\n      tag_449\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":12423:12460   */\n    tag_584:\n        /* \"#utility.yul\":12273:12467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12473:12653   */\n    tag_244:\n        /* \"#utility.yul\":12521:12598   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12518:12519   */\n      0x00\n        /* \"#utility.yul\":12511:12599   */\n      mstore\n        /* \"#utility.yul\":12618:12622   */\n      0x31\n        /* \"#utility.yul\":12615:12616   */\n      0x04\n        /* \"#utility.yul\":12608:12623   */\n      mstore\n        /* \"#utility.yul\":12642:12646   */\n      0x24\n        /* \"#utility.yul\":12639:12640   */\n      0x00\n        /* \"#utility.yul\":12632:12647   */\n      revert\n        /* \"#utility.yul\":12659:12880   */\n    tag_457:\n        /* \"#utility.yul\":12799:12833   */\n      0x5265776172642072617465206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":12795:12796   */\n      0x00\n        /* \"#utility.yul\":12787:12793   */\n      dup3\n        /* \"#utility.yul\":12783:12797   */\n      add\n        /* \"#utility.yul\":12776:12834   */\n      mstore\n        /* \"#utility.yul\":12868:12872   */\n      0x2030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12863:12865   */\n      0x20\n        /* \"#utility.yul\":12855:12861   */\n      dup3\n        /* \"#utility.yul\":12851:12866   */\n      add\n        /* \"#utility.yul\":12844:12873   */\n      mstore\n        /* \"#utility.yul\":12659:12880   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12886:13252   */\n    tag_458:\n        /* \"#utility.yul\":13028:13031   */\n      0x00\n        /* \"#utility.yul\":13049:13116   */\n      tag_589\n        /* \"#utility.yul\":13113:13115   */\n      0x22\n        /* \"#utility.yul\":13108:13111   */\n      dup4\n        /* \"#utility.yul\":13049:13116   */\n      tag_426\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":13042:13116   */\n      swap2\n      pop\n        /* \"#utility.yul\":13125:13218   */\n      tag_590\n        /* \"#utility.yul\":13214:13217   */\n      dup3\n        /* \"#utility.yul\":13125:13218   */\n      tag_457\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13243:13245   */\n      0x40\n        /* \"#utility.yul\":13238:13241   */\n      dup3\n        /* \"#utility.yul\":13234:13246   */\n      add\n        /* \"#utility.yul\":13227:13246   */\n      swap1\n      pop\n        /* \"#utility.yul\":12886:13252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13258:13677   */\n    tag_282:\n        /* \"#utility.yul\":13424:13428   */\n      0x00\n        /* \"#utility.yul\":13462:13464   */\n      0x20\n        /* \"#utility.yul\":13451:13460   */\n      dup3\n        /* \"#utility.yul\":13447:13465   */\n      add\n        /* \"#utility.yul\":13439:13465   */\n      swap1\n      pop\n        /* \"#utility.yul\":13511:13520   */\n      dup2\n        /* \"#utility.yul\":13505:13509   */\n      dup2\n        /* \"#utility.yul\":13501:13521   */\n      sub\n        /* \"#utility.yul\":13497:13498   */\n      0x00\n        /* \"#utility.yul\":13486:13495   */\n      dup4\n        /* \"#utility.yul\":13482:13499   */\n      add\n        /* \"#utility.yul\":13475:13522   */\n      mstore\n        /* \"#utility.yul\":13539:13670   */\n      tag_592\n        /* \"#utility.yul\":13665:13669   */\n      dup2\n        /* \"#utility.yul\":13539:13670   */\n      tag_458\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":13531:13670   */\n      swap1\n      pop\n        /* \"#utility.yul\":13258:13677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13683:13854   */\n    tag_459:\n        /* \"#utility.yul\":13823:13846   */\n      0x43616e6e6f74207374616b65203020746f6b656e730000000000000000000000\n        /* \"#utility.yul\":13819:13820   */\n      0x00\n        /* \"#utility.yul\":13811:13817   */\n      dup3\n        /* \"#utility.yul\":13807:13821   */\n      add\n        /* \"#utility.yul\":13800:13847   */\n      mstore\n        /* \"#utility.yul\":13683:13854   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13860:14226   */\n    tag_460:\n        /* \"#utility.yul\":14002:14005   */\n      0x00\n        /* \"#utility.yul\":14023:14090   */\n      tag_595\n        /* \"#utility.yul\":14087:14089   */\n      0x15\n        /* \"#utility.yul\":14082:14085   */\n      dup4\n        /* \"#utility.yul\":14023:14090   */\n      tag_426\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":14016:14090   */\n      swap2\n      pop\n        /* \"#utility.yul\":14099:14192   */\n      tag_596\n        /* \"#utility.yul\":14188:14191   */\n      dup3\n        /* \"#utility.yul\":14099:14192   */\n      tag_459\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":14217:14219   */\n      0x20\n        /* \"#utility.yul\":14212:14215   */\n      dup3\n        /* \"#utility.yul\":14208:14220   */\n      add\n        /* \"#utility.yul\":14201:14220   */\n      swap1\n      pop\n        /* \"#utility.yul\":13860:14226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14232:14651   */\n    tag_288:\n        /* \"#utility.yul\":14398:14402   */\n      0x00\n        /* \"#utility.yul\":14436:14438   */\n      0x20\n        /* \"#utility.yul\":14425:14434   */\n      dup3\n        /* \"#utility.yul\":14421:14439   */\n      add\n        /* \"#utility.yul\":14413:14439   */\n      swap1\n      pop\n        /* \"#utility.yul\":14485:14494   */\n      dup2\n        /* \"#utility.yul\":14479:14483   */\n      dup2\n        /* \"#utility.yul\":14475:14495   */\n      sub\n        /* \"#utility.yul\":14471:14472   */\n      0x00\n        /* \"#utility.yul\":14460:14469   */\n      dup4\n        /* \"#utility.yul\":14456:14473   */\n      add\n        /* \"#utility.yul\":14449:14496   */\n      mstore\n        /* \"#utility.yul\":14513:14644   */\n      tag_598\n        /* \"#utility.yul\":14639:14643   */\n      dup2\n        /* \"#utility.yul\":14513:14644   */\n      tag_460\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":14505:14644   */\n      swap1\n      pop\n        /* \"#utility.yul\":14232:14651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14657:14838   */\n    tag_461:\n        /* \"#utility.yul\":14797:14830   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14793:14794   */\n      0x00\n        /* \"#utility.yul\":14785:14791   */\n      dup3\n        /* \"#utility.yul\":14781:14795   */\n      add\n        /* \"#utility.yul\":14774:14831   */\n      mstore\n        /* \"#utility.yul\":14657:14838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14844:15210   */\n    tag_462:\n        /* \"#utility.yul\":14986:14989   */\n      0x00\n        /* \"#utility.yul\":15007:15074   */\n      tag_601\n        /* \"#utility.yul\":15071:15073   */\n      0x1f\n        /* \"#utility.yul\":15066:15069   */\n      dup4\n        /* \"#utility.yul\":15007:15074   */\n      tag_426\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":15000:15074   */\n      swap2\n      pop\n        /* \"#utility.yul\":15083:15176   */\n      tag_602\n        /* \"#utility.yul\":15172:15175   */\n      dup3\n        /* \"#utility.yul\":15083:15176   */\n      tag_461\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15201:15203   */\n      0x20\n        /* \"#utility.yul\":15196:15199   */\n      dup3\n        /* \"#utility.yul\":15192:15204   */\n      add\n        /* \"#utility.yul\":15185:15204   */\n      swap1\n      pop\n        /* \"#utility.yul\":14844:15210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15216:15635   */\n    tag_346:\n        /* \"#utility.yul\":15382:15386   */\n      0x00\n        /* \"#utility.yul\":15420:15422   */\n      0x20\n        /* \"#utility.yul\":15409:15418   */\n      dup3\n        /* \"#utility.yul\":15405:15423   */\n      add\n        /* \"#utility.yul\":15397:15423   */\n      swap1\n      pop\n        /* \"#utility.yul\":15469:15478   */\n      dup2\n        /* \"#utility.yul\":15463:15467   */\n      dup2\n        /* \"#utility.yul\":15459:15479   */\n      sub\n        /* \"#utility.yul\":15455:15456   */\n      0x00\n        /* \"#utility.yul\":15444:15453   */\n      dup4\n        /* \"#utility.yul\":15440:15457   */\n      add\n        /* \"#utility.yul\":15433:15480   */\n      mstore\n        /* \"#utility.yul\":15497:15628   */\n      tag_604\n        /* \"#utility.yul\":15623:15627   */\n      dup2\n        /* \"#utility.yul\":15497:15628   */\n      tag_462\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15489:15628   */\n      swap1\n      pop\n        /* \"#utility.yul\":15216:15635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15641:15832   */\n    tag_361:\n        /* \"#utility.yul\":15681:15684   */\n      0x00\n        /* \"#utility.yul\":15700:15720   */\n      tag_606\n        /* \"#utility.yul\":15718:15719   */\n      dup3\n        /* \"#utility.yul\":15700:15720   */\n      tag_437\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15695:15720   */\n      swap2\n      pop\n        /* \"#utility.yul\":15734:15754   */\n      tag_607\n        /* \"#utility.yul\":15752:15753   */\n      dup4\n        /* \"#utility.yul\":15734:15754   */\n      tag_437\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":15729:15754   */\n      swap3\n      pop\n        /* \"#utility.yul\":15777:15778   */\n      dup3\n        /* \"#utility.yul\":15774:15775   */\n      dup3\n        /* \"#utility.yul\":15770:15779   */\n      add\n        /* \"#utility.yul\":15763:15779   */\n      swap1\n      pop\n        /* \"#utility.yul\":15798:15801   */\n      dup1\n        /* \"#utility.yul\":15795:15796   */\n      dup3\n        /* \"#utility.yul\":15792:15802   */\n      gt\n        /* \"#utility.yul\":15789:15825   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":15805:15823   */\n      tag_609\n      tag_449\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":15789:15825   */\n    tag_608:\n        /* \"#utility.yul\":15641:15832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15838:16280   */\n    tag_375:\n        /* \"#utility.yul\":15987:15991   */\n      0x00\n        /* \"#utility.yul\":16025:16027   */\n      0x60\n        /* \"#utility.yul\":16014:16023   */\n      dup3\n        /* \"#utility.yul\":16010:16028   */\n      add\n        /* \"#utility.yul\":16002:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":16038:16109   */\n      tag_611\n        /* \"#utility.yul\":16106:16107   */\n      0x00\n        /* \"#utility.yul\":16095:16104   */\n      dup4\n        /* \"#utility.yul\":16091:16108   */\n      add\n        /* \"#utility.yul\":16082:16088   */\n      dup7\n        /* \"#utility.yul\":16038:16109   */\n      tag_443\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16119:16191   */\n      tag_612\n        /* \"#utility.yul\":16187:16189   */\n      0x20\n        /* \"#utility.yul\":16176:16185   */\n      dup4\n        /* \"#utility.yul\":16172:16190   */\n      add\n        /* \"#utility.yul\":16163:16169   */\n      dup6\n        /* \"#utility.yul\":16119:16191   */\n      tag_442\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16201:16273   */\n      tag_613\n        /* \"#utility.yul\":16269:16271   */\n      0x40\n        /* \"#utility.yul\":16258:16267   */\n      dup4\n        /* \"#utility.yul\":16254:16272   */\n      add\n        /* \"#utility.yul\":16245:16251   */\n      dup5\n        /* \"#utility.yul\":16201:16273   */\n      tag_442\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":15838:16280   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16286:16519   */\n    tag_391:\n        /* \"#utility.yul\":16325:16328   */\n      0x00\n        /* \"#utility.yul\":16348:16372   */\n      tag_615\n        /* \"#utility.yul\":16366:16371   */\n      dup3\n        /* \"#utility.yul\":16348:16372   */\n      tag_437\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":16339:16372   */\n      swap2\n      pop\n        /* \"#utility.yul\":16394:16460   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16387:16392   */\n      dup3\n        /* \"#utility.yul\":16384:16461   */\n      sub\n        /* \"#utility.yul\":16381:16484   */\n      tag_616\n      jumpi\n        /* \"#utility.yul\":16464:16482   */\n      tag_617\n      tag_449\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":16381:16484   */\n    tag_616:\n        /* \"#utility.yul\":16511:16512   */\n      0x01\n        /* \"#utility.yul\":16504:16509   */\n      dup3\n        /* \"#utility.yul\":16500:16513   */\n      add\n        /* \"#utility.yul\":16493:16513   */\n      swap1\n      pop\n        /* \"#utility.yul\":16286:16519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16525:16705   */\n    tag_394:\n        /* \"#utility.yul\":16573:16650   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16570:16571   */\n      0x00\n        /* \"#utility.yul\":16563:16651   */\n      mstore\n        /* \"#utility.yul\":16670:16674   */\n      0x41\n        /* \"#utility.yul\":16667:16668   */\n      0x04\n        /* \"#utility.yul\":16660:16675   */\n      mstore\n        /* \"#utility.yul\":16694:16698   */\n      0x24\n        /* \"#utility.yul\":16691:16692   */\n      0x00\n        /* \"#utility.yul\":16684:16699   */\n      revert\n\n    auxdata: 0xa2646970667358221220dea26fd50e88693e5ab7240d40137b89cd9ab888a65ddc6d86484334e0b6c34e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1549": {
									"entryPoint": null,
									"id": 1549,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 948,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 753,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 1081,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 1327,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9953:10",
										"nodeType": "YulBlock",
										"src": "0:9953:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "608:80:10",
													"nodeType": "YulBlock",
													"src": "608:80:10",
													"statements": [
														{
															"nativeSrc": "618:22:10",
															"nodeType": "YulAssignment",
															"src": "618:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:10"
																},
																"nativeSrc": "627:13:10",
																"nodeType": "YulFunctionCall",
																"src": "627:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:10"
																},
																"nativeSrc": "649:33:10",
																"nodeType": "YulFunctionCall",
																"src": "649:33:10"
															},
															"nativeSrc": "649:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:10",
														"nodeType": "YulTypedName",
														"src": "586:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:10",
														"nodeType": "YulTypedName",
														"src": "594:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:10",
														"nodeType": "YulTypedName",
														"src": "602:5:10",
														"type": ""
													}
												],
												"src": "545:143:10"
											},
											{
												"body": {
													"nativeSrc": "771:274:10",
													"nodeType": "YulBlock",
													"src": "771:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:10",
																"nodeType": "YulBlock",
																"src": "817:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:10"
																			},
																			"nativeSrc": "819:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:10"
																		},
																		"nativeSrc": "819:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:10"
																		},
																		"nativeSrc": "788:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:10",
																		"nodeType": "YulLiteral",
																		"src": "813:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:10"
																},
																"nativeSrc": "784:32:10",
																"nodeType": "YulFunctionCall",
																"src": "784:32:10"
															},
															"nativeSrc": "781:119:10",
															"nodeType": "YulIf",
															"src": "781:119:10"
														},
														{
															"nativeSrc": "910:128:10",
															"nodeType": "YulBlock",
															"src": "910:128:10",
															"statements": [
																{
																	"nativeSrc": "925:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:10",
																		"nodeType": "YulLiteral",
																		"src": "939:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:10",
																			"nodeType": "YulTypedName",
																			"src": "929:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:10",
																	"nodeType": "YulAssignment",
																	"src": "954:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:10"
																				},
																				"nativeSrc": "996:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:10"
																		},
																		"nativeSrc": "964:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:10",
														"nodeType": "YulTypedName",
														"src": "741:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:10",
														"nodeType": "YulTypedName",
														"src": "752:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:10",
														"nodeType": "YulTypedName",
														"src": "764:6:10",
														"type": ""
													}
												],
												"src": "694:351:10"
											},
											{
												"body": {
													"nativeSrc": "1110:40:10",
													"nodeType": "YulBlock",
													"src": "1110:40:10",
													"statements": [
														{
															"nativeSrc": "1121:22:10",
															"nodeType": "YulAssignment",
															"src": "1121:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:10"
																},
																"nativeSrc": "1131:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:10",
														"nodeType": "YulTypedName",
														"src": "1093:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:10",
														"nodeType": "YulTypedName",
														"src": "1103:6:10",
														"type": ""
													}
												],
												"src": "1051:99:10"
											},
											{
												"body": {
													"nativeSrc": "1184:152:10",
													"nodeType": "YulBlock",
													"src": "1184:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nativeSrc": "1194:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:10"
															},
															"nativeSrc": "1194:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:10"
																},
																"nativeSrc": "1291:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:10"
															},
															"nativeSrc": "1291:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:10"
																},
																"nativeSrc": "1315:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:10"
															},
															"nativeSrc": "1315:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:10"
											},
											{
												"body": {
													"nativeSrc": "1370:152:10",
													"nodeType": "YulBlock",
													"src": "1370:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:10"
																},
																"nativeSrc": "1380:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:10"
															},
															"nativeSrc": "1380:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:10"
																},
																"nativeSrc": "1477:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:10"
															},
															"nativeSrc": "1477:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:10"
																},
																"nativeSrc": "1501:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:10"
															},
															"nativeSrc": "1501:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:10"
											},
											{
												"body": {
													"nativeSrc": "1579:269:10",
													"nodeType": "YulBlock",
													"src": "1579:269:10",
													"statements": [
														{
															"nativeSrc": "1589:22:10",
															"nodeType": "YulAssignment",
															"src": "1589:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:10"
																},
																"nativeSrc": "1599:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																}
															]
														},
														{
															"nativeSrc": "1620:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:10"
																},
																"nativeSrc": "1646:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:10",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:10",
																"nodeType": "YulBlock",
																"src": "1697:51:10",
																"statements": [
																	{
																		"nativeSrc": "1711:27:10",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:10"
																			},
																			"nativeSrc": "1721:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:10"
																},
																"nativeSrc": "1670:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:10"
															},
															"nativeSrc": "1667:81:10",
															"nodeType": "YulIf",
															"src": "1667:81:10"
														},
														{
															"body": {
																"nativeSrc": "1800:42:10",
																"nodeType": "YulBlock",
																"src": "1800:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:10"
																			},
																			"nativeSrc": "1814:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:10"
																		},
																		"nativeSrc": "1814:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:10"
																		},
																		"nativeSrc": "1784:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:10"
																},
																"nativeSrc": "1761:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:10"
															},
															"nativeSrc": "1758:84:10",
															"nodeType": "YulIf",
															"src": "1758:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:10",
														"nodeType": "YulTypedName",
														"src": "1563:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:10",
														"nodeType": "YulTypedName",
														"src": "1572:6:10",
														"type": ""
													}
												],
												"src": "1528:320:10"
											},
											{
												"body": {
													"nativeSrc": "1908:87:10",
													"nodeType": "YulBlock",
													"src": "1908:87:10",
													"statements": [
														{
															"nativeSrc": "1918:11:10",
															"nodeType": "YulAssignment",
															"src": "1918:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:10",
																"nodeType": "YulIdentifier",
																"src": "1926:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:10"
																},
																"nativeSrc": "1939:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:10"
															},
															"nativeSrc": "1939:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:10"
														},
														{
															"nativeSrc": "1962:26:10",
															"nodeType": "YulAssignment",
															"src": "1962:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:10"
																},
																"nativeSrc": "1970:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:10",
														"nodeType": "YulTypedName",
														"src": "1895:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:10",
														"nodeType": "YulTypedName",
														"src": "1903:4:10",
														"type": ""
													}
												],
												"src": "1854:141:10"
											},
											{
												"body": {
													"nativeSrc": "2045:49:10",
													"nodeType": "YulBlock",
													"src": "2045:49:10",
													"statements": [
														{
															"nativeSrc": "2055:33:10",
															"nodeType": "YulAssignment",
															"src": "2055:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:10"
																		},
																		"nativeSrc": "2069:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:10"
																},
																"nativeSrc": "2065:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:10",
														"nodeType": "YulTypedName",
														"src": "2028:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:10",
														"nodeType": "YulTypedName",
														"src": "2038:6:10",
														"type": ""
													}
												],
												"src": "2001:93:10"
											},
											{
												"body": {
													"nativeSrc": "2153:54:10",
													"nodeType": "YulBlock",
													"src": "2153:54:10",
													"statements": [
														{
															"nativeSrc": "2163:37:10",
															"nodeType": "YulAssignment",
															"src": "2163:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:10"
																},
																"nativeSrc": "2184:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:10",
														"nodeType": "YulTypedName",
														"src": "2128:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:10",
														"nodeType": "YulTypedName",
														"src": "2134:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:10",
														"nodeType": "YulTypedName",
														"src": "2144:8:10",
														"type": ""
													}
												],
												"src": "2100:107:10"
											},
											{
												"body": {
													"nativeSrc": "2289:317:10",
													"nodeType": "YulBlock",
													"src": "2289:317:10",
													"statements": [
														{
															"nativeSrc": "2299:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:10"
																},
																"nativeSrc": "2316:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:10",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:10",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:10"
																},
																"nativeSrc": "2355:97:10",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:10",
															"nodeType": "YulAssignment",
															"src": "2461:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:10"
																},
																"nativeSrc": "2473:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:10"
																}
															]
														},
														{
															"nativeSrc": "2521:30:10",
															"nodeType": "YulAssignment",
															"src": "2521:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:10"
																		},
																		"nativeSrc": "2541:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:10"
																},
																"nativeSrc": "2530:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:10"
																}
															]
														},
														{
															"nativeSrc": "2560:40:10",
															"nodeType": "YulAssignment",
															"src": "2560:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:10"
																		},
																		"nativeSrc": "2580:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:10"
																},
																"nativeSrc": "2570:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:10",
														"nodeType": "YulTypedName",
														"src": "2250:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:10",
														"nodeType": "YulTypedName",
														"src": "2257:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:10",
														"nodeType": "YulTypedName",
														"src": "2269:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:10",
														"nodeType": "YulTypedName",
														"src": "2282:6:10",
														"type": ""
													}
												],
												"src": "2213:393:10"
											},
											{
												"body": {
													"nativeSrc": "2644:28:10",
													"nodeType": "YulBlock",
													"src": "2644:28:10",
													"statements": [
														{
															"nativeSrc": "2654:12:10",
															"nodeType": "YulAssignment",
															"src": "2654:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:10",
																"nodeType": "YulIdentifier",
																"src": "2661:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:10",
														"nodeType": "YulTypedName",
														"src": "2630:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:10",
														"nodeType": "YulTypedName",
														"src": "2640:3:10",
														"type": ""
													}
												],
												"src": "2612:60:10"
											},
											{
												"body": {
													"nativeSrc": "2738:82:10",
													"nodeType": "YulBlock",
													"src": "2738:82:10",
													"statements": [
														{
															"nativeSrc": "2748:66:10",
															"nodeType": "YulAssignment",
															"src": "2748:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:10"
																				},
																				"nativeSrc": "2788:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:10"
																		},
																		"nativeSrc": "2779:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:10"
																},
																"nativeSrc": "2761:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:10",
														"nodeType": "YulTypedName",
														"src": "2718:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:10",
														"nodeType": "YulTypedName",
														"src": "2728:9:10",
														"type": ""
													}
												],
												"src": "2678:142:10"
											},
											{
												"body": {
													"nativeSrc": "2873:28:10",
													"nodeType": "YulBlock",
													"src": "2873:28:10",
													"statements": [
														{
															"nativeSrc": "2883:12:10",
															"nodeType": "YulAssignment",
															"src": "2883:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:10",
																"nodeType": "YulIdentifier",
																"src": "2890:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:10",
														"nodeType": "YulTypedName",
														"src": "2859:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:10",
														"nodeType": "YulTypedName",
														"src": "2869:3:10",
														"type": ""
													}
												],
												"src": "2826:75:10"
											},
											{
												"body": {
													"nativeSrc": "2983:193:10",
													"nodeType": "YulBlock",
													"src": "2983:193:10",
													"statements": [
														{
															"nativeSrc": "2993:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:10"
																},
																"nativeSrc": "3017:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:10"
																				},
																				"nativeSrc": "3106:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:10"
																				},
																				"nativeSrc": "3127:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:10"
																		},
																		"nativeSrc": "3078:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:10"
																},
																"nativeSrc": "3065:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:10"
															},
															"nativeSrc": "3065:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:10",
														"nodeType": "YulTypedName",
														"src": "2960:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:10",
														"nodeType": "YulTypedName",
														"src": "2966:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:10",
														"nodeType": "YulTypedName",
														"src": "2974:7:10",
														"type": ""
													}
												],
												"src": "2907:269:10"
											},
											{
												"body": {
													"nativeSrc": "3231:24:10",
													"nodeType": "YulBlock",
													"src": "3231:24:10",
													"statements": [
														{
															"nativeSrc": "3241:8:10",
															"nodeType": "YulAssignment",
															"src": "3241:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:10",
																"nodeType": "YulLiteral",
																"src": "3248:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:10",
														"nodeType": "YulTypedName",
														"src": "3227:3:10",
														"type": ""
													}
												],
												"src": "3182:73:10"
											},
											{
												"body": {
													"nativeSrc": "3314:136:10",
													"nodeType": "YulBlock",
													"src": "3314:136:10",
													"statements": [
														{
															"nativeSrc": "3324:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:10"
																},
																"nativeSrc": "3338:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:10"
																},
																"nativeSrc": "3379:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:10"
															},
															"nativeSrc": "3379:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:10",
														"nodeType": "YulTypedName",
														"src": "3300:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:10",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"src": "3261:189:10"
											},
											{
												"body": {
													"nativeSrc": "3506:136:10",
													"nodeType": "YulBlock",
													"src": "3506:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:10",
																"nodeType": "YulBlock",
																"src": "3573:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:10"
																			},
																			"nativeSrc": "3587:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:10"
																		},
																		"nativeSrc": "3587:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:10"
																},
																"nativeSrc": "3523:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:10"
															},
															"nativeSrc": "3516:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:10",
																"nodeType": "YulBlock",
																"src": "3538:26:10",
																"statements": [
																	{
																		"nativeSrc": "3540:22:10",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:10"
																			},
																			"nativeSrc": "3549:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:10",
																"nodeType": "YulBlock",
																"src": "3520:2:10",
																"statements": []
															},
															"src": "3516:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:10",
														"nodeType": "YulTypedName",
														"src": "3494:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:10",
														"nodeType": "YulTypedName",
														"src": "3501:3:10",
														"type": ""
													}
												],
												"src": "3456:186:10"
											},
											{
												"body": {
													"nativeSrc": "3727:464:10",
													"nodeType": "YulBlock",
													"src": "3727:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:10",
																"nodeType": "YulBlock",
																"src": "3753:431:10",
																"statements": [
																	{
																		"nativeSrc": "3767:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:10"
																			},
																			"nativeSrc": "3783:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:10",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:10"
																					},
																					"nativeSrc": "3867:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:10"
																			},
																			"nativeSrc": "3853:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:10",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:10",
																			"nodeType": "YulBlock",
																			"src": "4054:27:10",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:10",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:10"
																			},
																			"nativeSrc": "4035:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:10"
																		},
																		"nativeSrc": "4032:49:10",
																		"nodeType": "YulIf",
																		"src": "4032:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:10"
																							},
																							"nativeSrc": "4150:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:10"
																					},
																					"nativeSrc": "4136:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:10"
																			},
																			"nativeSrc": "4094:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:10"
																		},
																		"nativeSrc": "4094:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:10"
																},
																"nativeSrc": "3741:11:10",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:10"
															},
															"nativeSrc": "3738:446:10",
															"nodeType": "YulIf",
															"src": "3738:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:10",
														"nodeType": "YulTypedName",
														"src": "3703:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:10",
														"nodeType": "YulTypedName",
														"src": "3710:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:10",
														"nodeType": "YulTypedName",
														"src": "3715:10:10",
														"type": ""
													}
												],
												"src": "3648:543:10"
											},
											{
												"body": {
													"nativeSrc": "4260:54:10",
													"nodeType": "YulBlock",
													"src": "4260:54:10",
													"statements": [
														{
															"nativeSrc": "4270:37:10",
															"nodeType": "YulAssignment",
															"src": "4270:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:10"
																},
																"nativeSrc": "4291:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:10",
														"nodeType": "YulTypedName",
														"src": "4235:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:10",
														"nodeType": "YulTypedName",
														"src": "4241:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:10",
														"nodeType": "YulTypedName",
														"src": "4251:8:10",
														"type": ""
													}
												],
												"src": "4197:117:10"
											},
											{
												"body": {
													"nativeSrc": "4371:118:10",
													"nodeType": "YulBlock",
													"src": "4371:118:10",
													"statements": [
														{
															"nativeSrc": "4381:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:10"
																				},
																				"nativeSrc": "4426:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:10"
																				},
																				"nativeSrc": "4441:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:10"
																		},
																		"nativeSrc": "4397:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:10"
																},
																"nativeSrc": "4393:56:10",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:10",
															"nodeType": "YulAssignment",
															"src": "4458:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:10"
																},
																"nativeSrc": "4468:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:10",
														"nodeType": "YulTypedName",
														"src": "4348:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:10",
														"nodeType": "YulTypedName",
														"src": "4354:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:10",
														"nodeType": "YulTypedName",
														"src": "4364:6:10",
														"type": ""
													}
												],
												"src": "4320:169:10"
											},
											{
												"body": {
													"nativeSrc": "4575:214:10",
													"nodeType": "YulBlock",
													"src": "4575:214:10",
													"statements": [
														{
															"nativeSrc": "4708:37:10",
															"nodeType": "YulAssignment",
															"src": "4708:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:10"
																},
																"nativeSrc": "4716:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:10"
																}
															]
														},
														{
															"nativeSrc": "4754:29:10",
															"nodeType": "YulAssignment",
															"src": "4754:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:10"
																		},
																		"nativeSrc": "4771:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:10"
																},
																"nativeSrc": "4762:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:10",
														"nodeType": "YulTypedName",
														"src": "4556:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:10",
														"nodeType": "YulTypedName",
														"src": "4562:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:10",
														"nodeType": "YulTypedName",
														"src": "4570:4:10",
														"type": ""
													}
												],
												"src": "4494:295:10"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:10",
													"nodeType": "YulBlock",
													"src": "4886:1303:10",
													"statements": [
														{
															"nativeSrc": "4897:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:10"
																},
																"nativeSrc": "4911:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:10",
																"nodeType": "YulBlock",
																"src": "5033:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:10"
																			},
																			"nativeSrc": "5035:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:10"
																		},
																		"nativeSrc": "5035:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:10"
																},
																"nativeSrc": "5002:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:10"
															},
															"nativeSrc": "4999:56:10",
															"nodeType": "YulIf",
															"src": "4999:56:10"
														},
														{
															"nativeSrc": "5065:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:10"
																		},
																		"nativeSrc": "5105:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:10"
																},
																"nativeSrc": "5079:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:10"
																},
																"nativeSrc": "5164:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:10"
															},
															"nativeSrc": "5164:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:10"
														},
														{
															"nativeSrc": "5241:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:10",
																"nodeType": "YulLiteral",
																"src": "5258:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:10",
															"nodeType": "YulAssignment",
															"src": "5269:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:10",
																"nodeType": "YulLiteral",
																"src": "5282:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:10",
																		"nodeType": "YulBlock",
																		"src": "5333:611:10",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:10",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:10"
																							},
																							"nativeSrc": "5374:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:10"
																					},
																					"nativeSrc": "5362:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:10",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:10"
																					},
																					"nativeSrc": "5412:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:10",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:10",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:10",
																					"nodeType": "YulBlock",
																					"src": "5530:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:10"
																												},
																												"nativeSrc": "5569:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:10"
																										},
																										"nativeSrc": "5563:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:10"
																								},
																								"nativeSrc": "5548:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:10"
																							},
																							"nativeSrc": "5548:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:10"
																						},
																						{
																							"nativeSrc": "5607:24:10",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:10",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:10"
																								},
																								"nativeSrc": "5617:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:10",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:10",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:10"
																								},
																								"nativeSrc": "5661:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:10"
																					},
																					"nativeSrc": "5493:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:10"
																				},
																				"nativeSrc": "5485:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:10",
																					"nodeType": "YulBlock",
																					"src": "5508:21:10",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:10",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:10",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:10"
																								},
																								"nativeSrc": "5515:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:10",
																					"nodeType": "YulBlock",
																					"src": "5489:3:10",
																					"statements": []
																				},
																				"src": "5485:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:10",
																					"nodeType": "YulBlock",
																					"src": "5729:156:10",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:10"
																										},
																										"nativeSrc": "5770:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:10"
																								},
																								"nativeSrc": "5764:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:10",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:10",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:10"
																												},
																												"nativeSrc": "5852:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:10"
																										},
																										"nativeSrc": "5822:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:10"
																								},
																								"nativeSrc": "5807:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:10"
																							},
																							"nativeSrc": "5807:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:10"
																					},
																					"nativeSrc": "5709:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:10"
																				},
																				"nativeSrc": "5706:179:10",
																				"nodeType": "YulIf",
																				"src": "5706:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:10",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:10"
																									},
																									"nativeSrc": "5915:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:10",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:10"
																							},
																							"nativeSrc": "5911:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:10"
																					},
																					"nativeSrc": "5898:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:10"
																				},
																				"nativeSrc": "5898:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:10"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:10",
																	"nodeType": "YulCase",
																	"src": "5326:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:10",
																		"nodeType": "YulBlock",
																		"src": "5961:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:10",
																					"nodeType": "YulBlock",
																					"src": "6012:67:10",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:10",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:10"
																										},
																										"nativeSrc": "6045:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:10"
																								},
																								"nativeSrc": "6039:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:10"
																				},
																				"nativeSrc": "6002:77:10",
																				"nodeType": "YulIf",
																				"src": "6002:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:10"
																							},
																							"nativeSrc": "6105:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:10"
																					},
																					"nativeSrc": "6092:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:10"
																				},
																				"nativeSrc": "6092:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:10"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:10",
																	"nodeType": "YulCase",
																	"src": "5953:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:10"
																},
																"nativeSrc": "5303:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:10"
															},
															"nativeSrc": "5296:887:10",
															"nodeType": "YulSwitch",
															"src": "5296:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:10",
														"nodeType": "YulTypedName",
														"src": "4875:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:10",
														"nodeType": "YulTypedName",
														"src": "4881:3:10",
														"type": ""
													}
												],
												"src": "4794:1395:10"
											},
											{
												"body": {
													"nativeSrc": "6240:81:10",
													"nodeType": "YulBlock",
													"src": "6240:81:10",
													"statements": [
														{
															"nativeSrc": "6250:65:10",
															"nodeType": "YulAssignment",
															"src": "6250:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:10",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:10"
																},
																"nativeSrc": "6261:54:10",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:10",
														"nodeType": "YulTypedName",
														"src": "6222:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:10",
														"nodeType": "YulTypedName",
														"src": "6232:7:10",
														"type": ""
													}
												],
												"src": "6195:126:10"
											},
											{
												"body": {
													"nativeSrc": "6372:51:10",
													"nodeType": "YulBlock",
													"src": "6372:51:10",
													"statements": [
														{
															"nativeSrc": "6382:35:10",
															"nodeType": "YulAssignment",
															"src": "6382:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:10"
																},
																"nativeSrc": "6393:24:10",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:10",
														"nodeType": "YulTypedName",
														"src": "6354:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:10",
														"nodeType": "YulTypedName",
														"src": "6364:7:10",
														"type": ""
													}
												],
												"src": "6327:96:10"
											},
											{
												"body": {
													"nativeSrc": "6494:53:10",
													"nodeType": "YulBlock",
													"src": "6494:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:10"
																		},
																		"nativeSrc": "6516:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:10"
																},
																"nativeSrc": "6504:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:10"
															},
															"nativeSrc": "6504:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:10",
														"nodeType": "YulTypedName",
														"src": "6482:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:10",
														"nodeType": "YulTypedName",
														"src": "6489:3:10",
														"type": ""
													}
												],
												"src": "6429:118:10"
											},
											{
												"body": {
													"nativeSrc": "6651:124:10",
													"nodeType": "YulBlock",
													"src": "6651:124:10",
													"statements": [
														{
															"nativeSrc": "6661:26:10",
															"nodeType": "YulAssignment",
															"src": "6661:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:10"
																},
																"nativeSrc": "6669:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:10"
																		},
																		"nativeSrc": "6750:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:10"
																},
																"nativeSrc": "6697:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:10"
															},
															"nativeSrc": "6697:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:10",
														"nodeType": "YulTypedName",
														"src": "6623:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:10",
														"nodeType": "YulTypedName",
														"src": "6635:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:10",
														"nodeType": "YulTypedName",
														"src": "6646:4:10",
														"type": ""
													}
												],
												"src": "6553:222:10"
											},
											{
												"body": {
													"nativeSrc": "6877:73:10",
													"nodeType": "YulBlock",
													"src": "6877:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6894:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6894:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6899:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6899:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:10"
																},
																"nativeSrc": "6887:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6887:19:10"
															},
															"nativeSrc": "6887:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "6887:19:10"
														},
														{
															"nativeSrc": "6915:29:10",
															"nodeType": "YulAssignment",
															"src": "6915:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6934:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6930:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6930:3:10"
																},
																"nativeSrc": "6930:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6930:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6915:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "6915:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6781:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6849:3:10",
														"nodeType": "YulTypedName",
														"src": "6849:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6854:6:10",
														"nodeType": "YulTypedName",
														"src": "6854:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6865:11:10",
														"nodeType": "YulTypedName",
														"src": "6865:11:10",
														"type": ""
													}
												],
												"src": "6781:169:10"
											},
											{
												"body": {
													"nativeSrc": "7062:115:10",
													"nodeType": "YulBlock",
													"src": "7062:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7084:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7084:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7092:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7092:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7080:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:10"
																		},
																		"nativeSrc": "7080:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:14:10"
																	},
																	{
																		"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "7096:34:10",
																		"nodeType": "YulLiteral",
																		"src": "7096:34:10",
																		"type": "",
																		"value": "Reward rate must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7073:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:10"
																},
																"nativeSrc": "7073:58:10",
																"nodeType": "YulFunctionCall",
																"src": "7073:58:10"
															},
															"nativeSrc": "7073:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "7073:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7152:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7152:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7160:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7148:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7148:3:10"
																		},
																		"nativeSrc": "7148:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7148:15:10"
																	},
																	{
																		"hexValue": "2030",
																		"kind": "string",
																		"nativeSrc": "7165:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7165:4:10",
																		"type": "",
																		"value": " 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:10"
																},
																"nativeSrc": "7141:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7141:29:10"
															},
															"nativeSrc": "7141:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "7141:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
												"nativeSrc": "6956:221:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7054:6:10",
														"nodeType": "YulTypedName",
														"src": "7054:6:10",
														"type": ""
													}
												],
												"src": "6956:221:10"
											},
											{
												"body": {
													"nativeSrc": "7329:220:10",
													"nodeType": "YulBlock",
													"src": "7329:220:10",
													"statements": [
														{
															"nativeSrc": "7339:74:10",
															"nodeType": "YulAssignment",
															"src": "7339:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7405:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7405:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7410:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7410:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7346:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7346:58:10"
																},
																"nativeSrc": "7346:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7346:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7339:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7339:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7511:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7511:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																	"nativeSrc": "7422:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7422:88:10"
																},
																"nativeSrc": "7422:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7422:93:10"
															},
															"nativeSrc": "7422:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7422:93:10"
														},
														{
															"nativeSrc": "7524:19:10",
															"nodeType": "YulAssignment",
															"src": "7524:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7535:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7535:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7540:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7540:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7531:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7531:3:10"
																},
																"nativeSrc": "7531:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7531:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7524:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7524:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7183:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7317:3:10",
														"nodeType": "YulTypedName",
														"src": "7317:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7325:3:10",
														"nodeType": "YulTypedName",
														"src": "7325:3:10",
														"type": ""
													}
												],
												"src": "7183:366:10"
											},
											{
												"body": {
													"nativeSrc": "7726:248:10",
													"nodeType": "YulBlock",
													"src": "7726:248:10",
													"statements": [
														{
															"nativeSrc": "7736:26:10",
															"nodeType": "YulAssignment",
															"src": "7736:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7748:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7748:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7759:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7744:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7744:3:10"
																},
																"nativeSrc": "7744:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7744:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7736:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7736:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7783:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7783:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7794:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7794:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7779:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:10"
																		},
																		"nativeSrc": "7779:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7779:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7802:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7802:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7808:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7808:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7798:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7798:3:10"
																		},
																		"nativeSrc": "7798:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7772:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:10"
																},
																"nativeSrc": "7772:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7772:47:10"
															},
															"nativeSrc": "7772:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7772:47:10"
														},
														{
															"nativeSrc": "7828:139:10",
															"nodeType": "YulAssignment",
															"src": "7828:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7962:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7962:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7836:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7836:124:10"
																},
																"nativeSrc": "7836:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7836:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7828:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7828:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7555:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7706:9:10",
														"nodeType": "YulTypedName",
														"src": "7706:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7721:4:10",
														"nodeType": "YulTypedName",
														"src": "7721:4:10",
														"type": ""
													}
												],
												"src": "7555:419:10"
											},
											{
												"body": {
													"nativeSrc": "8008:152:10",
													"nodeType": "YulBlock",
													"src": "8008:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8025:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8025:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8028:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8028:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:10"
																},
																"nativeSrc": "8018:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8018:88:10"
															},
															"nativeSrc": "8018:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8018:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8122:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8122:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8125:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8125:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8115:6:10"
																},
																"nativeSrc": "8115:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8115:15:10"
															},
															"nativeSrc": "8115:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8115:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8146:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8149:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8149:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:10"
																},
																"nativeSrc": "8139:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8139:15:10"
															},
															"nativeSrc": "8139:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8139:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7980:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7980:180:10"
											},
											{
												"body": {
													"nativeSrc": "8214:362:10",
													"nodeType": "YulBlock",
													"src": "8214:362:10",
													"statements": [
														{
															"nativeSrc": "8224:25:10",
															"nodeType": "YulAssignment",
															"src": "8224:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8247:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8247:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8229:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8229:17:10"
																},
																"nativeSrc": "8229:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8229:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8224:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8224:1:10"
																}
															]
														},
														{
															"nativeSrc": "8258:25:10",
															"nodeType": "YulAssignment",
															"src": "8258:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8281:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8281:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8263:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8263:17:10"
																},
																"nativeSrc": "8263:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8263:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8258:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8258:1:10"
																}
															]
														},
														{
															"nativeSrc": "8292:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8292:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8315:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8315:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8318:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8318:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8311:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:10"
																},
																"nativeSrc": "8311:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8311:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8296:11:10",
																	"nodeType": "YulTypedName",
																	"src": "8296:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8329:41:10",
															"nodeType": "YulAssignment",
															"src": "8329:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8358:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8358:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8340:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8340:17:10"
																},
																"nativeSrc": "8340:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8340:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8329:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8329:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8547:22:10",
																"nodeType": "YulBlock",
																"src": "8547:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8549:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8549:16:10"
																			},
																			"nativeSrc": "8549:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8549:18:10"
																		},
																		"nativeSrc": "8549:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8549:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8480:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8480:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8473:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8473:6:10"
																				},
																				"nativeSrc": "8473:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8473:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8503:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8503:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8510:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8510:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8519:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8519:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8506:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8506:3:10"
																						},
																						"nativeSrc": "8506:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8506:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8500:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8500:2:10"
																				},
																				"nativeSrc": "8500:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8500:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8453:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8453:2:10"
																		},
																		"nativeSrc": "8453:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8453:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:10"
																},
																"nativeSrc": "8433:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8433:113:10"
															},
															"nativeSrc": "8430:139:10",
															"nodeType": "YulIf",
															"src": "8430:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8166:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8197:1:10",
														"nodeType": "YulTypedName",
														"src": "8197:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8200:1:10",
														"nodeType": "YulTypedName",
														"src": "8200:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8206:7:10",
														"nodeType": "YulTypedName",
														"src": "8206:7:10",
														"type": ""
													}
												],
												"src": "8166:410:10"
											},
											{
												"body": {
													"nativeSrc": "8610:152:10",
													"nodeType": "YulBlock",
													"src": "8610:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8627:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8627:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8630:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8630:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8620:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8620:6:10"
																},
																"nativeSrc": "8620:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8620:88:10"
															},
															"nativeSrc": "8620:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8620:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8724:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8724:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8727:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8727:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8717:6:10"
																},
																"nativeSrc": "8717:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8717:15:10"
															},
															"nativeSrc": "8717:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8717:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8748:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8748:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8751:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8751:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8741:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:10"
																},
																"nativeSrc": "8741:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8741:15:10"
															},
															"nativeSrc": "8741:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8741:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8582:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8582:180:10"
											},
											{
												"body": {
													"nativeSrc": "8810:143:10",
													"nodeType": "YulBlock",
													"src": "8810:143:10",
													"statements": [
														{
															"nativeSrc": "8820:25:10",
															"nodeType": "YulAssignment",
															"src": "8820:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8843:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8843:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8825:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8825:17:10"
																},
																"nativeSrc": "8825:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8825:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8820:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8820:1:10"
																}
															]
														},
														{
															"nativeSrc": "8854:25:10",
															"nodeType": "YulAssignment",
															"src": "8854:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8877:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8877:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8859:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8859:17:10"
																},
																"nativeSrc": "8859:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8859:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8854:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8854:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8901:22:10",
																"nodeType": "YulBlock",
																"src": "8901:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8903:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8903:16:10"
																			},
																			"nativeSrc": "8903:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8903:18:10"
																		},
																		"nativeSrc": "8903:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8903:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8898:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8898:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8891:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8891:6:10"
																},
																"nativeSrc": "8891:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8891:9:10"
															},
															"nativeSrc": "8888:35:10",
															"nodeType": "YulIf",
															"src": "8888:35:10"
														},
														{
															"nativeSrc": "8933:14:10",
															"nodeType": "YulAssignment",
															"src": "8933:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8942:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8942:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8945:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8945:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8938:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8938:3:10"
																},
																"nativeSrc": "8938:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8938:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8933:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8933:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8768:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8799:1:10",
														"nodeType": "YulTypedName",
														"src": "8799:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8802:1:10",
														"nodeType": "YulTypedName",
														"src": "8802:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8808:1:10",
														"nodeType": "YulTypedName",
														"src": "8808:1:10",
														"type": ""
													}
												],
												"src": "8768:185:10"
											},
											{
												"body": {
													"nativeSrc": "9003:147:10",
													"nodeType": "YulBlock",
													"src": "9003:147:10",
													"statements": [
														{
															"nativeSrc": "9013:25:10",
															"nodeType": "YulAssignment",
															"src": "9013:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9036:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9036:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9018:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9018:17:10"
																},
																"nativeSrc": "9018:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9018:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9013:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9013:1:10"
																}
															]
														},
														{
															"nativeSrc": "9047:25:10",
															"nodeType": "YulAssignment",
															"src": "9047:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9070:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9070:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9052:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9052:17:10"
																},
																"nativeSrc": "9052:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9052:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9047:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9047:1:10"
																}
															]
														},
														{
															"nativeSrc": "9081:16:10",
															"nodeType": "YulAssignment",
															"src": "9081:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9092:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9092:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9095:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9095:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9088:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9088:3:10"
																},
																"nativeSrc": "9088:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9088:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9081:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9121:22:10",
																"nodeType": "YulBlock",
																"src": "9121:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9123:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9123:16:10"
																			},
																			"nativeSrc": "9123:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9123:18:10"
																		},
																		"nativeSrc": "9123:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9123:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9113:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9113:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9116:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9116:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9110:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9110:2:10"
																},
																"nativeSrc": "9110:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9110:10:10"
															},
															"nativeSrc": "9107:36:10",
															"nodeType": "YulIf",
															"src": "9107:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8959:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8990:1:10",
														"nodeType": "YulTypedName",
														"src": "8990:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8993:1:10",
														"nodeType": "YulTypedName",
														"src": "8993:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8999:3:10",
														"nodeType": "YulTypedName",
														"src": "8999:3:10",
														"type": ""
													}
												],
												"src": "8959:191:10"
											},
											{
												"body": {
													"nativeSrc": "9221:53:10",
													"nodeType": "YulBlock",
													"src": "9221:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9238:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9238:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9261:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9261:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9243:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9243:17:10"
																		},
																		"nativeSrc": "9243:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9243:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9231:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:10"
																},
																"nativeSrc": "9231:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9231:37:10"
															},
															"nativeSrc": "9231:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9231:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9156:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9209:5:10",
														"nodeType": "YulTypedName",
														"src": "9209:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9216:3:10",
														"nodeType": "YulTypedName",
														"src": "9216:3:10",
														"type": ""
													}
												],
												"src": "9156:118:10"
											},
											{
												"body": {
													"nativeSrc": "9434:288:10",
													"nodeType": "YulBlock",
													"src": "9434:288:10",
													"statements": [
														{
															"nativeSrc": "9444:26:10",
															"nodeType": "YulAssignment",
															"src": "9444:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9456:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9456:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9467:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9467:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9452:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9452:3:10"
																},
																"nativeSrc": "9452:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9452:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9444:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9444:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9524:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9524:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9537:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9548:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9548:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9533:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9533:3:10"
																		},
																		"nativeSrc": "9533:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9533:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9480:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9480:43:10"
																},
																"nativeSrc": "9480:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9480:71:10"
															},
															"nativeSrc": "9480:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9480:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9605:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9605:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9618:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9618:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9629:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9629:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9614:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:10"
																		},
																		"nativeSrc": "9614:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9614:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9561:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9561:43:10"
																},
																"nativeSrc": "9561:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9561:72:10"
															},
															"nativeSrc": "9561:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9561:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9687:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9687:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9700:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9700:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9711:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9711:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9696:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:10"
																		},
																		"nativeSrc": "9696:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9643:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9643:43:10"
																},
																"nativeSrc": "9643:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9643:72:10"
															},
															"nativeSrc": "9643:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9643:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9280:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9390:9:10",
														"nodeType": "YulTypedName",
														"src": "9390:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9402:6:10",
														"nodeType": "YulTypedName",
														"src": "9402:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9410:6:10",
														"nodeType": "YulTypedName",
														"src": "9410:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9418:6:10",
														"nodeType": "YulTypedName",
														"src": "9418:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9429:4:10",
														"nodeType": "YulTypedName",
														"src": "9429:4:10",
														"type": ""
													}
												],
												"src": "9280:442:10"
											},
											{
												"body": {
													"nativeSrc": "9826:124:10",
													"nodeType": "YulBlock",
													"src": "9826:124:10",
													"statements": [
														{
															"nativeSrc": "9836:26:10",
															"nodeType": "YulAssignment",
															"src": "9836:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9848:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9848:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9859:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9859:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9844:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9844:3:10"
																},
																"nativeSrc": "9844:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9844:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9836:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9836:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9916:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9916:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9929:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9929:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9940:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9940:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9925:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9925:3:10"
																		},
																		"nativeSrc": "9925:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9925:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9872:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9872:43:10"
																},
																"nativeSrc": "9872:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9872:71:10"
															},
															"nativeSrc": "9872:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9872:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9728:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9798:9:10",
														"nodeType": "YulTypedName",
														"src": "9798:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9810:6:10",
														"nodeType": "YulTypedName",
														"src": "9810:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9821:4:10",
														"nodeType": "YulTypedName",
														"src": "9821:4:10",
														"type": ""
													}
												],
												"src": "9728:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward rate must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161355b38038061355b8339818101604052810190610031919061077f565b306040518060400160405280600c81526020017f50696e67506f6e67506c617900000000000000000000000000000000000000008152506040518060400160405280600681526020017f50494e475050000000000000000000000000000000000000000000000000000081525081600390816100ad91906109de565b5080600490816100bd91906109de565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610aec565b60405180910390fd5b61013f816102f160201b60201c565b5060016006819055505f811161018a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018190610b85565b60405180910390fd5b80600b819055506101ac306a52b7d2dcc80cd2e40000006103b460201b60201c565b426007819055506101e73033606460286a52b7d2dcc80cd2e40000006101d29190610bd0565b6101dc9190610c3e565b61043960201b60201c565b61021b3030606460146a52b7d2dcc80cd2e40000006102069190610bd0565b6102109190610c3e565b61043960201b60201c565b61024f30336064600f6a52b7d2dcc80cd2e400000061023a9190610bd0565b6102449190610c3e565b61043960201b60201c565b61028330336064600a6a52b7d2dcc80cd2e400000061026e9190610bd0565b6102789190610c3e565b61043960201b60201c565b6102b730336064600a6a52b7d2dcc80cd2e40000006102a29190610bd0565b6102ac9190610c3e565b61043960201b60201c565b6102eb3033606460056a52b7d2dcc80cd2e40000006102d69190610bd0565b6102e09190610c3e565b61043960201b60201c565b50610cfe565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610424575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161041b9190610aec565b60405180910390fd5b6104355f838361052f60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104a9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016104a09190610aec565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610519575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105109190610aec565b60405180910390fd5b61052a83838361052f60201b60201c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361057f578060025f8282546105739190610c6e565b9250508190555061064d565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610608578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016105ff93929190610cb0565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610694578060025f82825403925050819055506106de565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161073b9190610ce5565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61075e8161074c565b8114610768575f5ffd5b50565b5f8151905061077981610755565b92915050565b5f6020828403121561079457610793610748565b5b5f6107a18482850161076b565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061082557607f821691505b602082108103610838576108376107e1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261089a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261085f565b6108a4868361085f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108df6108da6108d58461074c565b6108bc565b61074c565b9050919050565b5f819050919050565b6108f8836108c5565b61090c610904826108e6565b84845461086b565b825550505050565b5f5f905090565b610923610914565b61092e8184846108ef565b505050565b5b81811015610951576109465f8261091b565b600181019050610934565b5050565b601f821115610996576109678161083e565b61097084610850565b8101602085101561097f578190505b61099361098b85610850565b830182610933565b50505b505050565b5f82821c905092915050565b5f6109b65f198460080261099b565b1980831691505092915050565b5f6109ce83836109a7565b9150826002028217905092915050565b6109e7826107aa565b67ffffffffffffffff811115610a00576109ff6107b4565b5b610a0a825461080e565b610a15828285610955565b5f60209050601f831160018114610a46575f8415610a34578287015190505b610a3e85826109c3565b865550610aa5565b601f198416610a548661083e565b5f5b82811015610a7b57848901518255600182019150602085019450602081019050610a56565b86831015610a985784890151610a94601f8916826109a7565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ad682610aad565b9050919050565b610ae681610acc565b82525050565b5f602082019050610aff5f830184610add565b92915050565b5f82825260208201905092915050565b7f5265776172642072617465206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f610b6f602283610b05565b9150610b7a82610b15565b604082019050919050565b5f6020820190508181035f830152610b9c81610b63565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610bda8261074c565b9150610be58361074c565b9250828202610bf38161074c565b91508282048414831517610c0a57610c09610ba3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c488261074c565b9150610c538361074c565b925082610c6357610c62610c11565b5b828204905092915050565b5f610c788261074c565b9150610c838361074c565b9250828201905080821115610c9b57610c9a610ba3565b5b92915050565b610caa8161074c565b82525050565b5f606082019050610cc35f830186610add565b610cd06020830185610ca1565b610cdd6040830184610ca1565b949350505050565b5f602082019050610cf85f830184610ca1565b92915050565b61285080610d0b5f395ff3fe608060405234801561000f575f5ffd5b50600436106101f9575f3560e01c806370a08231116101185780639ef3a261116100ab578063d82e39621161007a578063d82e39621461056d578063dd62ed3e1461059d578063e75c4927146105cd578063f2fde38b146105eb578063f6f0fa8d14610607576101f9565b80639ef3a261146104fb578063a694fc3a14610517578063a9059cbb14610533578063cb3dbecb14610563576101f9565b80638da5cb5b116100e75780638da5cb5b14610483578063902d55a5146104a157806395d89b41146104bf5780639d2cc436146104dd576101f9565b806370a082311461040f578063715018a61461043f57806379cc6790146104495780637b0a47ee14610465576101f9565b8063254800d41161019057806339cf9b001161015f57806339cf9b001461039957806342966c68146103b75780634cfc4d30146103d35780635f89584e146103f1576101f9565b8063254800d414610311578063294f5fa31461032f5780632e17de781461035f578063313ce5671461037b576101f9565b806316934fc4116101cc57806316934fc41461027357806318160ddd146102a55780631cfe31c2146102c357806323b872dd146102e1576101f9565b806306fdde03146101fd578063095ea7b31461021b57806314c411c71461024b5780631571ccf614610255575b5f5ffd5b610205610625565b6040516102129190611fcc565b60405180910390f35b6102356004803603810190610230919061207d565b6106b5565b60405161024291906120d5565b60405180910390f35b6102536106d7565b005b61025d610827565b60405161026a91906120fd565b60405180910390f35b61028d60048036038101906102889190612116565b61084e565b60405161029c93929190612141565b60405180910390f35b6102ad610874565b6040516102ba91906120fd565b60405180910390f35b6102cb61087d565b6040516102d891906120fd565b60405180910390f35b6102fb60048036038101906102f69190612176565b6108a4565b60405161030891906120d5565b60405180910390f35b6103196108d2565b60405161032691906120fd565b60405180910390f35b610349600480360381019061034491906121c6565b6108d8565b6040516103569190612200565b60405180910390f35b610379600480360381019061037491906121c6565b610913565b005b610383610d51565b6040516103909190612234565b60405180910390f35b6103a1610d59565b6040516103ae91906120fd565b60405180910390f35b6103d160048036038101906103cc91906121c6565b610d80565b005b6103db610d94565b6040516103e891906120fd565b60405180910390f35b6103f9610d9c565b60405161040691906120fd565b60405180910390f35b61042960048036038101906104249190612116565b610dc3565b60405161043691906120fd565b60405180910390f35b610447610e08565b005b610463600480360381019061045e919061207d565b610e1b565b005b61046d610e3b565b60405161047a91906120fd565b60405180910390f35b61048b610e41565b6040516104989190612200565b60405180910390f35b6104a9610e69565b6040516104b691906120fd565b60405180910390f35b6104c7610e78565b6040516104d49190611fcc565b60405180910390f35b6104e5610f08565b6040516104f291906120fd565b60405180910390f35b610515600480360381019061051091906121c6565b610f2f565b005b610531600480360381019061052c91906121c6565b610f83565b005b61054d6004803603810190610548919061207d565b611122565b60405161055a91906120d5565b60405180910390f35b61056b611144565b005b61058760048036038101906105829190612116565b6112e8565b60405161059491906120fd565b60405180910390f35b6105b760048036038101906105b2919061224d565b6113e5565b6040516105c491906120fd565b60405180910390f35b6105d5611467565b6040516105e291906120fd565b60405180910390f35b61060560048036038101906106009190612116565b61148e565b005b61060f611512565b60405161061c91906120fd565b60405180910390f35b606060038054610634906122b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610660906122b8565b80156106ab5780601f10610682576101008083540402835291602001916106ab565b820191905f5260205f20905b81548152906001019060200180831161068e57829003601f168201915b5050505050905090565b5f5f6106bf611518565b90506106cc81858561151f565b600191505092915050565b6106df611531565b6106e7611580565b60075442101561072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390612332565b60405180910390fd5b5f6107426007544261160790919063ffffffff16565b90505f6107916301e1338061078384606460146a52b7d2dcc80cd2e400000061076b919061237d565b61077591906123eb565b61161c90919063ffffffff16565b61163190919063ffffffff16565b90505f6107a96008548361160790919063ffffffff16565b90505f81116107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e490612465565b60405180910390fd5b6108028160085461164690919063ffffffff16565b60088190555061081a30610814610e41565b8361165b565b50505061082561174b565b565b606460146a52b7d2dcc80cd2e4000000610841919061237d565b61084b91906123eb565b81565b6009602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f600254905090565b606460056a52b7d2dcc80cd2e4000000610897919061237d565b6108a191906123eb565b81565b5f5f6108ae611518565b90506108bb858285611755565b6108c685858561165b565b60019150509392505050565b60075481565b600a81815481106108e7575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61091b611531565b5f811161095d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610954906124cd565b60405180910390fd5b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015410156109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690612535565b60405180910390fd5b5f6109e9336112e8565b90505f6109ff828461164690919063ffffffff16565b9050610a538360095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015461160790919063ffffffff16565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550610b2b30338361165b565b5f5f90505b600a80549050811015610ca7573373ffffffffffffffffffffffffffffffffffffffff16600a8281548110610b6857610b67612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c9a57600a6001600a80549050610bbf9190612580565b81548110610bd057610bcf612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a8281548110610c0c57610c0b612553565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a805480610c6357610c626125b3565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610ca7565b8080600101915050610b30565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7584604051610cee91906120fd565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ff9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea353083604051610d3c91906120fd565b60405180910390a25050610d4e61174b565b50565b5f6012905090565b6064600f6a52b7d2dcc80cd2e4000000610d73919061237d565b610d7d91906123eb565b81565b610d91610d8b611518565b826117e8565b50565b6301e1338081565b606460286a52b7d2dcc80cd2e4000000610db6919061237d565b610dc091906123eb565b81565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610e10611580565b610e195f611867565b565b610e2d82610e27611518565b83611755565b610e3782826117e8565b5050565b600b5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a52b7d2dcc80cd2e400000081565b606060048054610e87906122b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb3906122b8565b8015610efe5780601f10610ed557610100808354040283529160200191610efe565b820191905f5260205f20905b815481529060010190602001808311610ee157829003601f168201915b5050505050905090565b6064600a6a52b7d2dcc80cd2e4000000610f22919061237d565b610f2c91906123eb565b81565b610f37611580565b5f8111610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7090612650565b60405180910390fd5b80600b8190555050565b610f8b611531565b5f8111610fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc4906126b8565b60405180910390fd5b610fd833308361165b565b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050600a33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f611082336112e8565b90505f8111156110e65761109730338361165b565b3373ffffffffffffffffffffffffffffffffffffffff167ff9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea3530826040516110dd91906120fd565b60405180910390a25b6110fc83835f015461164690919063ffffffff16565b825f0181905550428260010181905550428260020181905550505061111f61174b565b50565b5f5f61112c611518565b905061113981858561165b565b600191505092915050565b61114c611580565b5f61115561192a565b90505f5f90505f5f90505b82518110156112ac575f60095f8584815181106111805761117f612553565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f6111e78584815181106111da576111d9612553565b5b60200260200101516112e8565b90505f81111561129d576112163086858151811061120857611207612553565b5b60200260200101518361165b565b428260020181905550611232818561164690919063ffffffff16565b935084838151811061124757611246612553565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167ff9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea35308260405161129491906120fd565b60405180910390a25b50508080600101915050611160565b507f6a51b76326892cba00f44f8bc83414a1c2e4715f4bc1ebcac12326172ed53f18816040516112dc91906120fd565b60405180910390a15050565b5f5f60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f015103611364575f9150506113e0565b5f620151808260400151426113799190612580565b61138391906123eb565b90505f6113b160646113a3600b54865f015161161c90919063ffffffff16565b61163190919063ffffffff16565b90506113da61016d6113cc848461161c90919063ffffffff16565b61163190919063ffffffff16565b93505050505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6064600a6a52b7d2dcc80cd2e4000000611481919061237d565b61148b91906123eb565b81565b611496611580565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611506575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114fd9190612200565b60405180910390fd5b61150f81611867565b50565b60085481565b5f33905090565b61152c8383836001611b74565b505050565b600260065403611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156d90612720565b60405180910390fd5b6002600681905550565b611588611518565b73ffffffffffffffffffffffffffffffffffffffff166115a6610e41565b73ffffffffffffffffffffffffffffffffffffffff1614611605576115c9611518565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115fc9190612200565b60405180910390fd5b565b5f81836116149190612580565b905092915050565b5f8183611629919061237d565b905092915050565b5f818361163e91906123eb565b905092915050565b5f8183611653919061273e565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116c29190612200565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361173b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117329190612200565b60405180910390fd5b611746838383611d43565b505050565b6001600681905550565b5f61176084846113e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156117e257818110156117d3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016117ca93929190612771565b60405180910390fd5b6117e184848484035f611b74565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611858575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161184f9190612200565b60405180910390fd5b611863825f83611d43565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60605f5f90505f5f90505b600a805490508110156119e0575f60095f600a848154811061195a57611959612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411156119d35781806119cf906127a6565b9250505b8080600101915050611935565b505f8167ffffffffffffffff8111156119fc576119fb6127ed565b5b604051908082528060200260200182016040528015611a2a5781602001602082028036833780820191505090505b5090505f5f90505f5f90505b600a80549050811015611b6a575f60095f600a8481548110611a5b57611a5a612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115611b5d57600a8181548110611ad957611ad8612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110611b1457611b13612553565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508180611b59906127a6565b9250505b8080600101915050611a36565b5081935050505090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611be4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611bdb9190612200565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c54575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c4b9190612200565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d3d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d3491906120fd565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d93578060025f828254611d87919061273e565b92505081905550611e61565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e1c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e1393929190612771565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ea8578060025f8282540392505081905550611ef2565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f4f91906120fd565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f9e82611f5c565b611fa88185611f66565b9350611fb8818560208601611f76565b611fc181611f84565b840191505092915050565b5f6020820190508181035f830152611fe48184611f94565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61201982611ff0565b9050919050565b6120298161200f565b8114612033575f5ffd5b50565b5f8135905061204481612020565b92915050565b5f819050919050565b61205c8161204a565b8114612066575f5ffd5b50565b5f8135905061207781612053565b92915050565b5f5f6040838503121561209357612092611fec565b5b5f6120a085828601612036565b92505060206120b185828601612069565b9150509250929050565b5f8115159050919050565b6120cf816120bb565b82525050565b5f6020820190506120e85f8301846120c6565b92915050565b6120f78161204a565b82525050565b5f6020820190506121105f8301846120ee565b92915050565b5f6020828403121561212b5761212a611fec565b5b5f61213884828501612036565b91505092915050565b5f6060820190506121545f8301866120ee565b61216160208301856120ee565b61216e60408301846120ee565b949350505050565b5f5f5f6060848603121561218d5761218c611fec565b5b5f61219a86828701612036565b93505060206121ab86828701612036565b92505060406121bc86828701612069565b9150509250925092565b5f602082840312156121db576121da611fec565b5b5f6121e884828501612069565b91505092915050565b6121fa8161200f565b82525050565b5f6020820190506122135f8301846121f1565b92915050565b5f60ff82169050919050565b61222e81612219565b82525050565b5f6020820190506122475f830184612225565b92915050565b5f5f6040838503121561226357612262611fec565b5b5f61227085828601612036565b925050602061228185828601612036565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122cf57607f821691505b6020821081036122e2576122e161228b565b5b50919050565b7f56657374696e67206e6f742073746172746564000000000000000000000000005f82015250565b5f61231c601383611f66565b9150612327826122e8565b602082019050919050565b5f6020820190508181035f83015261234981612310565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123878261204a565b91506123928361204a565b92508282026123a08161204a565b915082820484148315176123b7576123b6612350565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6123f58261204a565b91506124008361204a565b9250826124105761240f6123be565b5b828204905092915050565b7f4e6f20746f6b656e7320746f2072656c656173650000000000000000000000005f82015250565b5f61244f601483611f66565b915061245a8261241b565b602082019050919050565b5f6020820190508181035f83015261247c81612443565b9050919050565b7f43616e6e6f7420756e7374616b65203020746f6b656e730000000000000000005f82015250565b5f6124b7601783611f66565b91506124c282612483565b602082019050919050565b5f6020820190508181035f8301526124e4816124ab565b9050919050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f61251f601a83611f66565b915061252a826124eb565b602082019050919050565b5f6020820190508181035f83015261254c81612513565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61258a8261204a565b91506125958361204a565b92508282039050818111156125ad576125ac612350565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f5265776172642072617465206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f61263a602283611f66565b9150612645826125e0565b604082019050919050565b5f6020820190508181035f8301526126678161262e565b9050919050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f6126a2601583611f66565b91506126ad8261266e565b602082019050919050565b5f6020820190508181035f8301526126cf81612696565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61270a601f83611f66565b9150612715826126d6565b602082019050919050565b5f6020820190508181035f830152612737816126fe565b9050919050565b5f6127488261204a565b91506127538361204a565b925082820190508082111561276b5761276a612350565b5b92915050565b5f6060820190506127845f8301866121f1565b61279160208301856120ee565b61279e60408301846120ee565b949350505050565b5f6127b08261204a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127e2576127e1612350565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea2646970667358221220dea26fd50e88693e5ab7240d40137b89cd9ab888a65ddc6d86484334e0b6c34e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x355B CODESIZE SUB DUP1 PUSH2 0x355B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50696E67506F6E67506C61790000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50494E4750500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x2F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT PUSH2 0x18A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1AC ADDRESS PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x3B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1E7 ADDRESS CALLER PUSH1 0x64 PUSH1 0x28 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x21B ADDRESS ADDRESS PUSH1 0x64 PUSH1 0x14 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x24F ADDRESS CALLER PUSH1 0x64 PUSH1 0xF PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x283 ADDRESS CALLER PUSH1 0x64 PUSH1 0xA PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2B7 ADDRESS CALLER PUSH1 0x64 PUSH1 0xA PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2EB ADDRESS CALLER PUSH1 0x64 PUSH1 0x5 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x424 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x435 PUSH0 DUP4 DUP4 PUSH2 0x52F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x519 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A DUP4 DUP4 DUP4 PUSH2 0x52F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x64D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x694 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6DE JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x74C JUMP JUMPDEST DUP2 EQ PUSH2 0x768 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x779 DUP2 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7A1 DUP5 DUP3 DUP6 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x825 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x7E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x89A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x8A4 DUP7 DUP4 PUSH2 0x85F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8DF PUSH2 0x8DA PUSH2 0x8D5 DUP5 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F8 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x90C PUSH2 0x904 DUP3 PUSH2 0x8E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x86B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x923 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x92E DUP2 DUP5 DUP5 PUSH2 0x8EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x951 JUMPI PUSH2 0x946 PUSH0 DUP3 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x934 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x996 JUMPI PUSH2 0x967 DUP2 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x970 DUP5 PUSH2 0x850 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x97F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x993 PUSH2 0x98B DUP6 PUSH2 0x850 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x933 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x99B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9CE DUP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9E7 DUP3 PUSH2 0x7AA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA00 JUMPI PUSH2 0x9FF PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH2 0xA0A DUP3 SLOAD PUSH2 0x80E JUMP JUMPDEST PUSH2 0xA15 DUP3 DUP3 DUP6 PUSH2 0x955 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA46 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA34 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA3E DUP6 DUP3 PUSH2 0x9C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA54 DUP7 PUSH2 0x83E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA7B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA56 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA98 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA94 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD6 DUP3 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xACC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFF PUSH0 DUP4 ADD DUP5 PUSH2 0xADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB6F PUSH1 0x22 DUP4 PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP PUSH2 0xB7A DUP3 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB9C DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBDA DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP2 POP PUSH2 0xBE5 DUP4 PUSH2 0x74C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBF3 DUP2 PUSH2 0x74C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC0A JUMPI PUSH2 0xC09 PUSH2 0xBA3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC48 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP2 POP PUSH2 0xC53 DUP4 PUSH2 0x74C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC78 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP2 POP PUSH2 0xC83 DUP4 PUSH2 0x74C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xBA3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0x74C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCC3 PUSH0 DUP4 ADD DUP7 PUSH2 0xADD JUMP JUMPDEST PUSH2 0xCD0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xCDD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2850 DUP1 PUSH2 0xD0B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x9EF3A261 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD82E3962 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xE75C4927 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xF6F0FA8D EQ PUSH2 0x607 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCB3DBECB EQ PUSH2 0x563 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x9D2CC436 EQ PUSH2 0x4DD JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x465 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x254800D4 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x39CF9B00 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x39CF9B00 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x4CFC4D30 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5F89584E EQ PUSH2 0x3F1 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x254800D4 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x294F5FA3 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37B JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x1CFE31C2 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E1 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x14C411C7 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x1571CCF6 EQ PUSH2 0x255 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x205 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH2 0xE08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48B PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C7 PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56B PUSH2 0x1144 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x224D JUMP JUMPDEST PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D5 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x634 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x660 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x682 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6BF PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CC DUP2 DUP6 DUP6 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x742 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x1607 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x791 PUSH4 0x1E13380 PUSH2 0x783 DUP5 PUSH1 0x64 PUSH1 0x14 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0x161C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7A9 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1607 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x802 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x81A ADDRESS PUSH2 0x814 PUSH2 0xE41 JUMP JUMPDEST DUP4 PUSH2 0x165B JUMP JUMPDEST POP POP POP PUSH2 0x825 PUSH2 0x174B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x64 PUSH1 0x14 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x5 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8AE PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BB DUP6 DUP3 DUP6 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x8C6 DUP6 DUP6 DUP6 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x91B PUSH2 0x1531 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9E9 CALLER PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9FF DUP3 DUP5 PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA53 DUP4 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x1607 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB2B ADDRESS CALLER DUP4 PUSH2 0x165B JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCA7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9A JUMPI PUSH1 0xA PUSH1 0x1 PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0x25B3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xCA7 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB30 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xD4E PUSH2 0x174B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0xF PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0xD91 PUSH2 0xD8B PUSH2 0x1518 JUMP JUMPDEST DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x28 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xE19 PUSH0 PUSH2 0x1867 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE2D DUP3 PUSH2 0xE27 PUSH2 0x1518 JUMP JUMPDEST DUP4 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0xE37 DUP3 DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE87 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEB3 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0xA PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0xF37 PUSH2 0x1580 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP1 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0x1531 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 CALLER ADDRESS DUP4 PUSH2 0x165B JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0xA CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1082 CALLER PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x1097 ADDRESS CALLER DUP4 PUSH2 0x165B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x10FC DUP4 DUP4 PUSH0 ADD SLOAD PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x111F PUSH2 0x174B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x112C PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x1139 DUP2 DUP6 DUP6 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114C PUSH2 0x1580 JUMP JUMPDEST PUSH0 PUSH2 0x1155 PUSH2 0x192A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12AC JUMPI PUSH0 PUSH1 0x9 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1180 JUMPI PUSH2 0x117F PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH2 0x11E7 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x129D JUMPI PUSH2 0x1216 ADDRESS DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1208 JUMPI PUSH2 0x1207 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x165B JUMP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1232 DUP2 DUP6 PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1247 JUMPI PUSH2 0x1246 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1160 JUMP JUMPDEST POP PUSH32 0x6A51B76326892CBA00F44F8BC83414A1C2E4715F4BC1EBCAC12326172ED53F18 DUP2 PUSH1 0x40 MLOAD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SUB PUSH2 0x1364 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x13E0 JUMP JUMPDEST PUSH0 PUSH3 0x15180 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x13B1 PUSH1 0x64 PUSH2 0x13A3 PUSH1 0xB SLOAD DUP7 PUSH0 ADD MLOAD PUSH2 0x161C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13DA PUSH2 0x16D PUSH2 0x13CC DUP5 DUP5 PUSH2 0x161C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0xA PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x148B SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x1496 PUSH2 0x1580 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1506 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FD SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150F DUP2 PUSH2 0x1867 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x152C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156D SWAP1 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1588 PUSH2 0x1518 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 PUSH2 0xE41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1605 JUMPI PUSH2 0x15C9 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x163E SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1653 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16CB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C2 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1732 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1746 DUP4 DUP4 DUP4 PUSH2 0x1D43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1760 DUP5 DUP5 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x17E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17D3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1858 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1863 DUP3 PUSH0 DUP4 PUSH2 0x1D43 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x19E0 JUMPI PUSH0 PUSH1 0x9 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x19D3 JUMPI DUP2 DUP1 PUSH2 0x19CF SWAP1 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1935 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x27ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A2A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1B6A JUMPI PUSH0 PUSH1 0x9 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A5B JUMPI PUSH2 0x1A5A PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1B5D JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AD9 JUMPI PUSH2 0x1AD8 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1B59 SWAP1 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A36 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDB SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D3D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D34 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D93 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D87 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E61 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E1C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E13 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EA8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EF2 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F4F SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9E DUP3 PUSH2 0x1F5C JUMP JUMPDEST PUSH2 0x1FA8 DUP2 DUP6 PUSH2 0x1F66 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x1FC1 DUP2 PUSH2 0x1F84 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE4 DUP2 DUP5 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2029 DUP2 PUSH2 0x200F JUMP JUMPDEST DUP2 EQ PUSH2 0x2033 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2044 DUP2 PUSH2 0x2020 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x204A JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2077 DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A0 DUP6 DUP3 DUP7 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CF DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F7 DUP2 PUSH2 0x204A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2110 PUSH0 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212B JUMPI PUSH2 0x212A PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2138 DUP5 DUP3 DUP6 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2154 PUSH0 DUP4 ADD DUP7 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2161 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x216E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x218D JUMPI PUSH2 0x218C PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219A DUP7 DUP3 DUP8 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21AB DUP7 DUP3 DUP8 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21BC DUP7 DUP3 DUP8 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DB JUMPI PUSH2 0x21DA PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E8 DUP5 DUP3 DUP6 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21FA DUP2 PUSH2 0x200F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2213 PUSH0 DUP4 ADD DUP5 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x222E DUP2 PUSH2 0x2219 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2247 PUSH0 DUP4 ADD DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2263 JUMPI PUSH2 0x2262 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2270 DUP6 DUP3 DUP7 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2281 DUP6 DUP3 DUP7 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x228B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67206E6F74207374617274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x231C PUSH1 0x13 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2327 DUP3 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2349 DUP2 PUSH2 0x2310 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2387 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2392 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x23A0 DUP2 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x23B7 JUMPI PUSH2 0x23B6 PUSH2 0x2350 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23F5 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2400 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2410 JUMPI PUSH2 0x240F PUSH2 0x23BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x244F PUSH1 0x14 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x245A DUP3 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x247C DUP2 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420756E7374616B65203020746F6B656E73000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24B7 PUSH1 0x17 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C2 DUP3 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E4 DUP2 PUSH2 0x24AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x251F PUSH1 0x1A DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x252A DUP3 PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x254C DUP2 PUSH2 0x2513 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x258A DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2595 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25AD JUMPI PUSH2 0x25AC PUSH2 0x2350 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x263A PUSH1 0x22 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2645 DUP3 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2667 DUP2 PUSH2 0x262E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26A2 PUSH1 0x15 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x26AD DUP3 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26CF DUP2 PUSH2 0x2696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x270A PUSH1 0x1F DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2715 DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2737 DUP2 PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2748 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2753 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x276B JUMPI PUSH2 0x276A PUSH2 0x2350 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2784 PUSH0 DUP4 ADD DUP7 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x2791 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x279E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B0 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27E2 JUMPI PUSH2 0x27E1 PUSH2 0x2350 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE LOG2 PUSH16 0xD50E88693E5AB7240D40137B89CD9AB8 DUP9 0xA6 TSTORE 0xDC PUSH14 0x86484334E0B6C34E64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "482:7747:9:-:0;;;1940:765;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;530:4;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;2037:1:9::1;2023:11;:15;2015:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2109:11;2096:10;:24;;;;2139:34;2153:4;647:22;2139:5;;;:34;;:::i;:::-;2207:15;2192:12;:30;;;;2267:49;2285:4;2292:10;767:3;762:2;647:22;747:17;;;;:::i;:::-;:23;;;;:::i;:::-;2267:9;;;:49;;:::i;:::-;2346:54;2364:4;2379;836:3;831:2;647:22;816:17;;;;:::i;:::-;:23;;;;:::i;:::-;2346:9;;;:54;;:::i;:::-;2452:59;2470:4;2477:10;913:3;908:2;647:22;893:17;;;;:::i;:::-;:23;;;;:::i;:::-;2452:9;;;:59;;:::i;:::-;2521:57;2539:4;2546:10;988:3;983:2;647:22;968:17;;;;:::i;:::-;:23;;;;:::i;:::-;2521:9;;;:57;;:::i;:::-;2588:45;2606:4;2613:10;1051:3;1046:2;647:22;1031:17;;;;:::i;:::-;:23;;;;:::i;:::-;2588:9;;;:45;;:::i;:::-;2643:55;2661:4;2668:10;1123:3;1119:1;647:22;1104:16;;;;:::i;:::-;:22;;;;:::i;:::-;2643:9;;;:55;;:::i;:::-;1940:765:::0;482:7747;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;;;:24;;:::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:169::-;6865:11;6899:6;6894:3;6887:19;6939:4;6934:3;6930:14;6915:29;;6781:169;;;;:::o;6956:221::-;7096:34;7092:1;7084:6;7080:14;7073:58;7165:4;7160:2;7152:6;7148:15;7141:29;6956:221;:::o;7183:366::-;7325:3;7346:67;7410:2;7405:3;7346:67;:::i;:::-;7339:74;;7422:93;7511:3;7422:93;:::i;:::-;7540:2;7535:3;7531:12;7524:19;;7183:366;;;:::o;7555:419::-;7721:4;7759:2;7748:9;7744:18;7736:26;;7808:9;7802:4;7798:20;7794:1;7783:9;7779:17;7772:47;7836:131;7962:4;7836:131;:::i;:::-;7828:139;;7555:419;;;:::o;7980:180::-;8028:77;8025:1;8018:88;8125:4;8122:1;8115:15;8149:4;8146:1;8139:15;8166:410;8206:7;8229:20;8247:1;8229:20;:::i;:::-;8224:25;;8263:20;8281:1;8263:20;:::i;:::-;8258:25;;8318:1;8315;8311:9;8340:30;8358:11;8340:30;:::i;:::-;8329:41;;8519:1;8510:7;8506:15;8503:1;8500:22;8480:1;8473:9;8453:83;8430:139;;8549:18;;:::i;:::-;8430:139;8214:362;8166:410;;;;:::o;8582:180::-;8630:77;8627:1;8620:88;8727:4;8724:1;8717:15;8751:4;8748:1;8741:15;8768:185;8808:1;8825:20;8843:1;8825:20;:::i;:::-;8820:25;;8859:20;8877:1;8859:20;:::i;:::-;8854:25;;8898:1;8888:35;;8903:18;;:::i;:::-;8888:35;8945:1;8942;8938:9;8933:14;;8768:185;;;;:::o;8959:191::-;8999:3;9018:20;9036:1;9018:20;:::i;:::-;9013:25;;9052:20;9070:1;9052:20;:::i;:::-;9047:25;;9095:1;9092;9088:9;9081:16;;9116:3;9113:1;9110:10;9107:36;;;9123:18;;:::i;:::-;9107:36;8959:191;;;;:::o;9156:118::-;9243:24;9261:5;9243:24;:::i;:::-;9238:3;9231:37;9156:118;;:::o;9280:442::-;9429:4;9467:2;9456:9;9452:18;9444:26;;9480:71;9548:1;9537:9;9533:17;9524:6;9480:71;:::i;:::-;9561:72;9629:2;9618:9;9614:18;9605:6;9561:72;:::i;:::-;9643;9711:2;9700:9;9696:18;9687:6;9643:72;:::i;:::-;9280:442;;;;;;:::o;9728:222::-;9821:4;9859:2;9848:9;9844:18;9836:26;;9872:71;9940:1;9929:9;9925:17;9916:6;9872:71;:::i;:::-;9728:222;;;;:::o;482:7747:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COMMUNITY_REWARDS_1428": {
									"entryPoint": 2173,
									"id": 1428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MARKETING_PARTNERSHIP_1407": {
									"entryPoint": 3417,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PROJECT_DEVELOPMENT_1414": {
									"entryPoint": 5223,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PUBLIC_SALE_1393": {
									"entryPoint": 3484,
									"id": 1393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RESERVE_1421": {
									"entryPoint": 3848,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TEAM_FOUNDERS_1400": {
									"entryPoint": 2087,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_1386": {
									"entryPoint": 3689,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VESTING_DURATION_1433": {
									"entryPoint": 3476,
									"id": 1433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 5407,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 7028,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_737": {
									"entryPoint": 6120,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5504,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getAllStakers_2093": {
									"entryPoint": 6442,
									"id": 2093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1026": {
									"entryPoint": 5400,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 5963,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 5425,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 5973,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6247,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 5723,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 7491,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1220": {
									"entryPoint": 5702,
									"id": 1220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_491": {
									"entryPoint": 5093,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1717,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 3523,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_987": {
									"entryPoint": 3611,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_966": {
									"entryPoint": 3456,
									"id": 966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1915": {
									"entryPoint": 4840,
									"id": 1915,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_428": {
									"entryPoint": 3409,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1265": {
									"entryPoint": 5681,
									"id": 1265,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1250": {
									"entryPoint": 5660,
									"id": 1250,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_410": {
									"entryPoint": 1573,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3649,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseAllInterest_2005": {
									"entryPoint": 4420,
									"id": 2005,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseTeamTokens_1635": {
									"entryPoint": 1751,
									"id": 1635,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3592,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_1452": {
									"entryPoint": 3643,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeAddresses_1450": {
									"entryPoint": 2264,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1728": {
									"entryPoint": 3971,
									"id": 1728,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_1447": {
									"entryPoint": 2126,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1235": {
									"entryPoint": 5639,
									"id": 1235,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_419": {
									"entryPoint": 3704,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@teamReleased_1435": {
									"entryPoint": 5394,
									"id": 1435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_437": {
									"entryPoint": 2164,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 2212,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5262,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 4386,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstake_1862": {
									"entryPoint": 2323,
									"id": 1862,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardRate_1569": {
									"entryPoint": 3887,
									"id": 1569,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestingStart_1430": {
									"entryPoint": 2258,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10097,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9651,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16": {
									"entryPoint": 9451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695": {
									"entryPoint": 9696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16708:10",
										"nodeType": "YulBlock",
										"src": "0:16708:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3757:263:10",
													"nodeType": "YulBlock",
													"src": "3757:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:10",
																"nodeType": "YulBlock",
																"src": "3803:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:10"
																			},
																			"nativeSrc": "3805:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:10"
																		},
																		"nativeSrc": "3805:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:10"
																		},
																		"nativeSrc": "3774:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:10"
																},
																"nativeSrc": "3770:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:10"
															},
															"nativeSrc": "3767:119:10",
															"nodeType": "YulIf",
															"src": "3767:119:10"
														},
														{
															"nativeSrc": "3896:117:10",
															"nodeType": "YulBlock",
															"src": "3896:117:10",
															"statements": [
																{
																	"nativeSrc": "3911:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:10"
																				},
																				"nativeSrc": "3971:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3950:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:10"
																		},
																		"nativeSrc": "3950:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3691:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:10",
														"nodeType": "YulTypedName",
														"src": "3727:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:10",
														"nodeType": "YulTypedName",
														"src": "3738:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:10",
														"nodeType": "YulTypedName",
														"src": "3750:6:10",
														"type": ""
													}
												],
												"src": "3691:329:10"
											},
											{
												"body": {
													"nativeSrc": "4180:288:10",
													"nodeType": "YulBlock",
													"src": "4180:288:10",
													"statements": [
														{
															"nativeSrc": "4190:26:10",
															"nodeType": "YulAssignment",
															"src": "4190:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4202:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4202:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4213:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4213:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4198:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:10"
																},
																"nativeSrc": "4198:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4198:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4190:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4190:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4270:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4270:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4283:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4294:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4294:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4279:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:10"
																		},
																		"nativeSrc": "4279:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4226:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4226:43:10"
																},
																"nativeSrc": "4226:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4226:71:10"
															},
															"nativeSrc": "4226:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4226:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4351:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4375:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4375:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4360:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4360:3:10"
																		},
																		"nativeSrc": "4360:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4360:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4307:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4307:43:10"
																},
																"nativeSrc": "4307:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4307:72:10"
															},
															"nativeSrc": "4307:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4307:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4433:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:10"
																		},
																		"nativeSrc": "4442:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4389:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4389:43:10"
																},
																"nativeSrc": "4389:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4389:72:10"
															},
															"nativeSrc": "4389:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4389:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4026:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4136:9:10",
														"nodeType": "YulTypedName",
														"src": "4136:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4148:6:10",
														"nodeType": "YulTypedName",
														"src": "4148:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4156:6:10",
														"nodeType": "YulTypedName",
														"src": "4156:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4164:6:10",
														"nodeType": "YulTypedName",
														"src": "4164:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4175:4:10",
														"nodeType": "YulTypedName",
														"src": "4175:4:10",
														"type": ""
													}
												],
												"src": "4026:442:10"
											},
											{
												"body": {
													"nativeSrc": "4574:519:10",
													"nodeType": "YulBlock",
													"src": "4574:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4620:83:10",
																"nodeType": "YulBlock",
																"src": "4620:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4622:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4622:77:10"
																			},
																			"nativeSrc": "4622:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4622:79:10"
																		},
																		"nativeSrc": "4622:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4622:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4595:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4595:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4604:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4604:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4591:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:10"
																		},
																		"nativeSrc": "4591:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4591:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4616:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4587:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4587:3:10"
																},
																"nativeSrc": "4587:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4587:32:10"
															},
															"nativeSrc": "4584:119:10",
															"nodeType": "YulIf",
															"src": "4584:119:10"
														},
														{
															"nativeSrc": "4713:117:10",
															"nodeType": "YulBlock",
															"src": "4713:117:10",
															"statements": [
																{
																	"nativeSrc": "4728:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4728:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4742:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4742:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4732:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4732:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4757:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4757:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4792:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4792:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4803:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4803:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4788:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4788:3:10"
																				},
																				"nativeSrc": "4788:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4788:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4812:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4767:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4767:20:10"
																		},
																		"nativeSrc": "4767:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4767:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4757:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4757:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4840:118:10",
															"nodeType": "YulBlock",
															"src": "4840:118:10",
															"statements": [
																{
																	"nativeSrc": "4855:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4855:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4869:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4869:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4859:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4859:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4885:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4885:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4920:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4920:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4931:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4931:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4916:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:10"
																				},
																				"nativeSrc": "4916:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4916:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4895:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4895:20:10"
																		},
																		"nativeSrc": "4895:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4885:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4885:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4968:118:10",
															"nodeType": "YulBlock",
															"src": "4968:118:10",
															"statements": [
																{
																	"nativeSrc": "4983:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4983:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4997:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4997:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4987:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4987:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5013:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5013:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5048:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5048:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5059:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5059:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5044:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:3:10"
																				},
																				"nativeSrc": "5044:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5044:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5068:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5068:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5023:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5023:20:10"
																		},
																		"nativeSrc": "5023:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5013:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5013:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4474:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4528:9:10",
														"nodeType": "YulTypedName",
														"src": "4528:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4539:7:10",
														"nodeType": "YulTypedName",
														"src": "4539:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4551:6:10",
														"nodeType": "YulTypedName",
														"src": "4551:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4559:6:10",
														"nodeType": "YulTypedName",
														"src": "4559:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4567:6:10",
														"nodeType": "YulTypedName",
														"src": "4567:6:10",
														"type": ""
													}
												],
												"src": "4474:619:10"
											},
											{
												"body": {
													"nativeSrc": "5165:263:10",
													"nodeType": "YulBlock",
													"src": "5165:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5211:83:10",
																"nodeType": "YulBlock",
																"src": "5211:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5213:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5213:77:10"
																			},
																			"nativeSrc": "5213:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5213:79:10"
																		},
																		"nativeSrc": "5213:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5213:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5186:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5186:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5195:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5195:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5182:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5182:3:10"
																		},
																		"nativeSrc": "5182:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5182:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5207:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5207:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5178:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:10"
																},
																"nativeSrc": "5178:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5178:32:10"
															},
															"nativeSrc": "5175:119:10",
															"nodeType": "YulIf",
															"src": "5175:119:10"
														},
														{
															"nativeSrc": "5304:117:10",
															"nodeType": "YulBlock",
															"src": "5304:117:10",
															"statements": [
																{
																	"nativeSrc": "5319:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5319:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5333:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5333:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5323:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5323:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5348:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5348:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5383:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5383:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5394:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5394:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5379:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5379:3:10"
																				},
																				"nativeSrc": "5379:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5379:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5403:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5403:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5358:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5358:20:10"
																		},
																		"nativeSrc": "5358:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5358:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5348:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5348:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5099:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5135:9:10",
														"nodeType": "YulTypedName",
														"src": "5135:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5146:7:10",
														"nodeType": "YulTypedName",
														"src": "5146:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5158:6:10",
														"nodeType": "YulTypedName",
														"src": "5158:6:10",
														"type": ""
													}
												],
												"src": "5099:329:10"
											},
											{
												"body": {
													"nativeSrc": "5499:53:10",
													"nodeType": "YulBlock",
													"src": "5499:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5516:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5516:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5539:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5521:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5521:17:10"
																		},
																		"nativeSrc": "5521:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5521:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5509:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:10"
																},
																"nativeSrc": "5509:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5509:37:10"
															},
															"nativeSrc": "5509:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5509:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5434:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5487:5:10",
														"nodeType": "YulTypedName",
														"src": "5487:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5494:3:10",
														"nodeType": "YulTypedName",
														"src": "5494:3:10",
														"type": ""
													}
												],
												"src": "5434:118:10"
											},
											{
												"body": {
													"nativeSrc": "5656:124:10",
													"nodeType": "YulBlock",
													"src": "5656:124:10",
													"statements": [
														{
															"nativeSrc": "5666:26:10",
															"nodeType": "YulAssignment",
															"src": "5666:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5678:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5678:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5689:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5689:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5674:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:10"
																},
																"nativeSrc": "5674:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5674:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5666:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5666:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5746:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5746:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5759:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5759:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5770:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5770:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5755:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5755:3:10"
																		},
																		"nativeSrc": "5755:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5755:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5702:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5702:43:10"
																},
																"nativeSrc": "5702:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5702:71:10"
															},
															"nativeSrc": "5702:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5702:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5558:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5628:9:10",
														"nodeType": "YulTypedName",
														"src": "5628:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5640:6:10",
														"nodeType": "YulTypedName",
														"src": "5640:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5651:4:10",
														"nodeType": "YulTypedName",
														"src": "5651:4:10",
														"type": ""
													}
												],
												"src": "5558:222:10"
											},
											{
												"body": {
													"nativeSrc": "5829:43:10",
													"nodeType": "YulBlock",
													"src": "5829:43:10",
													"statements": [
														{
															"nativeSrc": "5839:27:10",
															"nodeType": "YulAssignment",
															"src": "5839:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5854:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5854:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5861:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5861:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5850:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5850:3:10"
																},
																"nativeSrc": "5850:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5850:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5839:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5839:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5786:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5811:5:10",
														"nodeType": "YulTypedName",
														"src": "5811:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5821:7:10",
														"nodeType": "YulTypedName",
														"src": "5821:7:10",
														"type": ""
													}
												],
												"src": "5786:86:10"
											},
											{
												"body": {
													"nativeSrc": "5939:51:10",
													"nodeType": "YulBlock",
													"src": "5939:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5956:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5977:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5977:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5961:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "5961:15:10"
																		},
																		"nativeSrc": "5961:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5961:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:10"
																},
																"nativeSrc": "5949:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5949:35:10"
															},
															"nativeSrc": "5949:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5949:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5878:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5927:5:10",
														"nodeType": "YulTypedName",
														"src": "5927:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5934:3:10",
														"nodeType": "YulTypedName",
														"src": "5934:3:10",
														"type": ""
													}
												],
												"src": "5878:112:10"
											},
											{
												"body": {
													"nativeSrc": "6090:120:10",
													"nodeType": "YulBlock",
													"src": "6090:120:10",
													"statements": [
														{
															"nativeSrc": "6100:26:10",
															"nodeType": "YulAssignment",
															"src": "6100:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6112:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6112:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6123:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6123:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6108:3:10"
																},
																"nativeSrc": "6108:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6108:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6100:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6100:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6176:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6189:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6200:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6200:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6185:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:10"
																		},
																		"nativeSrc": "6185:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6185:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6136:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "6136:39:10"
																},
																"nativeSrc": "6136:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6136:67:10"
															},
															"nativeSrc": "6136:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "6136:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5996:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6062:9:10",
														"nodeType": "YulTypedName",
														"src": "6062:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6074:6:10",
														"nodeType": "YulTypedName",
														"src": "6074:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6085:4:10",
														"nodeType": "YulTypedName",
														"src": "6085:4:10",
														"type": ""
													}
												],
												"src": "5996:214:10"
											},
											{
												"body": {
													"nativeSrc": "6299:391:10",
													"nodeType": "YulBlock",
													"src": "6299:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6345:83:10",
																"nodeType": "YulBlock",
																"src": "6345:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6347:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6347:77:10"
																			},
																			"nativeSrc": "6347:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6347:79:10"
																		},
																		"nativeSrc": "6347:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6347:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6320:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6320:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6329:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6329:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6316:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6316:3:10"
																		},
																		"nativeSrc": "6316:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6316:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6341:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6341:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6312:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:10"
																},
																"nativeSrc": "6312:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6312:32:10"
															},
															"nativeSrc": "6309:119:10",
															"nodeType": "YulIf",
															"src": "6309:119:10"
														},
														{
															"nativeSrc": "6438:117:10",
															"nodeType": "YulBlock",
															"src": "6438:117:10",
															"statements": [
																{
																	"nativeSrc": "6453:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6453:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6467:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6457:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6457:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6482:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6482:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6517:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6517:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6528:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6528:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6513:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6513:3:10"
																				},
																				"nativeSrc": "6513:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6513:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6537:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6537:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6492:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6492:20:10"
																		},
																		"nativeSrc": "6492:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6492:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6482:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6482:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6565:118:10",
															"nodeType": "YulBlock",
															"src": "6565:118:10",
															"statements": [
																{
																	"nativeSrc": "6580:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6580:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6594:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6584:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6584:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6610:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6610:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6645:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6645:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6656:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6656:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6641:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6641:3:10"
																				},
																				"nativeSrc": "6641:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6641:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6665:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6665:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6620:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6620:20:10"
																		},
																		"nativeSrc": "6620:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6610:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6610:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6216:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6261:9:10",
														"nodeType": "YulTypedName",
														"src": "6261:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6272:7:10",
														"nodeType": "YulTypedName",
														"src": "6272:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6284:6:10",
														"nodeType": "YulTypedName",
														"src": "6284:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6292:6:10",
														"nodeType": "YulTypedName",
														"src": "6292:6:10",
														"type": ""
													}
												],
												"src": "6216:474:10"
											},
											{
												"body": {
													"nativeSrc": "6724:152:10",
													"nodeType": "YulBlock",
													"src": "6724:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6741:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6741:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6744:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6744:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6734:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:10"
																},
																"nativeSrc": "6734:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6734:88:10"
															},
															"nativeSrc": "6734:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6734:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6838:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6838:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6841:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6841:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6831:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:10"
																},
																"nativeSrc": "6831:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6831:15:10"
															},
															"nativeSrc": "6831:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6831:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6862:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6862:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6865:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6865:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6855:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6855:6:10"
																},
																"nativeSrc": "6855:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6855:15:10"
															},
															"nativeSrc": "6855:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6855:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6696:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6696:180:10"
											},
											{
												"body": {
													"nativeSrc": "6933:269:10",
													"nodeType": "YulBlock",
													"src": "6933:269:10",
													"statements": [
														{
															"nativeSrc": "6943:22:10",
															"nodeType": "YulAssignment",
															"src": "6943:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6957:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6957:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6963:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6963:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:10"
																},
																"nativeSrc": "6953:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6953:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6943:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6943:6:10"
																}
															]
														},
														{
															"nativeSrc": "6974:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6974:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7004:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7004:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7010:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7010:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7000:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:10"
																},
																"nativeSrc": "7000:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7000:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6978:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6978:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7051:51:10",
																"nodeType": "YulBlock",
																"src": "7051:51:10",
																"statements": [
																	{
																		"nativeSrc": "7065:27:10",
																		"nodeType": "YulAssignment",
																		"src": "7065:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7079:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7079:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7087:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7087:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7075:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7075:3:10"
																			},
																			"nativeSrc": "7075:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7075:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7065:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7065:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7031:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7031:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7024:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7024:6:10"
																},
																"nativeSrc": "7024:26:10",
																"nodeType": "YulFunctionCall",
																"src": "7024:26:10"
															},
															"nativeSrc": "7021:81:10",
															"nodeType": "YulIf",
															"src": "7021:81:10"
														},
														{
															"body": {
																"nativeSrc": "7154:42:10",
																"nodeType": "YulBlock",
																"src": "7154:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7168:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7168:16:10"
																			},
																			"nativeSrc": "7168:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7168:18:10"
																		},
																		"nativeSrc": "7168:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7168:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7118:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7118:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7141:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7141:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7149:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7149:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7138:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7138:2:10"
																		},
																		"nativeSrc": "7138:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7138:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7115:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7115:2:10"
																},
																"nativeSrc": "7115:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7115:38:10"
															},
															"nativeSrc": "7112:84:10",
															"nodeType": "YulIf",
															"src": "7112:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6882:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6917:4:10",
														"nodeType": "YulTypedName",
														"src": "6917:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6926:6:10",
														"nodeType": "YulTypedName",
														"src": "6926:6:10",
														"type": ""
													}
												],
												"src": "6882:320:10"
											},
											{
												"body": {
													"nativeSrc": "7314:63:10",
													"nodeType": "YulBlock",
													"src": "7314:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7336:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7336:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7344:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7344:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:10"
																		},
																		"nativeSrc": "7332:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7332:14:10"
																	},
																	{
																		"hexValue": "56657374696e67206e6f742073746172746564",
																		"kind": "string",
																		"nativeSrc": "7348:21:10",
																		"nodeType": "YulLiteral",
																		"src": "7348:21:10",
																		"type": "",
																		"value": "Vesting not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7325:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7325:6:10"
																},
																"nativeSrc": "7325:45:10",
																"nodeType": "YulFunctionCall",
																"src": "7325:45:10"
															},
															"nativeSrc": "7325:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "7325:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7",
												"nativeSrc": "7208:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7306:6:10",
														"nodeType": "YulTypedName",
														"src": "7306:6:10",
														"type": ""
													}
												],
												"src": "7208:169:10"
											},
											{
												"body": {
													"nativeSrc": "7529:220:10",
													"nodeType": "YulBlock",
													"src": "7529:220:10",
													"statements": [
														{
															"nativeSrc": "7539:74:10",
															"nodeType": "YulAssignment",
															"src": "7539:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7605:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7605:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7610:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7610:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7546:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7546:58:10"
																},
																"nativeSrc": "7546:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7539:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7711:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7711:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7",
																	"nativeSrc": "7622:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7622:88:10"
																},
																"nativeSrc": "7622:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7622:93:10"
															},
															"nativeSrc": "7622:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7622:93:10"
														},
														{
															"nativeSrc": "7724:19:10",
															"nodeType": "YulAssignment",
															"src": "7724:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7735:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7735:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7740:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7740:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7731:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:10"
																},
																"nativeSrc": "7731:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7731:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7724:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7724:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7383:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7517:3:10",
														"nodeType": "YulTypedName",
														"src": "7517:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7525:3:10",
														"nodeType": "YulTypedName",
														"src": "7525:3:10",
														"type": ""
													}
												],
												"src": "7383:366:10"
											},
											{
												"body": {
													"nativeSrc": "7926:248:10",
													"nodeType": "YulBlock",
													"src": "7926:248:10",
													"statements": [
														{
															"nativeSrc": "7936:26:10",
															"nodeType": "YulAssignment",
															"src": "7936:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7948:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7948:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7959:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7959:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7944:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7944:3:10"
																},
																"nativeSrc": "7944:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7944:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7936:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7936:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7983:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7983:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7994:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7994:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7979:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7979:3:10"
																		},
																		"nativeSrc": "7979:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7979:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8002:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8002:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8008:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8008:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7998:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7998:3:10"
																		},
																		"nativeSrc": "7998:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7998:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7972:6:10"
																},
																"nativeSrc": "7972:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7972:47:10"
															},
															"nativeSrc": "7972:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7972:47:10"
														},
														{
															"nativeSrc": "8028:139:10",
															"nodeType": "YulAssignment",
															"src": "8028:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8162:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8162:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8036:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8036:124:10"
																},
																"nativeSrc": "8036:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8036:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8028:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8028:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7755:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7906:9:10",
														"nodeType": "YulTypedName",
														"src": "7906:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7921:4:10",
														"nodeType": "YulTypedName",
														"src": "7921:4:10",
														"type": ""
													}
												],
												"src": "7755:419:10"
											},
											{
												"body": {
													"nativeSrc": "8208:152:10",
													"nodeType": "YulBlock",
													"src": "8208:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8225:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8225:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8228:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8228:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8218:6:10"
																},
																"nativeSrc": "8218:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8218:88:10"
															},
															"nativeSrc": "8218:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8218:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8322:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8322:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8325:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8325:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8315:6:10"
																},
																"nativeSrc": "8315:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8315:15:10"
															},
															"nativeSrc": "8315:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8315:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8346:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8346:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8349:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8349:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8339:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8339:6:10"
																},
																"nativeSrc": "8339:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8339:15:10"
															},
															"nativeSrc": "8339:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8339:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8180:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8180:180:10"
											},
											{
												"body": {
													"nativeSrc": "8414:362:10",
													"nodeType": "YulBlock",
													"src": "8414:362:10",
													"statements": [
														{
															"nativeSrc": "8424:25:10",
															"nodeType": "YulAssignment",
															"src": "8424:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8447:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8447:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8429:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8429:17:10"
																},
																"nativeSrc": "8429:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8429:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8424:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8424:1:10"
																}
															]
														},
														{
															"nativeSrc": "8458:25:10",
															"nodeType": "YulAssignment",
															"src": "8458:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8481:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8481:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8463:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8463:17:10"
																},
																"nativeSrc": "8463:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8463:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8458:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8458:1:10"
																}
															]
														},
														{
															"nativeSrc": "8492:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8492:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8515:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8515:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8518:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8518:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8511:3:10"
																},
																"nativeSrc": "8511:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8511:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8496:11:10",
																	"nodeType": "YulTypedName",
																	"src": "8496:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8529:41:10",
															"nodeType": "YulAssignment",
															"src": "8529:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8558:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8558:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8540:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8540:17:10"
																},
																"nativeSrc": "8540:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8540:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8529:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8529:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8747:22:10",
																"nodeType": "YulBlock",
																"src": "8747:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8749:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8749:16:10"
																			},
																			"nativeSrc": "8749:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8749:18:10"
																		},
																		"nativeSrc": "8749:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8749:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8680:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8680:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8673:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8673:6:10"
																				},
																				"nativeSrc": "8673:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8673:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8703:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8703:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8710:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8710:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8719:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8719:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8706:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8706:3:10"
																						},
																						"nativeSrc": "8706:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8706:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8700:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8700:2:10"
																				},
																				"nativeSrc": "8700:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8700:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8653:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8653:2:10"
																		},
																		"nativeSrc": "8653:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8653:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8633:6:10"
																},
																"nativeSrc": "8633:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8633:113:10"
															},
															"nativeSrc": "8630:139:10",
															"nodeType": "YulIf",
															"src": "8630:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8366:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8397:1:10",
														"nodeType": "YulTypedName",
														"src": "8397:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8400:1:10",
														"nodeType": "YulTypedName",
														"src": "8400:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8406:7:10",
														"nodeType": "YulTypedName",
														"src": "8406:7:10",
														"type": ""
													}
												],
												"src": "8366:410:10"
											},
											{
												"body": {
													"nativeSrc": "8810:152:10",
													"nodeType": "YulBlock",
													"src": "8810:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8827:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8827:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8830:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8830:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8820:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8820:6:10"
																},
																"nativeSrc": "8820:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8820:88:10"
															},
															"nativeSrc": "8820:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8820:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8924:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8927:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8927:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8917:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:10"
																},
																"nativeSrc": "8917:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8917:15:10"
															},
															"nativeSrc": "8917:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8917:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8948:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8948:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8951:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8951:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8941:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8941:6:10"
																},
																"nativeSrc": "8941:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8941:15:10"
															},
															"nativeSrc": "8941:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8941:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8782:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8782:180:10"
											},
											{
												"body": {
													"nativeSrc": "9010:143:10",
													"nodeType": "YulBlock",
													"src": "9010:143:10",
													"statements": [
														{
															"nativeSrc": "9020:25:10",
															"nodeType": "YulAssignment",
															"src": "9020:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9043:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9043:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9025:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9025:17:10"
																},
																"nativeSrc": "9025:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9025:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9020:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9020:1:10"
																}
															]
														},
														{
															"nativeSrc": "9054:25:10",
															"nodeType": "YulAssignment",
															"src": "9054:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9077:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9077:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9059:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9059:17:10"
																},
																"nativeSrc": "9059:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9059:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9054:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9054:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9101:22:10",
																"nodeType": "YulBlock",
																"src": "9101:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9103:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9103:16:10"
																			},
																			"nativeSrc": "9103:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9103:18:10"
																		},
																		"nativeSrc": "9103:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9103:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9098:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9098:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9091:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9091:6:10"
																},
																"nativeSrc": "9091:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9091:9:10"
															},
															"nativeSrc": "9088:35:10",
															"nodeType": "YulIf",
															"src": "9088:35:10"
														},
														{
															"nativeSrc": "9133:14:10",
															"nodeType": "YulAssignment",
															"src": "9133:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9142:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9142:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9145:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9145:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9138:3:10"
																},
																"nativeSrc": "9138:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9138:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9133:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9133:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8968:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8999:1:10",
														"nodeType": "YulTypedName",
														"src": "8999:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9002:1:10",
														"nodeType": "YulTypedName",
														"src": "9002:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9008:1:10",
														"nodeType": "YulTypedName",
														"src": "9008:1:10",
														"type": ""
													}
												],
												"src": "8968:185:10"
											},
											{
												"body": {
													"nativeSrc": "9265:64:10",
													"nodeType": "YulBlock",
													"src": "9265:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9287:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9287:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9295:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9295:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9283:3:10"
																		},
																		"nativeSrc": "9283:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9283:14:10"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "9299:22:10",
																		"nodeType": "YulLiteral",
																		"src": "9299:22:10",
																		"type": "",
																		"value": "No tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9276:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9276:6:10"
																},
																"nativeSrc": "9276:46:10",
																"nodeType": "YulFunctionCall",
																"src": "9276:46:10"
															},
															"nativeSrc": "9276:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "9276:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
												"nativeSrc": "9159:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9257:6:10",
														"nodeType": "YulTypedName",
														"src": "9257:6:10",
														"type": ""
													}
												],
												"src": "9159:170:10"
											},
											{
												"body": {
													"nativeSrc": "9481:220:10",
													"nodeType": "YulBlock",
													"src": "9481:220:10",
													"statements": [
														{
															"nativeSrc": "9491:74:10",
															"nodeType": "YulAssignment",
															"src": "9491:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9557:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9557:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9562:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9562:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9498:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9498:58:10"
																},
																"nativeSrc": "9498:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9498:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9491:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9491:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9663:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9663:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																	"nativeSrc": "9574:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9574:88:10"
																},
																"nativeSrc": "9574:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9574:93:10"
															},
															"nativeSrc": "9574:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9574:93:10"
														},
														{
															"nativeSrc": "9676:19:10",
															"nodeType": "YulAssignment",
															"src": "9676:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9687:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9687:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9692:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9683:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9683:3:10"
																},
																"nativeSrc": "9683:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9683:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9676:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9676:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9335:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9469:3:10",
														"nodeType": "YulTypedName",
														"src": "9469:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9477:3:10",
														"nodeType": "YulTypedName",
														"src": "9477:3:10",
														"type": ""
													}
												],
												"src": "9335:366:10"
											},
											{
												"body": {
													"nativeSrc": "9878:248:10",
													"nodeType": "YulBlock",
													"src": "9878:248:10",
													"statements": [
														{
															"nativeSrc": "9888:26:10",
															"nodeType": "YulAssignment",
															"src": "9888:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9900:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9900:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9911:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9911:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9896:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9896:3:10"
																},
																"nativeSrc": "9896:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9896:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9888:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9888:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9935:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9935:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9946:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9946:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9931:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9931:3:10"
																		},
																		"nativeSrc": "9931:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9931:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9954:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9954:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9960:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9960:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:10"
																		},
																		"nativeSrc": "9950:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9950:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9924:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:10"
																},
																"nativeSrc": "9924:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9924:47:10"
															},
															"nativeSrc": "9924:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9924:47:10"
														},
														{
															"nativeSrc": "9980:139:10",
															"nodeType": "YulAssignment",
															"src": "9980:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10114:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10114:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9988:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9988:124:10"
																},
																"nativeSrc": "9988:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9988:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9980:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9980:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9707:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9858:9:10",
														"nodeType": "YulTypedName",
														"src": "9858:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9873:4:10",
														"nodeType": "YulTypedName",
														"src": "9873:4:10",
														"type": ""
													}
												],
												"src": "9707:419:10"
											},
											{
												"body": {
													"nativeSrc": "10238:67:10",
													"nodeType": "YulBlock",
													"src": "10238:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10260:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10260:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10268:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10268:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10256:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10256:3:10"
																		},
																		"nativeSrc": "10256:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10256:14:10"
																	},
																	{
																		"hexValue": "43616e6e6f7420756e7374616b65203020746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "10272:25:10",
																		"nodeType": "YulLiteral",
																		"src": "10272:25:10",
																		"type": "",
																		"value": "Cannot unstake 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10249:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10249:6:10"
																},
																"nativeSrc": "10249:49:10",
																"nodeType": "YulFunctionCall",
																"src": "10249:49:10"
															},
															"nativeSrc": "10249:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "10249:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2",
												"nativeSrc": "10132:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10230:6:10",
														"nodeType": "YulTypedName",
														"src": "10230:6:10",
														"type": ""
													}
												],
												"src": "10132:173:10"
											},
											{
												"body": {
													"nativeSrc": "10457:220:10",
													"nodeType": "YulBlock",
													"src": "10457:220:10",
													"statements": [
														{
															"nativeSrc": "10467:74:10",
															"nodeType": "YulAssignment",
															"src": "10467:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10533:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10474:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10474:58:10"
																},
																"nativeSrc": "10474:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10474:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10467:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10639:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10639:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2",
																	"nativeSrc": "10550:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10550:88:10"
																},
																"nativeSrc": "10550:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10550:93:10"
															},
															"nativeSrc": "10550:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10550:93:10"
														},
														{
															"nativeSrc": "10652:19:10",
															"nodeType": "YulAssignment",
															"src": "10652:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10663:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10663:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10668:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10668:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10659:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10659:3:10"
																},
																"nativeSrc": "10659:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10659:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10652:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10311:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10445:3:10",
														"nodeType": "YulTypedName",
														"src": "10445:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10453:3:10",
														"nodeType": "YulTypedName",
														"src": "10453:3:10",
														"type": ""
													}
												],
												"src": "10311:366:10"
											},
											{
												"body": {
													"nativeSrc": "10854:248:10",
													"nodeType": "YulBlock",
													"src": "10854:248:10",
													"statements": [
														{
															"nativeSrc": "10864:26:10",
															"nodeType": "YulAssignment",
															"src": "10864:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10876:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10887:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:10"
																},
																"nativeSrc": "10872:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10872:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10864:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10911:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10922:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10922:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10907:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:10"
																		},
																		"nativeSrc": "10907:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10907:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10930:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10930:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10936:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10926:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:10"
																		},
																		"nativeSrc": "10926:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10900:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:10"
																},
																"nativeSrc": "10900:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10900:47:10"
															},
															"nativeSrc": "10900:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10900:47:10"
														},
														{
															"nativeSrc": "10956:139:10",
															"nodeType": "YulAssignment",
															"src": "10956:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11090:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11090:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10964:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10964:124:10"
																},
																"nativeSrc": "10964:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10964:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10956:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10683:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10834:9:10",
														"nodeType": "YulTypedName",
														"src": "10834:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10849:4:10",
														"nodeType": "YulTypedName",
														"src": "10849:4:10",
														"type": ""
													}
												],
												"src": "10683:419:10"
											},
											{
												"body": {
													"nativeSrc": "11214:70:10",
													"nodeType": "YulBlock",
													"src": "11214:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11236:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11236:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11244:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11244:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11232:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:10"
																		},
																		"nativeSrc": "11232:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11248:28:10",
																		"nodeType": "YulLiteral",
																		"src": "11248:28:10",
																		"type": "",
																		"value": "Insufficient staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11225:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11225:6:10"
																},
																"nativeSrc": "11225:52:10",
																"nodeType": "YulFunctionCall",
																"src": "11225:52:10"
															},
															"nativeSrc": "11225:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "11225:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
												"nativeSrc": "11108:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11206:6:10",
														"nodeType": "YulTypedName",
														"src": "11206:6:10",
														"type": ""
													}
												],
												"src": "11108:176:10"
											},
											{
												"body": {
													"nativeSrc": "11436:220:10",
													"nodeType": "YulBlock",
													"src": "11436:220:10",
													"statements": [
														{
															"nativeSrc": "11446:74:10",
															"nodeType": "YulAssignment",
															"src": "11446:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11512:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11512:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11517:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11517:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11453:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11453:58:10"
																},
																"nativeSrc": "11453:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11453:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11446:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11446:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11618:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11618:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																	"nativeSrc": "11529:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11529:88:10"
																},
																"nativeSrc": "11529:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11529:93:10"
															},
															"nativeSrc": "11529:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11529:93:10"
														},
														{
															"nativeSrc": "11631:19:10",
															"nodeType": "YulAssignment",
															"src": "11631:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11642:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11642:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11647:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11647:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11638:3:10"
																},
																"nativeSrc": "11638:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11638:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11631:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11290:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11424:3:10",
														"nodeType": "YulTypedName",
														"src": "11424:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11432:3:10",
														"nodeType": "YulTypedName",
														"src": "11432:3:10",
														"type": ""
													}
												],
												"src": "11290:366:10"
											},
											{
												"body": {
													"nativeSrc": "11833:248:10",
													"nodeType": "YulBlock",
													"src": "11833:248:10",
													"statements": [
														{
															"nativeSrc": "11843:26:10",
															"nodeType": "YulAssignment",
															"src": "11843:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11855:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11855:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11866:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11866:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11851:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11851:3:10"
																},
																"nativeSrc": "11851:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11851:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11843:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11843:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11890:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11890:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11901:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11901:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11886:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11886:3:10"
																		},
																		"nativeSrc": "11886:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11886:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11909:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11909:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11915:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11915:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11905:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11905:3:10"
																		},
																		"nativeSrc": "11905:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11905:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11879:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:10"
																},
																"nativeSrc": "11879:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11879:47:10"
															},
															"nativeSrc": "11879:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11879:47:10"
														},
														{
															"nativeSrc": "11935:139:10",
															"nodeType": "YulAssignment",
															"src": "11935:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12069:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12069:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11943:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11943:124:10"
																},
																"nativeSrc": "11943:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11943:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11935:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11935:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11662:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11813:9:10",
														"nodeType": "YulTypedName",
														"src": "11813:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11828:4:10",
														"nodeType": "YulTypedName",
														"src": "11828:4:10",
														"type": ""
													}
												],
												"src": "11662:419:10"
											},
											{
												"body": {
													"nativeSrc": "12115:152:10",
													"nodeType": "YulBlock",
													"src": "12115:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12132:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12132:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12135:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12135:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12125:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12125:6:10"
																},
																"nativeSrc": "12125:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12125:88:10"
															},
															"nativeSrc": "12125:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12125:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12229:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12229:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12232:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12232:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12222:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12222:6:10"
																},
																"nativeSrc": "12222:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12222:15:10"
															},
															"nativeSrc": "12222:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12222:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12253:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12253:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12256:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12256:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12246:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12246:6:10"
																},
																"nativeSrc": "12246:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12246:15:10"
															},
															"nativeSrc": "12246:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12246:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12087:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12087:180:10"
											},
											{
												"body": {
													"nativeSrc": "12318:149:10",
													"nodeType": "YulBlock",
													"src": "12318:149:10",
													"statements": [
														{
															"nativeSrc": "12328:25:10",
															"nodeType": "YulAssignment",
															"src": "12328:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12351:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12351:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12333:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12333:17:10"
																},
																"nativeSrc": "12333:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12333:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12328:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12328:1:10"
																}
															]
														},
														{
															"nativeSrc": "12362:25:10",
															"nodeType": "YulAssignment",
															"src": "12362:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12385:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12385:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12367:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12367:17:10"
																},
																"nativeSrc": "12367:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12367:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12362:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12362:1:10"
																}
															]
														},
														{
															"nativeSrc": "12396:17:10",
															"nodeType": "YulAssignment",
															"src": "12396:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12408:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12408:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12411:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12411:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12404:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12404:3:10"
																},
																"nativeSrc": "12404:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12404:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12396:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12396:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12438:22:10",
																"nodeType": "YulBlock",
																"src": "12438:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12440:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12440:16:10"
																			},
																			"nativeSrc": "12440:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12440:18:10"
																		},
																		"nativeSrc": "12440:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12440:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12429:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12429:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12435:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12435:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12426:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12426:2:10"
																},
																"nativeSrc": "12426:11:10",
																"nodeType": "YulFunctionCall",
																"src": "12426:11:10"
															},
															"nativeSrc": "12423:37:10",
															"nodeType": "YulIf",
															"src": "12423:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12273:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12304:1:10",
														"nodeType": "YulTypedName",
														"src": "12304:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12307:1:10",
														"nodeType": "YulTypedName",
														"src": "12307:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12313:4:10",
														"nodeType": "YulTypedName",
														"src": "12313:4:10",
														"type": ""
													}
												],
												"src": "12273:194:10"
											},
											{
												"body": {
													"nativeSrc": "12501:152:10",
													"nodeType": "YulBlock",
													"src": "12501:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12518:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12518:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12521:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12521:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12511:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12511:6:10"
																},
																"nativeSrc": "12511:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12511:88:10"
															},
															"nativeSrc": "12511:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12511:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12615:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12615:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12618:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12618:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12608:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12608:6:10"
																},
																"nativeSrc": "12608:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12608:15:10"
															},
															"nativeSrc": "12608:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12608:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12639:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12639:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12642:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12642:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12632:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12632:6:10"
																},
																"nativeSrc": "12632:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12632:15:10"
															},
															"nativeSrc": "12632:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12632:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "12473:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12473:180:10"
											},
											{
												"body": {
													"nativeSrc": "12765:115:10",
													"nodeType": "YulBlock",
													"src": "12765:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12787:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12787:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12795:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12795:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12783:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12783:3:10"
																		},
																		"nativeSrc": "12783:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12783:14:10"
																	},
																	{
																		"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "12799:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12799:34:10",
																		"type": "",
																		"value": "Reward rate must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12776:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12776:6:10"
																},
																"nativeSrc": "12776:58:10",
																"nodeType": "YulFunctionCall",
																"src": "12776:58:10"
															},
															"nativeSrc": "12776:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "12776:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12855:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12855:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12863:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12863:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12851:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12851:3:10"
																		},
																		"nativeSrc": "12851:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12851:15:10"
																	},
																	{
																		"hexValue": "2030",
																		"kind": "string",
																		"nativeSrc": "12868:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12868:4:10",
																		"type": "",
																		"value": " 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12844:6:10"
																},
																"nativeSrc": "12844:29:10",
																"nodeType": "YulFunctionCall",
																"src": "12844:29:10"
															},
															"nativeSrc": "12844:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "12844:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
												"nativeSrc": "12659:221:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12757:6:10",
														"nodeType": "YulTypedName",
														"src": "12757:6:10",
														"type": ""
													}
												],
												"src": "12659:221:10"
											},
											{
												"body": {
													"nativeSrc": "13032:220:10",
													"nodeType": "YulBlock",
													"src": "13032:220:10",
													"statements": [
														{
															"nativeSrc": "13042:74:10",
															"nodeType": "YulAssignment",
															"src": "13042:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13108:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13108:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13113:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13049:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13049:58:10"
																},
																"nativeSrc": "13049:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13049:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13042:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13214:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13214:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																	"nativeSrc": "13125:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13125:88:10"
																},
																"nativeSrc": "13125:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13125:93:10"
															},
															"nativeSrc": "13125:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13125:93:10"
														},
														{
															"nativeSrc": "13227:19:10",
															"nodeType": "YulAssignment",
															"src": "13227:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13238:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13238:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13243:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13243:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13234:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13234:3:10"
																},
																"nativeSrc": "13234:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13234:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13227:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12886:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13020:3:10",
														"nodeType": "YulTypedName",
														"src": "13020:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13028:3:10",
														"nodeType": "YulTypedName",
														"src": "13028:3:10",
														"type": ""
													}
												],
												"src": "12886:366:10"
											},
											{
												"body": {
													"nativeSrc": "13429:248:10",
													"nodeType": "YulBlock",
													"src": "13429:248:10",
													"statements": [
														{
															"nativeSrc": "13439:26:10",
															"nodeType": "YulAssignment",
															"src": "13439:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13451:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13451:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13462:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13462:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13447:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13447:3:10"
																},
																"nativeSrc": "13447:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13447:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13439:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13439:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13486:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13486:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13497:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13497:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13482:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13482:3:10"
																		},
																		"nativeSrc": "13482:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13482:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13505:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13505:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13511:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13511:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:10"
																		},
																		"nativeSrc": "13501:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13501:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13475:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13475:6:10"
																},
																"nativeSrc": "13475:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13475:47:10"
															},
															"nativeSrc": "13475:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13475:47:10"
														},
														{
															"nativeSrc": "13531:139:10",
															"nodeType": "YulAssignment",
															"src": "13531:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13665:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13665:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13539:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13539:124:10"
																},
																"nativeSrc": "13539:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13539:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13531:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13531:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13258:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13409:9:10",
														"nodeType": "YulTypedName",
														"src": "13409:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13424:4:10",
														"nodeType": "YulTypedName",
														"src": "13424:4:10",
														"type": ""
													}
												],
												"src": "13258:419:10"
											},
											{
												"body": {
													"nativeSrc": "13789:65:10",
													"nodeType": "YulBlock",
													"src": "13789:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13811:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13811:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13819:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13819:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13807:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13807:3:10"
																		},
																		"nativeSrc": "13807:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13807:14:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "13823:23:10",
																		"nodeType": "YulLiteral",
																		"src": "13823:23:10",
																		"type": "",
																		"value": "Cannot stake 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13800:6:10"
																},
																"nativeSrc": "13800:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13800:47:10"
															},
															"nativeSrc": "13800:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13800:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
												"nativeSrc": "13683:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13781:6:10",
														"nodeType": "YulTypedName",
														"src": "13781:6:10",
														"type": ""
													}
												],
												"src": "13683:171:10"
											},
											{
												"body": {
													"nativeSrc": "14006:220:10",
													"nodeType": "YulBlock",
													"src": "14006:220:10",
													"statements": [
														{
															"nativeSrc": "14016:74:10",
															"nodeType": "YulAssignment",
															"src": "14016:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14082:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14082:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14087:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14087:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14023:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14023:58:10"
																},
																"nativeSrc": "14023:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14023:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14016:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14016:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14188:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14188:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																	"nativeSrc": "14099:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14099:88:10"
																},
																"nativeSrc": "14099:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14099:93:10"
															},
															"nativeSrc": "14099:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14099:93:10"
														},
														{
															"nativeSrc": "14201:19:10",
															"nodeType": "YulAssignment",
															"src": "14201:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14212:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14212:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14217:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14217:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14208:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14208:3:10"
																},
																"nativeSrc": "14208:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14208:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14201:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14201:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13860:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13994:3:10",
														"nodeType": "YulTypedName",
														"src": "13994:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14002:3:10",
														"nodeType": "YulTypedName",
														"src": "14002:3:10",
														"type": ""
													}
												],
												"src": "13860:366:10"
											},
											{
												"body": {
													"nativeSrc": "14403:248:10",
													"nodeType": "YulBlock",
													"src": "14403:248:10",
													"statements": [
														{
															"nativeSrc": "14413:26:10",
															"nodeType": "YulAssignment",
															"src": "14413:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14425:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14425:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14436:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14436:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14421:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14421:3:10"
																},
																"nativeSrc": "14421:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14421:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14413:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14413:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14460:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14471:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14471:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14456:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14456:3:10"
																		},
																		"nativeSrc": "14456:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14456:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14479:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14479:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14485:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14485:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14475:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14475:3:10"
																		},
																		"nativeSrc": "14475:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14475:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14449:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14449:6:10"
																},
																"nativeSrc": "14449:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14449:47:10"
															},
															"nativeSrc": "14449:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14449:47:10"
														},
														{
															"nativeSrc": "14505:139:10",
															"nodeType": "YulAssignment",
															"src": "14505:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14639:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14639:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14513:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14513:124:10"
																},
																"nativeSrc": "14513:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14513:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14505:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14505:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14232:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14383:9:10",
														"nodeType": "YulTypedName",
														"src": "14383:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14398:4:10",
														"nodeType": "YulTypedName",
														"src": "14398:4:10",
														"type": ""
													}
												],
												"src": "14232:419:10"
											},
											{
												"body": {
													"nativeSrc": "14763:75:10",
													"nodeType": "YulBlock",
													"src": "14763:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14785:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14785:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14793:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14793:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14781:3:10"
																		},
																		"nativeSrc": "14781:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14781:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14797:33:10",
																		"nodeType": "YulLiteral",
																		"src": "14797:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14774:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14774:6:10"
																},
																"nativeSrc": "14774:57:10",
																"nodeType": "YulFunctionCall",
																"src": "14774:57:10"
															},
															"nativeSrc": "14774:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "14774:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "14657:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14755:6:10",
														"nodeType": "YulTypedName",
														"src": "14755:6:10",
														"type": ""
													}
												],
												"src": "14657:181:10"
											},
											{
												"body": {
													"nativeSrc": "14990:220:10",
													"nodeType": "YulBlock",
													"src": "14990:220:10",
													"statements": [
														{
															"nativeSrc": "15000:74:10",
															"nodeType": "YulAssignment",
															"src": "15000:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15066:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15066:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15071:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15071:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15007:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15007:58:10"
																},
																"nativeSrc": "15007:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15007:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15000:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15000:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15172:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "15083:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15083:88:10"
																},
																"nativeSrc": "15083:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15083:93:10"
															},
															"nativeSrc": "15083:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15083:93:10"
														},
														{
															"nativeSrc": "15185:19:10",
															"nodeType": "YulAssignment",
															"src": "15185:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15196:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15196:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15192:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15192:3:10"
																},
																"nativeSrc": "15192:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15192:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15185:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14844:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14978:3:10",
														"nodeType": "YulTypedName",
														"src": "14978:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14986:3:10",
														"nodeType": "YulTypedName",
														"src": "14986:3:10",
														"type": ""
													}
												],
												"src": "14844:366:10"
											},
											{
												"body": {
													"nativeSrc": "15387:248:10",
													"nodeType": "YulBlock",
													"src": "15387:248:10",
													"statements": [
														{
															"nativeSrc": "15397:26:10",
															"nodeType": "YulAssignment",
															"src": "15397:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15409:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15409:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15420:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15420:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15405:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15405:3:10"
																},
																"nativeSrc": "15405:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15405:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15397:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15397:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15444:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15444:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15455:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15455:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15440:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15440:3:10"
																		},
																		"nativeSrc": "15440:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15440:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15463:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15463:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15469:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15469:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15459:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15459:3:10"
																		},
																		"nativeSrc": "15459:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15459:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15433:6:10"
																},
																"nativeSrc": "15433:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15433:47:10"
															},
															"nativeSrc": "15433:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15433:47:10"
														},
														{
															"nativeSrc": "15489:139:10",
															"nodeType": "YulAssignment",
															"src": "15489:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15623:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15623:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15497:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15497:124:10"
																},
																"nativeSrc": "15497:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15497:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15489:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15489:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15216:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15367:9:10",
														"nodeType": "YulTypedName",
														"src": "15367:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15382:4:10",
														"nodeType": "YulTypedName",
														"src": "15382:4:10",
														"type": ""
													}
												],
												"src": "15216:419:10"
											},
											{
												"body": {
													"nativeSrc": "15685:147:10",
													"nodeType": "YulBlock",
													"src": "15685:147:10",
													"statements": [
														{
															"nativeSrc": "15695:25:10",
															"nodeType": "YulAssignment",
															"src": "15695:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15718:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15718:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15700:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15700:17:10"
																},
																"nativeSrc": "15700:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15700:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15695:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15695:1:10"
																}
															]
														},
														{
															"nativeSrc": "15729:25:10",
															"nodeType": "YulAssignment",
															"src": "15729:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15752:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15752:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15734:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15734:17:10"
																},
																"nativeSrc": "15734:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15734:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15729:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15729:1:10"
																}
															]
														},
														{
															"nativeSrc": "15763:16:10",
															"nodeType": "YulAssignment",
															"src": "15763:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15774:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15777:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15777:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15770:3:10"
																},
																"nativeSrc": "15770:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15770:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15763:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15803:22:10",
																"nodeType": "YulBlock",
																"src": "15803:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15805:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15805:16:10"
																			},
																			"nativeSrc": "15805:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15805:18:10"
																		},
																		"nativeSrc": "15805:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15805:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15795:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15795:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15798:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15798:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15792:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15792:2:10"
																},
																"nativeSrc": "15792:10:10",
																"nodeType": "YulFunctionCall",
																"src": "15792:10:10"
															},
															"nativeSrc": "15789:36:10",
															"nodeType": "YulIf",
															"src": "15789:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15641:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15672:1:10",
														"nodeType": "YulTypedName",
														"src": "15672:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15675:1:10",
														"nodeType": "YulTypedName",
														"src": "15675:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15681:3:10",
														"nodeType": "YulTypedName",
														"src": "15681:3:10",
														"type": ""
													}
												],
												"src": "15641:191:10"
											},
											{
												"body": {
													"nativeSrc": "15992:288:10",
													"nodeType": "YulBlock",
													"src": "15992:288:10",
													"statements": [
														{
															"nativeSrc": "16002:26:10",
															"nodeType": "YulAssignment",
															"src": "16002:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16014:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16014:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16025:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16025:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16010:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16010:3:10"
																},
																"nativeSrc": "16010:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16010:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16002:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16002:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16082:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16082:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16095:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16095:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16106:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16106:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16091:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16091:3:10"
																		},
																		"nativeSrc": "16091:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16091:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16038:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "16038:43:10"
																},
																"nativeSrc": "16038:71:10",
																"nodeType": "YulFunctionCall",
																"src": "16038:71:10"
															},
															"nativeSrc": "16038:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "16038:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16163:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16163:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16176:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16176:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16187:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16187:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16172:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16172:3:10"
																		},
																		"nativeSrc": "16172:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16172:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16119:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "16119:43:10"
																},
																"nativeSrc": "16119:72:10",
																"nodeType": "YulFunctionCall",
																"src": "16119:72:10"
															},
															"nativeSrc": "16119:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "16119:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16245:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16245:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16269:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16269:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:10"
																		},
																		"nativeSrc": "16254:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16254:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16201:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "16201:43:10"
																},
																"nativeSrc": "16201:72:10",
																"nodeType": "YulFunctionCall",
																"src": "16201:72:10"
															},
															"nativeSrc": "16201:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "16201:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15838:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15948:9:10",
														"nodeType": "YulTypedName",
														"src": "15948:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15960:6:10",
														"nodeType": "YulTypedName",
														"src": "15960:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15968:6:10",
														"nodeType": "YulTypedName",
														"src": "15968:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15976:6:10",
														"nodeType": "YulTypedName",
														"src": "15976:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15987:4:10",
														"nodeType": "YulTypedName",
														"src": "15987:4:10",
														"type": ""
													}
												],
												"src": "15838:442:10"
											},
											{
												"body": {
													"nativeSrc": "16329:190:10",
													"nodeType": "YulBlock",
													"src": "16329:190:10",
													"statements": [
														{
															"nativeSrc": "16339:33:10",
															"nodeType": "YulAssignment",
															"src": "16339:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16366:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16366:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16348:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16348:17:10"
																},
																"nativeSrc": "16348:24:10",
																"nodeType": "YulFunctionCall",
																"src": "16348:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16339:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "16339:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16462:22:10",
																"nodeType": "YulBlock",
																"src": "16462:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16464:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16464:16:10"
																			},
																			"nativeSrc": "16464:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16464:18:10"
																		},
																		"nativeSrc": "16464:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16464:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16387:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16387:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16394:66:10",
																		"nodeType": "YulLiteral",
																		"src": "16394:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16384:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "16384:2:10"
																},
																"nativeSrc": "16384:77:10",
																"nodeType": "YulFunctionCall",
																"src": "16384:77:10"
															},
															"nativeSrc": "16381:103:10",
															"nodeType": "YulIf",
															"src": "16381:103:10"
														},
														{
															"nativeSrc": "16493:20:10",
															"nodeType": "YulAssignment",
															"src": "16493:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16504:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16504:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16511:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16511:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16500:3:10"
																},
																"nativeSrc": "16500:13:10",
																"nodeType": "YulFunctionCall",
																"src": "16500:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16493:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16493:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "16286:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16315:5:10",
														"nodeType": "YulTypedName",
														"src": "16315:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16325:3:10",
														"nodeType": "YulTypedName",
														"src": "16325:3:10",
														"type": ""
													}
												],
												"src": "16286:233:10"
											},
											{
												"body": {
													"nativeSrc": "16553:152:10",
													"nodeType": "YulBlock",
													"src": "16553:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16570:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16570:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16573:77:10",
																		"nodeType": "YulLiteral",
																		"src": "16573:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16563:6:10"
																},
																"nativeSrc": "16563:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16563:88:10"
															},
															"nativeSrc": "16563:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "16563:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16667:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16667:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16670:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16670:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16660:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16660:6:10"
																},
																"nativeSrc": "16660:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16660:15:10"
															},
															"nativeSrc": "16660:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16660:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16691:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16691:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16694:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16694:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16684:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16684:6:10"
																},
																"nativeSrc": "16684:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16684:15:10"
															},
															"nativeSrc": "16684:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16684:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "16525:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "16525:180:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to release\")\n\n    }\n\n    function abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot unstake 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward rate must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101f9575f3560e01c806370a08231116101185780639ef3a261116100ab578063d82e39621161007a578063d82e39621461056d578063dd62ed3e1461059d578063e75c4927146105cd578063f2fde38b146105eb578063f6f0fa8d14610607576101f9565b80639ef3a261146104fb578063a694fc3a14610517578063a9059cbb14610533578063cb3dbecb14610563576101f9565b80638da5cb5b116100e75780638da5cb5b14610483578063902d55a5146104a157806395d89b41146104bf5780639d2cc436146104dd576101f9565b806370a082311461040f578063715018a61461043f57806379cc6790146104495780637b0a47ee14610465576101f9565b8063254800d41161019057806339cf9b001161015f57806339cf9b001461039957806342966c68146103b75780634cfc4d30146103d35780635f89584e146103f1576101f9565b8063254800d414610311578063294f5fa31461032f5780632e17de781461035f578063313ce5671461037b576101f9565b806316934fc4116101cc57806316934fc41461027357806318160ddd146102a55780631cfe31c2146102c357806323b872dd146102e1576101f9565b806306fdde03146101fd578063095ea7b31461021b57806314c411c71461024b5780631571ccf614610255575b5f5ffd5b610205610625565b6040516102129190611fcc565b60405180910390f35b6102356004803603810190610230919061207d565b6106b5565b60405161024291906120d5565b60405180910390f35b6102536106d7565b005b61025d610827565b60405161026a91906120fd565b60405180910390f35b61028d60048036038101906102889190612116565b61084e565b60405161029c93929190612141565b60405180910390f35b6102ad610874565b6040516102ba91906120fd565b60405180910390f35b6102cb61087d565b6040516102d891906120fd565b60405180910390f35b6102fb60048036038101906102f69190612176565b6108a4565b60405161030891906120d5565b60405180910390f35b6103196108d2565b60405161032691906120fd565b60405180910390f35b610349600480360381019061034491906121c6565b6108d8565b6040516103569190612200565b60405180910390f35b610379600480360381019061037491906121c6565b610913565b005b610383610d51565b6040516103909190612234565b60405180910390f35b6103a1610d59565b6040516103ae91906120fd565b60405180910390f35b6103d160048036038101906103cc91906121c6565b610d80565b005b6103db610d94565b6040516103e891906120fd565b60405180910390f35b6103f9610d9c565b60405161040691906120fd565b60405180910390f35b61042960048036038101906104249190612116565b610dc3565b60405161043691906120fd565b60405180910390f35b610447610e08565b005b610463600480360381019061045e919061207d565b610e1b565b005b61046d610e3b565b60405161047a91906120fd565b60405180910390f35b61048b610e41565b6040516104989190612200565b60405180910390f35b6104a9610e69565b6040516104b691906120fd565b60405180910390f35b6104c7610e78565b6040516104d49190611fcc565b60405180910390f35b6104e5610f08565b6040516104f291906120fd565b60405180910390f35b610515600480360381019061051091906121c6565b610f2f565b005b610531600480360381019061052c91906121c6565b610f83565b005b61054d6004803603810190610548919061207d565b611122565b60405161055a91906120d5565b60405180910390f35b61056b611144565b005b61058760048036038101906105829190612116565b6112e8565b60405161059491906120fd565b60405180910390f35b6105b760048036038101906105b2919061224d565b6113e5565b6040516105c491906120fd565b60405180910390f35b6105d5611467565b6040516105e291906120fd565b60405180910390f35b61060560048036038101906106009190612116565b61148e565b005b61060f611512565b60405161061c91906120fd565b60405180910390f35b606060038054610634906122b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610660906122b8565b80156106ab5780601f10610682576101008083540402835291602001916106ab565b820191905f5260205f20905b81548152906001019060200180831161068e57829003601f168201915b5050505050905090565b5f5f6106bf611518565b90506106cc81858561151f565b600191505092915050565b6106df611531565b6106e7611580565b60075442101561072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390612332565b60405180910390fd5b5f6107426007544261160790919063ffffffff16565b90505f6107916301e1338061078384606460146a52b7d2dcc80cd2e400000061076b919061237d565b61077591906123eb565b61161c90919063ffffffff16565b61163190919063ffffffff16565b90505f6107a96008548361160790919063ffffffff16565b90505f81116107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e490612465565b60405180910390fd5b6108028160085461164690919063ffffffff16565b60088190555061081a30610814610e41565b8361165b565b50505061082561174b565b565b606460146a52b7d2dcc80cd2e4000000610841919061237d565b61084b91906123eb565b81565b6009602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f600254905090565b606460056a52b7d2dcc80cd2e4000000610897919061237d565b6108a191906123eb565b81565b5f5f6108ae611518565b90506108bb858285611755565b6108c685858561165b565b60019150509392505050565b60075481565b600a81815481106108e7575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61091b611531565b5f811161095d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610954906124cd565b60405180910390fd5b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015410156109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690612535565b60405180910390fd5b5f6109e9336112e8565b90505f6109ff828461164690919063ffffffff16565b9050610a538360095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015461160790919063ffffffff16565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550610b2b30338361165b565b5f5f90505b600a80549050811015610ca7573373ffffffffffffffffffffffffffffffffffffffff16600a8281548110610b6857610b67612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c9a57600a6001600a80549050610bbf9190612580565b81548110610bd057610bcf612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a8281548110610c0c57610c0b612553565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a805480610c6357610c626125b3565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610ca7565b8080600101915050610b30565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7584604051610cee91906120fd565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ff9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea353083604051610d3c91906120fd565b60405180910390a25050610d4e61174b565b50565b5f6012905090565b6064600f6a52b7d2dcc80cd2e4000000610d73919061237d565b610d7d91906123eb565b81565b610d91610d8b611518565b826117e8565b50565b6301e1338081565b606460286a52b7d2dcc80cd2e4000000610db6919061237d565b610dc091906123eb565b81565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610e10611580565b610e195f611867565b565b610e2d82610e27611518565b83611755565b610e3782826117e8565b5050565b600b5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a52b7d2dcc80cd2e400000081565b606060048054610e87906122b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb3906122b8565b8015610efe5780601f10610ed557610100808354040283529160200191610efe565b820191905f5260205f20905b815481529060010190602001808311610ee157829003601f168201915b5050505050905090565b6064600a6a52b7d2dcc80cd2e4000000610f22919061237d565b610f2c91906123eb565b81565b610f37611580565b5f8111610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7090612650565b60405180910390fd5b80600b8190555050565b610f8b611531565b5f8111610fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc4906126b8565b60405180910390fd5b610fd833308361165b565b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050600a33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f611082336112e8565b90505f8111156110e65761109730338361165b565b3373ffffffffffffffffffffffffffffffffffffffff167ff9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea3530826040516110dd91906120fd565b60405180910390a25b6110fc83835f015461164690919063ffffffff16565b825f0181905550428260010181905550428260020181905550505061111f61174b565b50565b5f5f61112c611518565b905061113981858561165b565b600191505092915050565b61114c611580565b5f61115561192a565b90505f5f90505f5f90505b82518110156112ac575f60095f8584815181106111805761117f612553565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f6111e78584815181106111da576111d9612553565b5b60200260200101516112e8565b90505f81111561129d576112163086858151811061120857611207612553565b5b60200260200101518361165b565b428260020181905550611232818561164690919063ffffffff16565b935084838151811061124757611246612553565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167ff9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea35308260405161129491906120fd565b60405180910390a25b50508080600101915050611160565b507f6a51b76326892cba00f44f8bc83414a1c2e4715f4bc1ebcac12326172ed53f18816040516112dc91906120fd565b60405180910390a15050565b5f5f60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f015103611364575f9150506113e0565b5f620151808260400151426113799190612580565b61138391906123eb565b90505f6113b160646113a3600b54865f015161161c90919063ffffffff16565b61163190919063ffffffff16565b90506113da61016d6113cc848461161c90919063ffffffff16565b61163190919063ffffffff16565b93505050505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6064600a6a52b7d2dcc80cd2e4000000611481919061237d565b61148b91906123eb565b81565b611496611580565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611506575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114fd9190612200565b60405180910390fd5b61150f81611867565b50565b60085481565b5f33905090565b61152c8383836001611b74565b505050565b600260065403611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156d90612720565b60405180910390fd5b6002600681905550565b611588611518565b73ffffffffffffffffffffffffffffffffffffffff166115a6610e41565b73ffffffffffffffffffffffffffffffffffffffff1614611605576115c9611518565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115fc9190612200565b60405180910390fd5b565b5f81836116149190612580565b905092915050565b5f8183611629919061237d565b905092915050565b5f818361163e91906123eb565b905092915050565b5f8183611653919061273e565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116c29190612200565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361173b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117329190612200565b60405180910390fd5b611746838383611d43565b505050565b6001600681905550565b5f61176084846113e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156117e257818110156117d3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016117ca93929190612771565b60405180910390fd5b6117e184848484035f611b74565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611858575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161184f9190612200565b60405180910390fd5b611863825f83611d43565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60605f5f90505f5f90505b600a805490508110156119e0575f60095f600a848154811061195a57611959612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411156119d35781806119cf906127a6565b9250505b8080600101915050611935565b505f8167ffffffffffffffff8111156119fc576119fb6127ed565b5b604051908082528060200260200182016040528015611a2a5781602001602082028036833780820191505090505b5090505f5f90505f5f90505b600a80549050811015611b6a575f60095f600a8481548110611a5b57611a5a612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115611b5d57600a8181548110611ad957611ad8612553565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110611b1457611b13612553565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508180611b59906127a6565b9250505b8080600101915050611a36565b5081935050505090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611be4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611bdb9190612200565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c54575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c4b9190612200565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d3d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d3491906120fd565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d93578060025f828254611d87919061273e565b92505081905550611e61565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e1c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e1393929190612771565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ea8578060025f8282540392505081905550611ef2565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f4f91906120fd565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f9e82611f5c565b611fa88185611f66565b9350611fb8818560208601611f76565b611fc181611f84565b840191505092915050565b5f6020820190508181035f830152611fe48184611f94565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61201982611ff0565b9050919050565b6120298161200f565b8114612033575f5ffd5b50565b5f8135905061204481612020565b92915050565b5f819050919050565b61205c8161204a565b8114612066575f5ffd5b50565b5f8135905061207781612053565b92915050565b5f5f6040838503121561209357612092611fec565b5b5f6120a085828601612036565b92505060206120b185828601612069565b9150509250929050565b5f8115159050919050565b6120cf816120bb565b82525050565b5f6020820190506120e85f8301846120c6565b92915050565b6120f78161204a565b82525050565b5f6020820190506121105f8301846120ee565b92915050565b5f6020828403121561212b5761212a611fec565b5b5f61213884828501612036565b91505092915050565b5f6060820190506121545f8301866120ee565b61216160208301856120ee565b61216e60408301846120ee565b949350505050565b5f5f5f6060848603121561218d5761218c611fec565b5b5f61219a86828701612036565b93505060206121ab86828701612036565b92505060406121bc86828701612069565b9150509250925092565b5f602082840312156121db576121da611fec565b5b5f6121e884828501612069565b91505092915050565b6121fa8161200f565b82525050565b5f6020820190506122135f8301846121f1565b92915050565b5f60ff82169050919050565b61222e81612219565b82525050565b5f6020820190506122475f830184612225565b92915050565b5f5f6040838503121561226357612262611fec565b5b5f61227085828601612036565b925050602061228185828601612036565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122cf57607f821691505b6020821081036122e2576122e161228b565b5b50919050565b7f56657374696e67206e6f742073746172746564000000000000000000000000005f82015250565b5f61231c601383611f66565b9150612327826122e8565b602082019050919050565b5f6020820190508181035f83015261234981612310565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123878261204a565b91506123928361204a565b92508282026123a08161204a565b915082820484148315176123b7576123b6612350565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6123f58261204a565b91506124008361204a565b9250826124105761240f6123be565b5b828204905092915050565b7f4e6f20746f6b656e7320746f2072656c656173650000000000000000000000005f82015250565b5f61244f601483611f66565b915061245a8261241b565b602082019050919050565b5f6020820190508181035f83015261247c81612443565b9050919050565b7f43616e6e6f7420756e7374616b65203020746f6b656e730000000000000000005f82015250565b5f6124b7601783611f66565b91506124c282612483565b602082019050919050565b5f6020820190508181035f8301526124e4816124ab565b9050919050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f61251f601a83611f66565b915061252a826124eb565b602082019050919050565b5f6020820190508181035f83015261254c81612513565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61258a8261204a565b91506125958361204a565b92508282039050818111156125ad576125ac612350565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f5265776172642072617465206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f61263a602283611f66565b9150612645826125e0565b604082019050919050565b5f6020820190508181035f8301526126678161262e565b9050919050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f6126a2601583611f66565b91506126ad8261266e565b602082019050919050565b5f6020820190508181035f8301526126cf81612696565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61270a601f83611f66565b9150612715826126d6565b602082019050919050565b5f6020820190508181035f830152612737816126fe565b9050919050565b5f6127488261204a565b91506127538361204a565b925082820190508082111561276b5761276a612350565b5b92915050565b5f6060820190506127845f8301866121f1565b61279160208301856120ee565b61279e60408301846120ee565b949350505050565b5f6127b08261204a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127e2576127e1612350565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea2646970667358221220dea26fd50e88693e5ab7240d40137b89cd9ab888a65ddc6d86484334e0b6c34e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x9EF3A261 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD82E3962 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xE75C4927 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xF6F0FA8D EQ PUSH2 0x607 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCB3DBECB EQ PUSH2 0x563 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x9D2CC436 EQ PUSH2 0x4DD JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x465 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x254800D4 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x39CF9B00 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x39CF9B00 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x4CFC4D30 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5F89584E EQ PUSH2 0x3F1 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x254800D4 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x294F5FA3 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37B JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x1CFE31C2 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E1 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x14C411C7 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x1571CCF6 EQ PUSH2 0x255 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x205 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH2 0xE08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48B PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C7 PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56B PUSH2 0x1144 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x224D JUMP JUMPDEST PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D5 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x634 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x660 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x682 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6BF PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CC DUP2 DUP6 DUP6 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x742 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x1607 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x791 PUSH4 0x1E13380 PUSH2 0x783 DUP5 PUSH1 0x64 PUSH1 0x14 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0x161C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7A9 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1607 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x802 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x81A ADDRESS PUSH2 0x814 PUSH2 0xE41 JUMP JUMPDEST DUP4 PUSH2 0x165B JUMP JUMPDEST POP POP POP PUSH2 0x825 PUSH2 0x174B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x64 PUSH1 0x14 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x5 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8AE PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BB DUP6 DUP3 DUP6 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x8C6 DUP6 DUP6 DUP6 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x91B PUSH2 0x1531 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9E9 CALLER PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9FF DUP3 DUP5 PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA53 DUP4 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x1607 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB2B ADDRESS CALLER DUP4 PUSH2 0x165B JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCA7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9A JUMPI PUSH1 0xA PUSH1 0x1 PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0x25B3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xCA7 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB30 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xD4E PUSH2 0x174B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0xF PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0xD91 PUSH2 0xD8B PUSH2 0x1518 JUMP JUMPDEST DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x28 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xE19 PUSH0 PUSH2 0x1867 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE2D DUP3 PUSH2 0xE27 PUSH2 0x1518 JUMP JUMPDEST DUP4 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0xE37 DUP3 DUP3 PUSH2 0x17E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE87 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEB3 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0xA PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0xF37 PUSH2 0x1580 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP1 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0x1531 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 CALLER ADDRESS DUP4 PUSH2 0x165B JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0xA CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1082 CALLER PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x1097 ADDRESS CALLER DUP4 PUSH2 0x165B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x10FC DUP4 DUP4 PUSH0 ADD SLOAD PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x111F PUSH2 0x174B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x112C PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x1139 DUP2 DUP6 DUP6 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114C PUSH2 0x1580 JUMP JUMPDEST PUSH0 PUSH2 0x1155 PUSH2 0x192A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12AC JUMPI PUSH0 PUSH1 0x9 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1180 JUMPI PUSH2 0x117F PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH2 0x11E7 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x129D JUMPI PUSH2 0x1216 ADDRESS DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1208 JUMPI PUSH2 0x1207 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x165B JUMP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1232 DUP2 DUP6 PUSH2 0x1646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1247 JUMPI PUSH2 0x1246 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1160 JUMP JUMPDEST POP PUSH32 0x6A51B76326892CBA00F44F8BC83414A1C2E4715F4BC1EBCAC12326172ED53F18 DUP2 PUSH1 0x40 MLOAD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SUB PUSH2 0x1364 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x13E0 JUMP JUMPDEST PUSH0 PUSH3 0x15180 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x13B1 PUSH1 0x64 PUSH2 0x13A3 PUSH1 0xB SLOAD DUP7 PUSH0 ADD MLOAD PUSH2 0x161C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13DA PUSH2 0x16D PUSH2 0x13CC DUP5 DUP5 PUSH2 0x161C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0xA PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x148B SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x1496 PUSH2 0x1580 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1506 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FD SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150F DUP2 PUSH2 0x1867 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x152C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156D SWAP1 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1588 PUSH2 0x1518 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 PUSH2 0xE41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1605 JUMPI PUSH2 0x15C9 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x163E SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1653 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16CB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C2 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1732 SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1746 DUP4 DUP4 DUP4 PUSH2 0x1D43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1760 DUP5 DUP5 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x17E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17D3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1858 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1863 DUP3 PUSH0 DUP4 PUSH2 0x1D43 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x19E0 JUMPI PUSH0 PUSH1 0x9 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x19D3 JUMPI DUP2 DUP1 PUSH2 0x19CF SWAP1 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1935 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x27ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A2A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1B6A JUMPI PUSH0 PUSH1 0x9 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A5B JUMPI PUSH2 0x1A5A PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1B5D JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AD9 JUMPI PUSH2 0x1AD8 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1B59 SWAP1 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A36 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDB SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D3D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D34 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D93 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D87 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E61 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E1C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E13 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EA8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EF2 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F4F SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9E DUP3 PUSH2 0x1F5C JUMP JUMPDEST PUSH2 0x1FA8 DUP2 DUP6 PUSH2 0x1F66 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x1FC1 DUP2 PUSH2 0x1F84 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE4 DUP2 DUP5 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2029 DUP2 PUSH2 0x200F JUMP JUMPDEST DUP2 EQ PUSH2 0x2033 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2044 DUP2 PUSH2 0x2020 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x204A JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2077 DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A0 DUP6 DUP3 DUP7 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CF DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F7 DUP2 PUSH2 0x204A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2110 PUSH0 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212B JUMPI PUSH2 0x212A PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2138 DUP5 DUP3 DUP6 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2154 PUSH0 DUP4 ADD DUP7 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2161 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x216E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x218D JUMPI PUSH2 0x218C PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219A DUP7 DUP3 DUP8 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21AB DUP7 DUP3 DUP8 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21BC DUP7 DUP3 DUP8 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DB JUMPI PUSH2 0x21DA PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E8 DUP5 DUP3 DUP6 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21FA DUP2 PUSH2 0x200F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2213 PUSH0 DUP4 ADD DUP5 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x222E DUP2 PUSH2 0x2219 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2247 PUSH0 DUP4 ADD DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2263 JUMPI PUSH2 0x2262 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2270 DUP6 DUP3 DUP7 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2281 DUP6 DUP3 DUP7 ADD PUSH2 0x2036 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x228B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67206E6F74207374617274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x231C PUSH1 0x13 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2327 DUP3 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2349 DUP2 PUSH2 0x2310 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2387 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2392 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x23A0 DUP2 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x23B7 JUMPI PUSH2 0x23B6 PUSH2 0x2350 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23F5 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2400 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2410 JUMPI PUSH2 0x240F PUSH2 0x23BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x244F PUSH1 0x14 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x245A DUP3 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x247C DUP2 PUSH2 0x2443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420756E7374616B65203020746F6B656E73000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24B7 PUSH1 0x17 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C2 DUP3 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E4 DUP2 PUSH2 0x24AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x251F PUSH1 0x1A DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x252A DUP3 PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x254C DUP2 PUSH2 0x2513 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x258A DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2595 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25AD JUMPI PUSH2 0x25AC PUSH2 0x2350 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x263A PUSH1 0x22 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2645 DUP3 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2667 DUP2 PUSH2 0x262E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26A2 PUSH1 0x15 DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x26AD DUP3 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26CF DUP2 PUSH2 0x2696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x270A PUSH1 0x1F DUP4 PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2715 DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2737 DUP2 PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2748 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH2 0x2753 DUP4 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x276B JUMPI PUSH2 0x276A PUSH2 0x2350 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2784 PUSH0 DUP4 ADD DUP7 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x2791 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x279E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B0 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27E2 JUMPI PUSH2 0x27E1 PUSH2 0x2350 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE LOG2 PUSH16 0xD50E88693E5AB7240D40137B89CD9AB8 DUP9 0xA6 TSTORE 0xDC PUSH14 0x86484334E0B6C34E64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "482:7747:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:546:9;;;:::i;:::-;;776:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1584:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:66:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1186:27:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1629:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4774:1109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;845:71:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1219:51:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;709:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1737:25:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;608:61:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;997:57:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2845:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3806:794;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6549:740:9;;;:::i;:::-;;6058:382;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;922:69:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1276:27:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;3104:546:9:-;2261:21:2;:19;:21::i;:::-;1531:13:0::1;:11;:13::i;:::-;3202:12:9::2;;3183:15;:31;;3175:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3257:15;3275:33;3295:12;;3275:15;:19;;:33;;;;:::i;:::-;3257:51;;3318:23;3344:48;1262:8;3344:26;3362:7;836:3;831:2;647:22;816:17;;;;:::i;:::-;:23;;;;:::i;:::-;3344:17;;:26;;;;:::i;:::-;:30;;:48;;;;:::i;:::-;3318:74;;3402:23;3428:33;3448:12;;3428:15;:19;;:33;;;;:::i;:::-;3402:59;;3498:1;3480:15;:19;3472:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3550:33;3567:15;3550:12;;:16;;:33;;;;:::i;:::-;3535:12;:48;;;;3593:50;3611:4;3618:7;:5;:7::i;:::-;3627:15;3593:9;:50::i;:::-;3165:485;;;2303:20:2::0;:18;:20::i;:::-;3104:546:9:o;776:63::-;836:3;831:2;647:22;816:17;;;;:::i;:::-;:23;;;;:::i;:::-;776:63;:::o;1584:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;1060:66:9:-;1123:3;1119:1;647:22;1104:16;;;;:::i;:::-;:22;;;;:::i;:::-;1060:66;:::o;4776:244:3:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1186:27:9:-;;;;:::o;1629:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4774:1109::-;2261:21:2;:19;:21::i;:::-;4856:1:9::1;4847:6;:10;4839:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;4932:6;4903;:18;4910:10;4903:18;;;;;;;;;;;;;;;:25;;;:35;;4895:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5024:14;5041:27;5057:10;5041:15;:27::i;:::-;5024:44;;5078:19;5100:18;5111:6;5100;:10;;:18;;;;:::i;:::-;5078:40;;5186:37;5216:6;5186;:18;5193:10;5186:18;;;;;;;;;;;;;;;:25;;;:29;;:37;;;;:::i;:::-;5158:6;:18;5165:10;5158:18;;;;;;;;;;;;;;;:25;;:65;;;;5264:15;5233:6;:18;5240:10;5233:18;;;;;;;;;;;;;;;:28;;:46;;;;5322:15;5289:6;:18;5296:10;5289:18;;;;;;;;;;;;;;;:30;;:48;;;;5392:49;5410:4;5417:10;5429:11;5392:9;:49::i;:::-;5522:6;5531:1;5522:10;;5517:265;5538:14;:21;;;;5534:1;:25;5517:265;;;5605:10;5584:31;;:14;5599:1;5584:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:31;;::::0;5580:192:::1;;5655:14;5694:1;5670:14;:21;;;;:25;;;;:::i;:::-;5655:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5635:14;5650:1;5635:17;;;;;;;;:::i;:::-;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;5714:14;:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5752:5;;5580:192;5561:3;;;;;;;5517:265;;;;5807:10;5798:28;;;5819:6;5798:28;;;;;;:::i;:::-;;;;;;;;5857:10;5841:35;;;5869:6;5841:35;;;;;;:::i;:::-;;;;;;;;4829:1054;;2303:20:2::0;:18;:20::i;:::-;4774:1109:9;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;845:71:9:-;913:3;908:2;647:22;893:17;;;;:::i;:::-;:23;;;;:::i;:::-;845:71;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1219:51:9:-;1262:8;1219:51;:::o;709:61::-;767:3;762:2;647:22;747:17;;;;:::i;:::-;:23;;;;:::i;:::-;709:61;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1737:25:9:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;608:61:9:-;647:22;608:61;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;997:57:9:-;1051:3;1046:2;647:22;1031:17;;;;:::i;:::-;:23;;;;:::i;:::-;997:57;:::o;2845:170::-;1531:13:0;:11;:13::i;:::-;2937:1:9::1;2926:8;:12;2918:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3000:8;2987:10;:21;;;;2845:170:::0;:::o;3806:794::-;2261:21:2;:19;:21::i;:::-;3886:1:9::1;3877:6;:10;3869:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3923;3933:10;3953:4;3960:6;3923:9;:44::i;:::-;3978:23;4004:6;:18;4011:10;4004:18;;;;;;;;;;;;;;;3978:44;;4032:14;4052:10;4032:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4129:21;4153:27;4169:10;4153:15;:27::i;:::-;4129:51;;4210:1;4194:13;:17;4190:160;;;4227:51;4245:4;4252:10;4264:13;4227:9;:51::i;:::-;4313:10;4297:42;;;4325:13;4297:42;;;;;;:::i;:::-;;;;;;;;4190:160;4469:28;4490:6;4469:9;:16;;;:20;;:28;;;;:::i;:::-;4450:9;:16;;:47;;;;4529:15;4507:9;:19;;:37;;;;4578:15;4554:9;:21;;:39;;;;3859:741;;2303:20:2::0;:18;:20::i;:::-;3806:794:9;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;6549:740:9:-;1531:13:0;:11;:13::i;:::-;6608:24:9::1;6635:16;:14;:16::i;:::-;6608:43;;6661:21;6685:1;6661:25;;6702:9;6714:1;6702:13;;6697:528;6721:7;:14;6717:1;:18;6697:528;;;6756:23;6782:6;:18;6789:7;6797:1;6789:10;;;;;;;;:::i;:::-;;;;;;;;6782:18;;;;;;;;;;;;;;;6756:44;;6814:21;6838:27;6854:7;6862:1;6854:10;;;;;;;;:::i;:::-;;;;;;;;6838:15;:27::i;:::-;6814:51;;6899:1;6883:13;:17;6879:336;;;6920:51;6938:4;6945:7;6953:1;6945:10;;;;;;;;:::i;:::-;;;;;;;;6957:13;6920:9;:51::i;:::-;7013:15;6989:9;:21;;:39;;;;7103:32;7121:13;7103;:17;;:32;;;;:::i;:::-;7087:48;;7174:7;7182:1;7174:10;;;;;;;;:::i;:::-;;;;;;;;7158:42;;;7186:13;7158:42;;;;;;:::i;:::-;;;;;;;;6879:336;6742:483;;6737:3;;;;;;;6697:528;;;;7248:34;7268:13;7248:34;;;;;;:::i;:::-;;;;;;;;6598:691;;6549:740::o:0;6058:382::-;6120:7;6139:22;6164:6;:14;6171:6;6164:14;;;;;;;;;;;;;;;6139:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6212:1;6192:9;:16;;;:21;6188:35;;6222:1;6215:8;;;;;6188:35;6234:18;6299:6;6274:9;:21;;;6256:15;:39;;;;:::i;:::-;6255:50;;;;:::i;:::-;6234:71;;6315:20;6338:41;6375:3;6338:32;6359:10;;6338:9;:16;;;:20;;:32;;;;:::i;:::-;:36;;:41;;;;:::i;:::-;6315:64;;6396:37;6429:3;6396:28;6413:10;6396:12;:16;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;6389:44;;;;;6058:382;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;922:69:9:-;988:3;983:2;647:22;968:17;;;;:::i;:::-;:23;;;;:::i;:::-;922:69;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1276:27:9:-;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;3122:96:8:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;5393:300:3:-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;10415:476:3:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7358:631:9:-;7407:16;7435:19;7457:1;7435:23;;7473:6;7482:1;7473:10;;7468:185;7489:14;:21;;;;7485:1;:25;7468:185;;;7570:1;7535:6;:25;7542:14;7557:1;7542:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7535:25;;;;;;;;;;;;;;;:32;;;:36;7531:112;;;7615:13;;;;;:::i;:::-;;;;7531:112;7512:3;;;;;;;7468:185;;;;7662:24;7703:11;7689:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7662:53;;7725:13;7741:1;7725:17;;7757:6;7766:1;7757:10;;7752:207;7773:14;:21;;;;7769:1;:25;7752:207;;;7854:1;7819:6;:25;7826:14;7841:1;7826:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7819:25;;;;;;;;;;;;;;;:32;;;:36;7815:134;;;7892:14;7907:1;7892:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7875:7;7883:5;7875:14;;;;;;;;:::i;:::-;;;;;;;:34;;;;;;;;;;;7927:7;;;;;:::i;:::-;;;;7815:134;7796:3;;;;;;;7752:207;;;;7975:7;7968:14;;;;;7358:631;:::o;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:442::-;4175:4;4213:2;4202:9;4198:18;4190:26;;4226:71;4294:1;4283:9;4279:17;4270:6;4226:71;:::i;:::-;4307:72;4375:2;4364:9;4360:18;4351:6;4307:72;:::i;:::-;4389;4457:2;4446:9;4442:18;4433:6;4389:72;:::i;:::-;4026:442;;;;;;:::o;4474:619::-;4551:6;4559;4567;4616:2;4604:9;4595:7;4591:23;4587:32;4584:119;;;4622:79;;:::i;:::-;4584:119;4742:1;4767:53;4812:7;4803:6;4792:9;4788:22;4767:53;:::i;:::-;4757:63;;4713:117;4869:2;4895:53;4940:7;4931:6;4920:9;4916:22;4895:53;:::i;:::-;4885:63;;4840:118;4997:2;5023:53;5068:7;5059:6;5048:9;5044:22;5023:53;:::i;:::-;5013:63;;4968:118;4474:619;;;;;:::o;5099:329::-;5158:6;5207:2;5195:9;5186:7;5182:23;5178:32;5175:119;;;5213:79;;:::i;:::-;5175:119;5333:1;5358:53;5403:7;5394:6;5383:9;5379:22;5358:53;:::i;:::-;5348:63;;5304:117;5099:329;;;;:::o;5434:118::-;5521:24;5539:5;5521:24;:::i;:::-;5516:3;5509:37;5434:118;;:::o;5558:222::-;5651:4;5689:2;5678:9;5674:18;5666:26;;5702:71;5770:1;5759:9;5755:17;5746:6;5702:71;:::i;:::-;5558:222;;;;:::o;5786:86::-;5821:7;5861:4;5854:5;5850:16;5839:27;;5786:86;;;:::o;5878:112::-;5961:22;5977:5;5961:22;:::i;:::-;5956:3;5949:35;5878:112;;:::o;5996:214::-;6085:4;6123:2;6112:9;6108:18;6100:26;;6136:67;6200:1;6189:9;6185:17;6176:6;6136:67;:::i;:::-;5996:214;;;;:::o;6216:474::-;6284:6;6292;6341:2;6329:9;6320:7;6316:23;6312:32;6309:119;;;6347:79;;:::i;:::-;6309:119;6467:1;6492:53;6537:7;6528:6;6517:9;6513:22;6492:53;:::i;:::-;6482:63;;6438:117;6594:2;6620:53;6665:7;6656:6;6645:9;6641:22;6620:53;:::i;:::-;6610:63;;6565:118;6216:474;;;;;:::o;6696:180::-;6744:77;6741:1;6734:88;6841:4;6838:1;6831:15;6865:4;6862:1;6855:15;6882:320;6926:6;6963:1;6957:4;6953:12;6943:22;;7010:1;7004:4;7000:12;7031:18;7021:81;;7087:4;7079:6;7075:17;7065:27;;7021:81;7149:2;7141:6;7138:14;7118:18;7115:38;7112:84;;7168:18;;:::i;:::-;7112:84;6933:269;6882:320;;;:::o;7208:169::-;7348:21;7344:1;7336:6;7332:14;7325:45;7208:169;:::o;7383:366::-;7525:3;7546:67;7610:2;7605:3;7546:67;:::i;:::-;7539:74;;7622:93;7711:3;7622:93;:::i;:::-;7740:2;7735:3;7731:12;7724:19;;7383:366;;;:::o;7755:419::-;7921:4;7959:2;7948:9;7944:18;7936:26;;8008:9;8002:4;7998:20;7994:1;7983:9;7979:17;7972:47;8036:131;8162:4;8036:131;:::i;:::-;8028:139;;7755:419;;;:::o;8180:180::-;8228:77;8225:1;8218:88;8325:4;8322:1;8315:15;8349:4;8346:1;8339:15;8366:410;8406:7;8429:20;8447:1;8429:20;:::i;:::-;8424:25;;8463:20;8481:1;8463:20;:::i;:::-;8458:25;;8518:1;8515;8511:9;8540:30;8558:11;8540:30;:::i;:::-;8529:41;;8719:1;8710:7;8706:15;8703:1;8700:22;8680:1;8673:9;8653:83;8630:139;;8749:18;;:::i;:::-;8630:139;8414:362;8366:410;;;;:::o;8782:180::-;8830:77;8827:1;8820:88;8927:4;8924:1;8917:15;8951:4;8948:1;8941:15;8968:185;9008:1;9025:20;9043:1;9025:20;:::i;:::-;9020:25;;9059:20;9077:1;9059:20;:::i;:::-;9054:25;;9098:1;9088:35;;9103:18;;:::i;:::-;9088:35;9145:1;9142;9138:9;9133:14;;8968:185;;;;:::o;9159:170::-;9299:22;9295:1;9287:6;9283:14;9276:46;9159:170;:::o;9335:366::-;9477:3;9498:67;9562:2;9557:3;9498:67;:::i;:::-;9491:74;;9574:93;9663:3;9574:93;:::i;:::-;9692:2;9687:3;9683:12;9676:19;;9335:366;;;:::o;9707:419::-;9873:4;9911:2;9900:9;9896:18;9888:26;;9960:9;9954:4;9950:20;9946:1;9935:9;9931:17;9924:47;9988:131;10114:4;9988:131;:::i;:::-;9980:139;;9707:419;;;:::o;10132:173::-;10272:25;10268:1;10260:6;10256:14;10249:49;10132:173;:::o;10311:366::-;10453:3;10474:67;10538:2;10533:3;10474:67;:::i;:::-;10467:74;;10550:93;10639:3;10550:93;:::i;:::-;10668:2;10663:3;10659:12;10652:19;;10311:366;;;:::o;10683:419::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10936:9;10930:4;10926:20;10922:1;10911:9;10907:17;10900:47;10964:131;11090:4;10964:131;:::i;:::-;10956:139;;10683:419;;;:::o;11108:176::-;11248:28;11244:1;11236:6;11232:14;11225:52;11108:176;:::o;11290:366::-;11432:3;11453:67;11517:2;11512:3;11453:67;:::i;:::-;11446:74;;11529:93;11618:3;11529:93;:::i;:::-;11647:2;11642:3;11638:12;11631:19;;11290:366;;;:::o;11662:419::-;11828:4;11866:2;11855:9;11851:18;11843:26;;11915:9;11909:4;11905:20;11901:1;11890:9;11886:17;11879:47;11943:131;12069:4;11943:131;:::i;:::-;11935:139;;11662:419;;;:::o;12087:180::-;12135:77;12132:1;12125:88;12232:4;12229:1;12222:15;12256:4;12253:1;12246:15;12273:194;12313:4;12333:20;12351:1;12333:20;:::i;:::-;12328:25;;12367:20;12385:1;12367:20;:::i;:::-;12362:25;;12411:1;12408;12404:9;12396:17;;12435:1;12429:4;12426:11;12423:37;;;12440:18;;:::i;:::-;12423:37;12273:194;;;;:::o;12473:180::-;12521:77;12518:1;12511:88;12618:4;12615:1;12608:15;12642:4;12639:1;12632:15;12659:221;12799:34;12795:1;12787:6;12783:14;12776:58;12868:4;12863:2;12855:6;12851:15;12844:29;12659:221;:::o;12886:366::-;13028:3;13049:67;13113:2;13108:3;13049:67;:::i;:::-;13042:74;;13125:93;13214:3;13125:93;:::i;:::-;13243:2;13238:3;13234:12;13227:19;;12886:366;;;:::o;13258:419::-;13424:4;13462:2;13451:9;13447:18;13439:26;;13511:9;13505:4;13501:20;13497:1;13486:9;13482:17;13475:47;13539:131;13665:4;13539:131;:::i;:::-;13531:139;;13258:419;;;:::o;13683:171::-;13823:23;13819:1;13811:6;13807:14;13800:47;13683:171;:::o;13860:366::-;14002:3;14023:67;14087:2;14082:3;14023:67;:::i;:::-;14016:74;;14099:93;14188:3;14099:93;:::i;:::-;14217:2;14212:3;14208:12;14201:19;;13860:366;;;:::o;14232:419::-;14398:4;14436:2;14425:9;14421:18;14413:26;;14485:9;14479:4;14475:20;14471:1;14460:9;14456:17;14449:47;14513:131;14639:4;14513:131;:::i;:::-;14505:139;;14232:419;;;:::o;14657:181::-;14797:33;14793:1;14785:6;14781:14;14774:57;14657:181;:::o;14844:366::-;14986:3;15007:67;15071:2;15066:3;15007:67;:::i;:::-;15000:74;;15083:93;15172:3;15083:93;:::i;:::-;15201:2;15196:3;15192:12;15185:19;;14844:366;;;:::o;15216:419::-;15382:4;15420:2;15409:9;15405:18;15397:26;;15469:9;15463:4;15459:20;15455:1;15444:9;15440:17;15433:47;15497:131;15623:4;15497:131;:::i;:::-;15489:139;;15216:419;;;:::o;15641:191::-;15681:3;15700:20;15718:1;15700:20;:::i;:::-;15695:25;;15734:20;15752:1;15734:20;:::i;:::-;15729:25;;15777:1;15774;15770:9;15763:16;;15798:3;15795:1;15792:10;15789:36;;;15805:18;;:::i;:::-;15789:36;15641:191;;;;:::o;15838:442::-;15987:4;16025:2;16014:9;16010:18;16002:26;;16038:71;16106:1;16095:9;16091:17;16082:6;16038:71;:::i;:::-;16119:72;16187:2;16176:9;16172:18;16163:6;16119:72;:::i;:::-;16201;16269:2;16258:9;16254:18;16245:6;16201:72;:::i;:::-;15838:442;;;;;;:::o;16286:233::-;16325:3;16348:24;16366:5;16348:24;:::i;:::-;16339:33;;16394:66;16387:5;16384:77;16381:103;;16464:18;;:::i;:::-;16381:103;16511:1;16504:5;16500:13;16493:20;;16286:233;;;:::o;16525:180::-;16573:77;16570:1;16563:88;16670:4;16667:1;16660:15;16694:4;16691:1;16684:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2064000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COMMUNITY_REWARDS()": "infinite",
								"MARKETING_PARTNERSHIP()": "infinite",
								"PROJECT_DEVELOPMENT()": "infinite",
								"PUBLIC_SALE()": "infinite",
								"RESERVE()": "infinite",
								"TEAM_FOUNDERS()": "infinite",
								"TOTAL_SUPPLY()": "392",
								"VESTING_DURATION()": "414",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"calculateReward(address)": "infinite",
								"decimals()": "450",
								"name()": "infinite",
								"owner()": "2560",
								"releaseAllInterest()": "infinite",
								"releaseTeamTokens()": "infinite",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2537",
								"stake(uint256)": "infinite",
								"stakeAddresses(uint256)": "5012",
								"stakes(address)": "infinite",
								"symbol()": "infinite",
								"teamReleased()": "2557",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite",
								"updateRewardRate(uint256)": "infinite",
								"vestingStart()": "2471"
							},
							"internal": {
								"_getAllStakers()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1940,
									"end": 2705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 530,
									"end": 534,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "50696E67506F6E67506C61790000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "50494E4750500000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2037,
									"end": 2038,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2023,
									"end": 2034,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2023,
									"end": 2038,
									"modifierDepth": 1,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2015,
									"end": 2077,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2077,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2109,
									"end": 2120,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2106,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 2096,
									"end": 2120,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2120,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2120,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2120,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2139,
									"end": 2173,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2153,
									"end": 2157,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 2139,
									"end": 2144,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2139,
									"end": 2144,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2139,
									"end": 2144,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2139,
									"end": 2173,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2139,
									"end": 2173,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2139,
									"end": 2173,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2139,
									"end": 2173,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2139,
									"end": 2173,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2207,
									"end": 2222,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2204,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2192,
									"end": 2222,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2222,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2222,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2222,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2267,
									"end": 2316,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2285,
									"end": 2289,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2302,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 767,
									"end": 770,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 762,
									"end": 764,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 747,
									"end": 764,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 747,
									"end": 764,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 747,
									"end": 764,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 747,
									"end": 764,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 747,
									"end": 764,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 747,
									"end": 764,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 747,
									"end": 764,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 747,
									"end": 770,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 747,
									"end": 770,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 747,
									"end": 770,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 747,
									"end": 770,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 747,
									"end": 770,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 747,
									"end": 770,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 747,
									"end": 770,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2267,
									"end": 2276,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2267,
									"end": 2276,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2267,
									"end": 2276,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2267,
									"end": 2316,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2267,
									"end": 2316,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2267,
									"end": 2316,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2267,
									"end": 2316,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2267,
									"end": 2316,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2346,
									"end": 2400,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2364,
									"end": 2368,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2379,
									"end": 2383,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 836,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 831,
									"end": 833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 816,
									"end": 833,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 816,
									"end": 833,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 833,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 816,
									"end": 833,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 816,
									"end": 833,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 816,
									"end": 833,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 816,
									"end": 833,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 816,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 839,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 816,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 816,
									"end": 839,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 816,
									"end": 839,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 839,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2346,
									"end": 2355,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2346,
									"end": 2355,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2346,
									"end": 2355,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2346,
									"end": 2400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2346,
									"end": 2400,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2346,
									"end": 2400,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2346,
									"end": 2400,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2346,
									"end": 2400,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2511,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 2470,
									"end": 2474,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2477,
									"end": 2487,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 913,
									"end": 916,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 908,
									"end": 910,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "F"
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 893,
									"end": 910,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 893,
									"end": 910,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 893,
									"end": 910,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 893,
									"end": 910,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 893,
									"end": 910,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 893,
									"end": 910,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 893,
									"end": 910,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 893,
									"end": 916,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 893,
									"end": 916,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 893,
									"end": 916,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 893,
									"end": 916,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 893,
									"end": 916,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 893,
									"end": 916,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 893,
									"end": 916,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2461,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2452,
									"end": 2461,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2452,
									"end": 2461,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2511,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2452,
									"end": 2511,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2511,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2511,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 2452,
									"end": 2511,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2578,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2539,
									"end": 2543,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2556,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 988,
									"end": 991,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 983,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 968,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 968,
									"end": 985,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 968,
									"end": 985,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 968,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 968,
									"end": 985,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 968,
									"end": 985,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 968,
									"end": 985,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 968,
									"end": 991,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 968,
									"end": 991,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 968,
									"end": 991,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 968,
									"end": 991,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 968,
									"end": 991,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 968,
									"end": 991,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 968,
									"end": 991,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2521,
									"end": 2530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2521,
									"end": 2530,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2578,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2521,
									"end": 2578,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2578,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2578,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2521,
									"end": 2578,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2633,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2606,
									"end": 2610,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2613,
									"end": 2623,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1046,
									"end": 1048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 1031,
									"end": 1048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1031,
									"end": 1048,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1048,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1031,
									"end": 1048,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1048,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1031,
									"end": 1048,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1054,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1031,
									"end": 1054,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1054,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1054,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1031,
									"end": 1054,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1054,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1031,
									"end": 1054,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2597,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2588,
									"end": 2597,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2588,
									"end": 2597,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2633,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2588,
									"end": 2633,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2633,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2633,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2588,
									"end": 2633,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2698,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2661,
									"end": 2665,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2668,
									"end": 2678,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1123,
									"end": 1126,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1119,
									"end": 1120,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 647,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 1104,
									"end": 1120,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1104,
									"end": 1120,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1120,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1120,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1104,
									"end": 1120,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1120,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1104,
									"end": 1120,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1126,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1104,
									"end": 1126,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1126,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1126,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1104,
									"end": 1126,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1126,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1104,
									"end": 1126,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2652,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2643,
									"end": 2652,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2643,
									"end": 2652,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2643,
									"end": 2698,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2698,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2698,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2643,
									"end": 2698,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1940,
									"end": 2705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5393,
									"end": 5693,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 5393,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5494,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5476,
									"end": 5494,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5476,
									"end": 5494,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5476,
									"end": 5494,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5476,
									"end": 5494,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5472,
									"end": 5558,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 5472,
									"end": 5558,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "PUSH",
									"source": 3,
									"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 5517,
									"end": 5547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5517,
									"end": 5547,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5472,
									"end": 5558,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 5472,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5585,
									"end": 5586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5571,
									"end": 5587,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5571,
									"end": 5587,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5571,
									"end": 5573,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5571,
									"end": 5587,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5571,
									"end": 5587,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5571,
									"end": 5587,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5653,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 5567,
									"end": 5653,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5639,
									"end": 5640,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 5610,
									"end": 5642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5642,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5653,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 5567,
									"end": 5653,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5662,
									"end": 5686,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 5670,
									"end": 5674,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5680,
									"end": 5685,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5662,
									"end": 5669,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 5662,
									"end": 5669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5662,
									"end": 5669,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5662,
									"end": 5686,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5662,
									"end": 5686,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5662,
									"end": 5686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5662,
									"end": 5686,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 5662,
									"end": 5686,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5393,
									"end": 5693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5393,
									"end": 5693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5393,
									"end": 5693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5393,
									"end": 5693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6865,
									"end": 6876,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6899,
									"end": 6905,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6894,
									"end": 6897,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6887,
									"end": 6906,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 6943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6934,
									"end": 6937,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6930,
									"end": 6944,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6915,
									"end": 6944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6915,
									"end": 6944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6781,
									"end": 6950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6956,
									"end": 7177,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 6956,
									"end": 7177,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7096,
									"end": 7130,
									"name": "PUSH",
									"source": 10,
									"value": "5265776172642072617465206D7573742062652067726561746572207468616E"
								},
								{
									"begin": 7092,
									"end": 7093,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7084,
									"end": 7090,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7080,
									"end": 7094,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7073,
									"end": 7131,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7165,
									"end": 7169,
									"name": "PUSH",
									"source": 10,
									"value": "2030000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7160,
									"end": 7162,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7152,
									"end": 7158,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7148,
									"end": 7163,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7141,
									"end": 7170,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6956,
									"end": 7177,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6956,
									"end": 7177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7183,
									"end": 7549,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 7183,
									"end": 7549,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7325,
									"end": 7328,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7346,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 7410,
									"end": 7412,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 7405,
									"end": 7408,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7346,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 7346,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7346,
									"end": 7413,
									"name": "tag",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 7346,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7339,
									"end": 7413,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7339,
									"end": 7413,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7422,
									"end": 7515,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 7511,
									"end": 7514,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7422,
									"end": 7515,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 7422,
									"end": 7515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7422,
									"end": 7515,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 7422,
									"end": 7515,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7540,
									"end": 7542,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7535,
									"end": 7538,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7531,
									"end": 7543,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7524,
									"end": 7543,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7524,
									"end": 7543,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7183,
									"end": 7549,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7183,
									"end": 7549,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7183,
									"end": 7549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7183,
									"end": 7549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7974,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 7555,
									"end": 7974,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7721,
									"end": 7725,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7759,
									"end": 7761,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7748,
									"end": 7757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7744,
									"end": 7762,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 7762,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 7762,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7808,
									"end": 7817,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7802,
									"end": 7806,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7798,
									"end": 7818,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7783,
									"end": 7792,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7779,
									"end": 7796,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7772,
									"end": 7819,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7836,
									"end": 7967,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 7962,
									"end": 7966,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7836,
									"end": 7967,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 7836,
									"end": 7967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7836,
									"end": 7967,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 7836,
									"end": 7967,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 7967,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 7967,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7974,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7974,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7974,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7555,
									"end": 7974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7980,
									"end": 8160,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 7980,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8028,
									"end": 8105,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8025,
									"end": 8026,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8018,
									"end": 8106,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8125,
									"end": 8129,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 8122,
									"end": 8123,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 8115,
									"end": 8130,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8149,
									"end": 8153,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8139,
									"end": 8154,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 8166,
									"end": 8576,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 8166,
									"end": 8576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8206,
									"end": 8213,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8229,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 8247,
									"end": 8248,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8229,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8229,
									"end": 8249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8229,
									"end": 8249,
									"name": "tag",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 8229,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8224,
									"end": 8249,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8224,
									"end": 8249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8263,
									"end": 8283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 8281,
									"end": 8282,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8263,
									"end": 8283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8263,
									"end": 8283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8263,
									"end": 8283,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 8263,
									"end": 8283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8258,
									"end": 8283,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8258,
									"end": 8283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8318,
									"end": 8319,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8315,
									"end": 8316,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8311,
									"end": 8320,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8340,
									"end": 8370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8358,
									"end": 8369,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8340,
									"end": 8370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8340,
									"end": 8370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8340,
									"end": 8370,
									"name": "tag",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8340,
									"end": 8370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8329,
									"end": 8370,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8329,
									"end": 8370,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8519,
									"end": 8520,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8510,
									"end": 8517,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8506,
									"end": 8521,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 8503,
									"end": 8504,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8500,
									"end": 8522,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8480,
									"end": 8481,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8453,
									"end": 8536,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 8430,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 8430,
									"end": 8569,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8549,
									"end": 8567,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 8549,
									"end": 8567,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 8549,
									"end": 8567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8549,
									"end": 8567,
									"name": "tag",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 8549,
									"end": 8567,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8430,
									"end": 8569,
									"name": "tag",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 8430,
									"end": 8569,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8214,
									"end": 8576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8166,
									"end": 8576,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8166,
									"end": 8576,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8166,
									"end": 8576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8166,
									"end": 8576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8166,
									"end": 8576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8582,
									"end": 8762,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 8582,
									"end": 8762,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8630,
									"end": 8707,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8627,
									"end": 8628,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8620,
									"end": 8708,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8727,
									"end": 8731,
									"name": "PUSH",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 8724,
									"end": 8725,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 8717,
									"end": 8732,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8751,
									"end": 8755,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 8748,
									"end": 8749,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8741,
									"end": 8756,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 8768,
									"end": 8953,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 8768,
									"end": 8953,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8808,
									"end": 8809,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8825,
									"end": 8845,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 8843,
									"end": 8844,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8825,
									"end": 8845,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8825,
									"end": 8845,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8825,
									"end": 8845,
									"name": "tag",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 8825,
									"end": 8845,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8820,
									"end": 8845,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8820,
									"end": 8845,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8859,
									"end": 8879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 8877,
									"end": 8878,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8859,
									"end": 8879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8859,
									"end": 8879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8859,
									"end": 8879,
									"name": "tag",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 8859,
									"end": 8879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8854,
									"end": 8879,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8854,
									"end": 8879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8898,
									"end": 8899,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8888,
									"end": 8923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 8888,
									"end": 8923,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8903,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "205"
								},
								{
									"begin": 8903,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 8903,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8903,
									"end": 8921,
									"name": "tag",
									"source": 10,
									"value": "205"
								},
								{
									"begin": 8903,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8888,
									"end": 8923,
									"name": "tag",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 8888,
									"end": 8923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8945,
									"end": 8946,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8942,
									"end": 8943,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8938,
									"end": 8947,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 8933,
									"end": 8947,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8933,
									"end": 8947,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8768,
									"end": 8953,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8768,
									"end": 8953,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8768,
									"end": 8953,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8768,
									"end": 8953,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8768,
									"end": 8953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8959,
									"end": 9150,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 8959,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9018,
									"end": 9038,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 9036,
									"end": 9037,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9018,
									"end": 9038,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9018,
									"end": 9038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9018,
									"end": 9038,
									"name": "tag",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 9018,
									"end": 9038,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9013,
									"end": 9038,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9013,
									"end": 9038,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9052,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 9070,
									"end": 9071,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9052,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9052,
									"end": 9072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9052,
									"end": 9072,
									"name": "tag",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 9052,
									"end": 9072,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9072,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9072,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9095,
									"end": 9096,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9092,
									"end": 9093,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9088,
									"end": 9097,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9081,
									"end": 9097,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9081,
									"end": 9097,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9116,
									"end": 9119,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 9113,
									"end": 9114,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9110,
									"end": 9120,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 9107,
									"end": 9143,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9107,
									"end": 9143,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "209"
								},
								{
									"begin": 9107,
									"end": 9143,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9123,
									"end": 9141,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 9123,
									"end": 9141,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 9123,
									"end": 9141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9123,
									"end": 9141,
									"name": "tag",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 9123,
									"end": 9141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9107,
									"end": 9143,
									"name": "tag",
									"source": 10,
									"value": "209"
								},
								{
									"begin": 9107,
									"end": 9143,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8959,
									"end": 9150,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8959,
									"end": 9150,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8959,
									"end": 9150,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8959,
									"end": 9150,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8959,
									"end": 9150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9156,
									"end": 9274,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 9156,
									"end": 9274,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9243,
									"end": 9267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 9261,
									"end": 9266,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9243,
									"end": 9267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9243,
									"end": 9267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9243,
									"end": 9267,
									"name": "tag",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 9243,
									"end": 9267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9238,
									"end": 9241,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9231,
									"end": 9268,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9156,
									"end": 9274,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9156,
									"end": 9274,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9156,
									"end": 9274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9429,
									"end": 9433,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9467,
									"end": 9469,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 9456,
									"end": 9465,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9452,
									"end": 9470,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9444,
									"end": 9470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9444,
									"end": 9470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9480,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "214"
								},
								{
									"begin": 9548,
									"end": 9549,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9537,
									"end": 9546,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9533,
									"end": 9550,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9524,
									"end": 9530,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9480,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 9480,
									"end": 9551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9480,
									"end": 9551,
									"name": "tag",
									"source": 10,
									"value": "214"
								},
								{
									"begin": 9480,
									"end": 9551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9561,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 9629,
									"end": 9631,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9618,
									"end": 9627,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9614,
									"end": 9632,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9605,
									"end": 9611,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9561,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 9561,
									"end": 9633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9561,
									"end": 9633,
									"name": "tag",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 9561,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9643,
									"end": 9715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 9711,
									"end": 9713,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 9700,
									"end": 9709,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9696,
									"end": 9714,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9687,
									"end": 9693,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9643,
									"end": 9715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 9643,
									"end": 9715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9643,
									"end": 9715,
									"name": "tag",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 9643,
									"end": 9715,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9280,
									"end": 9722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9728,
									"end": 9950,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 9728,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9821,
									"end": 9825,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9859,
									"end": 9861,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9848,
									"end": 9857,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9844,
									"end": 9862,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9836,
									"end": 9862,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9836,
									"end": 9862,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "218"
								},
								{
									"begin": 9940,
									"end": 9941,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9929,
									"end": 9938,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9925,
									"end": 9942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9916,
									"end": 9922,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 9872,
									"end": 9943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "tag",
									"source": 10,
									"value": "218"
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9728,
									"end": 9950,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9728,
									"end": 9950,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9728,
									"end": 9950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9728,
									"end": 9950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9728,
									"end": 9950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 8229,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dea26fd50e88693e5ab7240d40137b89cd9ab888a65ddc6d86484334e0b6c34e64736f6c634300081c0033",
									".code": [
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "9EF3A261"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "D82E3962"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "D82E3962"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "E75C4927"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "F6F0FA8D"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "9EF3A261"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "A694FC3A"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "CB3DBECB"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "902D55A5"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "9D2CC436"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "7B0A47EE"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "254800D4"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "39CF9B00"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "39CF9B00"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "4CFC4D30"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "5F89584E"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "254800D4"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "294F5FA3"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "2E17DE78"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "16934FC4"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "16934FC4"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "1CFE31C2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "14C411C7"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "1571CCF6"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 8229,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3104,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 776,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 776,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1584,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1584,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1584,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1060,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1060,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1186,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1186,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1629,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1629,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1629,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 4774,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4774,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 845,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 845,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 845,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1219,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1219,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 709,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 709,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1737,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1737,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 608,
											"end": 669,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 608,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 608,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 997,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 997,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2845,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2845,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3806,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3806,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6549,
											"end": 7289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6058,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6058,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 6058,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 922,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 922,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 922,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1276,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1276,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3104,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3202,
											"end": 3214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3202,
											"end": 3214,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3198,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3214,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3214,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3175,
											"end": 3238,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3175,
											"end": 3238,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3295,
											"end": 3307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3295,
											"end": 3307,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3290,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3275,
											"end": 3294,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3308,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3275,
											"end": 3308,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3308,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3308,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3341,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1262,
											"end": 1270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3362,
											"end": 3369,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 836,
											"end": 839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 831,
											"end": 833,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 816,
											"end": 833,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 816,
											"end": 833,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 833,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 833,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 816,
											"end": 833,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 833,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 816,
											"end": 833,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 816,
											"end": 839,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 816,
											"end": 839,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 816,
											"end": 839,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3361,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3344,
											"end": 3361,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3370,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3344,
											"end": 3370,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3344,
											"end": 3374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3392,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3344,
											"end": 3392,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3392,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3392,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3448,
											"end": 3460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3448,
											"end": 3460,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3461,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3428,
											"end": 3461,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3461,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3461,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3495,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3480,
											"end": 3499,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3472,
											"end": 3524,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3472,
											"end": 3524,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3567,
											"end": 3582,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3562,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3550,
											"end": 3562,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3566,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3550,
											"end": 3566,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3583,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3550,
											"end": 3583,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3547,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3535,
											"end": 3583,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3583,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3583,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3583,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3643,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3611,
											"end": 3615,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3625,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3618,
											"end": 3623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3618,
											"end": 3625,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3625,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3618,
											"end": 3625,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3642,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3593,
											"end": 3643,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3643,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3593,
											"end": 3643,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3650,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3650,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3650,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 776,
											"end": 839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 836,
											"end": 839,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 816,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 816,
											"end": 833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 816,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 816,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 816,
											"end": 839,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 816,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 816,
											"end": 839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 776,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1104,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1104,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4857,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4839,
											"end": 4885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4839,
											"end": 4885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4920,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4921,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4928,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4928,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4938,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4895,
											"end": 4969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4895,
											"end": 4969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5024,
											"end": 5038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5057,
											"end": 5067,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5041,
											"end": 5068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5041,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5024,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5024,
											"end": 5068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5111,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5106,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5100,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5100,
											"end": 5118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5216,
											"end": 5222,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5203,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5211,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5211,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5186,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5175,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5176,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5279,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5250,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5251,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5279,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5337,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5306,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5307,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5289,
											"end": 5319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5337,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5337,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5410,
											"end": 5414,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5427,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5440,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5392,
											"end": 5441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5392,
											"end": 5441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5538,
											"end": 5559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5559,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5615,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5599,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5584,
											"end": 5601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5615,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5580,
											"end": 5772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5694,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5670,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5670,
											"end": 5691,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5691,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5691,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5670,
											"end": 5695,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 5670,
											"end": 5695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5670,
											"end": 5695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5655,
											"end": 5696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5650,
											"end": 5651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5635,
											"end": 5652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5714,
											"end": 5734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5752,
											"end": 5757,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5580,
											"end": 5772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5817,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 5819,
											"end": 5825,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5798,
											"end": 5826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5826,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5867,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530"
										},
										{
											"begin": 5869,
											"end": 5875,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5841,
											"end": 5876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5876,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 5883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 5883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4774,
											"end": 5883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 845,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 916,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 908,
											"end": 910,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 893,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 893,
											"end": 910,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 893,
											"end": 910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 893,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 893,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 893,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 893,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 893,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 893,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 893,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 893,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 893,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 845,
											"end": 916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 1219,
											"end": 1270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 709,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 767,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 747,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 747,
											"end": 764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 747,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 747,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 747,
											"end": 770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 747,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 747,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 709,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 669,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 608,
											"end": 669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 608,
											"end": 669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1031,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1031,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2938,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2918,
											"end": 2977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2918,
											"end": 2977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3008,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2987,
											"end": 3008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3008,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3008,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 3887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3887,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3869,
											"end": 3913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3869,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3933,
											"end": 3943,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3957,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3966,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3923,
											"end": 3967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3923,
											"end": 3967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4021,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4022,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4022,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4052,
											"end": 4062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4169,
											"end": 4179,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4153,
											"end": 4180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4153,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4211,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4350,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4190,
											"end": 4350,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4245,
											"end": 4249,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4262,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4277,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4227,
											"end": 4278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4227,
											"end": 4278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4313,
											"end": 4323,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530"
										},
										{
											"begin": 4325,
											"end": 4338,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4297,
											"end": 4339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4339,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4190,
											"end": 4350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4490,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4485,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4485,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4469,
											"end": 4489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4469,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4450,
											"end": 4459,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4450,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4450,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4450,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4450,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4450,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4544,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4507,
											"end": 4526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4544,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4593,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4563,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4554,
											"end": 4575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4593,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 4600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 4600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 4600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 4600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6549,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6608,
											"end": 6632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6635,
											"end": 6649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 6635,
											"end": 6651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6635,
											"end": 6651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6686,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6702,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6702,
											"end": 6715,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6721,
											"end": 6728,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6721,
											"end": 6735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6735,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6796,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6798,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6789,
											"end": 6799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6800,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 6854,
											"end": 6861,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6863,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6854,
											"end": 6864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6838,
											"end": 6865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 6838,
											"end": 6865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6899,
											"end": 6900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6900,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6879,
											"end": 7215,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6879,
											"end": 7215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6879,
											"end": 7215,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6920,
											"end": 6971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6938,
											"end": 6942,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6952,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6953,
											"end": 6954,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6945,
											"end": 6955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6957,
											"end": 6970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6920,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6920,
											"end": 6971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6920,
											"end": 6971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6920,
											"end": 6971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7013,
											"end": 7028,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 6998,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6989,
											"end": 7010,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7028,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7121,
											"end": 7134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7116,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7103,
											"end": 7120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7103,
											"end": 7135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7181,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7183,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7174,
											"end": 7184,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F9984C8173C4B4FF9CC454F76ED19C053F4490CCB224FD9DDFFEB4EF4BEA3530"
										},
										{
											"begin": 7186,
											"end": 7199,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7158,
											"end": 7200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7200,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6879,
											"end": 7215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6879,
											"end": 7215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 7225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 7225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6A51B76326892CBA00F44F8BC83414A1C2E4715F4BC1EBCAC12326172ED53F18"
										},
										{
											"begin": 7268,
											"end": 7281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7248,
											"end": 7282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7282,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 7289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 7289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 7289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6177,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6208,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 6274,
											"end": 6283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6256,
											"end": 6295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6256,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6295,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6256,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6255,
											"end": 6305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6255,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6305,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6255,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 6359,
											"end": 6369,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6359,
											"end": 6369,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6354,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 6338,
											"end": 6358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6338,
											"end": 6374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 6338,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6429,
											"end": 6432,
											"name": "PUSH",
											"source": 9,
											"value": "16D"
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6413,
											"end": 6423,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 6396,
											"end": 6412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6396,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6396,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6433,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 922,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 983,
											"end": 985,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 647,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 968,
											"end": 985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 968,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 968,
											"end": 985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 968,
											"end": 985,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 968,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 968,
											"end": 991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 968,
											"end": 991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 968,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 968,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 968,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 968,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 922,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7358,
											"end": 7989,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 7358,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7423,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7503,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7489,
											"end": 7510,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7510,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7510,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7535,
											"end": 7541,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7556,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7557,
											"end": 7558,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7542,
											"end": 7559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7542,
											"end": 7559,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7535,
											"end": 7560,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7535,
											"end": 7567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7567,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7571,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7643,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 7531,
											"end": 7643,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 7615,
											"end": 7628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7643,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 7531,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7714,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7689,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7741,
											"end": 7742,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7787,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7773,
											"end": 7794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7794,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7769,
											"end": 7770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7769,
											"end": 7794,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7825,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7840,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7841,
											"end": 7842,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7826,
											"end": 7843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7826,
											"end": 7843,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7844,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7855,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 7949,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7815,
											"end": 7949,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7907,
											"end": 7908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7892,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7892,
											"end": 7909,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7882,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7888,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7875,
											"end": 7889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 7927,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 7949,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7815,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 7982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4202,
											"end": 4211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4216,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4226,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4378,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4307,
											"end": 4379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 4457,
											"end": 4459,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4389,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4618,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4602,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4614,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4587,
											"end": 4619,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4622,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 4812,
											"end": 4819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 4767,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4820,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4713,
											"end": 4830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 4937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4929,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 4895,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 5068,
											"end": 5075,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 5023,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5428,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5099,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5205,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5178,
											"end": 5210,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5294,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 5175,
											"end": 5294,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 5213,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 5213,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5292,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 5213,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5294,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 5175,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 5403,
											"end": 5410,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 5358,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5428,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5552,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5434,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 5539,
											"end": 5544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 5521,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 5521,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5780,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5558,
											"end": 5780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5691,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5752,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5702,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5773,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 5702,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5872,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 5786,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5865,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5854,
											"end": 5859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5866,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5990,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5878,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 5977,
											"end": 5982,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 5961,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 5983,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 5961,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5956,
											"end": 5959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5984,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6100,
											"end": 6126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6100,
											"end": 6126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 6200,
											"end": 6201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6182,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 6136,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6203,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 6136,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6329,
											"end": 6338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6327,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6339,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6344,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 6347,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 6537,
											"end": 6544,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 6492,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6545,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 6665,
											"end": 6672,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6654,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 6620,
											"end": 6673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6696,
											"end": 6876,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 6696,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6744,
											"end": 6821,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6741,
											"end": 6742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6845,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6838,
											"end": 6839,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6862,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6870,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6965,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 7079,
											"end": 7085,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7075,
											"end": 7092,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7065,
											"end": 7092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7065,
											"end": 7092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7151,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7152,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7153,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 7168,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7377,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 7208,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "PUSH",
											"source": 10,
											"value": "56657374696E67206E6F74207374617274656400000000000000000000000000"
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7332,
											"end": 7346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7749,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 7383,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 7605,
											"end": 7608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7546,
											"end": 7613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7613,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 7546,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7613,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 7711,
											"end": 7714,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 7622,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7715,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 7622,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 8174,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7755,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7944,
											"end": 7962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8018,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 7992,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 7996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7972,
											"end": 8019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8036,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 8162,
											"end": 8166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8036,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 8036,
											"end": 8167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8036,
											"end": 8167,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 8036,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 8174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 8174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 8174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 8174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8360,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8180,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8305,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8315,
											"end": 8330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8353,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8354,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8776,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 8366,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8406,
											"end": 8413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 8429,
											"end": 8449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8424,
											"end": 8449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8424,
											"end": 8449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 8463,
											"end": 8483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8458,
											"end": 8483,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8458,
											"end": 8483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 8558,
											"end": 8569,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 8540,
											"end": 8570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8719,
											"end": 8720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 8722,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8653,
											"end": 8736,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 8630,
											"end": 8769,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8749,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8769,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 8630,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8776,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8962,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 8782,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8907,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8827,
											"end": 8828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8931,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 8932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8948,
											"end": 8949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 8956,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9153,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 8968,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9025,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9025,
											"end": 9045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9025,
											"end": 9045,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 9025,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 9077,
											"end": 9078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9059,
											"end": 9079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9079,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 9059,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9079,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9098,
											"end": 9099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 9103,
											"end": 9121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9145,
											"end": 9146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9138,
											"end": 9147,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9153,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9329,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 9159,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9299,
											"end": 9321,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9477,
											"end": 9480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 9557,
											"end": 9560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9498,
											"end": 9565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 9663,
											"end": 9666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 9574,
											"end": 9667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9692,
											"end": 9694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9687,
											"end": 9690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9683,
											"end": 9695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 9877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9913,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9960,
											"end": 9969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 9958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9944,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 9948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9924,
											"end": 9971,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 10114,
											"end": 10118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 9988,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 10126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10305,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 10132,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10272,
											"end": 10297,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F7420756E7374616B65203020746F6B656E73000000000000000000"
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10256,
											"end": 10270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10249,
											"end": 10298,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10453,
											"end": 10456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 10474,
											"end": 10541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 10639,
											"end": 10642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 10550,
											"end": 10643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10659,
											"end": 10671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10900,
											"end": 10947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 11090,
											"end": 11094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 10964,
											"end": 11095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 11102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11284,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 11108,
											"end": 11284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11276,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E74207374616B656420616D6F756E74000000000000"
										},
										{
											"begin": 11244,
											"end": 11245,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11225,
											"end": 11277,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11656,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11290,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11432,
											"end": 11435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11453,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 11517,
											"end": 11519,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 11512,
											"end": 11515,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11453,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 11453,
											"end": 11520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11453,
											"end": 11520,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 11453,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 11618,
											"end": 11621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 11529,
											"end": 11622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11622,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 11529,
											"end": 11622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12081,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 11662,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11855,
											"end": 11864,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11843,
											"end": 11869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11843,
											"end": 11869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11915,
											"end": 11924,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 11925,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11899,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11886,
											"end": 11903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11879,
											"end": 11926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 12069,
											"end": 12073,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11943,
											"end": 12074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 12074,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 11943,
											"end": 12074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11935,
											"end": 12074,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11935,
											"end": 12074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12267,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 12087,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12212,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12213,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12232,
											"end": 12236,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12229,
											"end": 12230,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12222,
											"end": 12237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12260,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12253,
											"end": 12254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12246,
											"end": 12261,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12467,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12273,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12313,
											"end": 12317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 12351,
											"end": 12352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 12333,
											"end": 12353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12353,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 12333,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12328,
											"end": 12353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12328,
											"end": 12353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12367,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12367,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 12367,
											"end": 12387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12367,
											"end": 12387,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 12367,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12362,
											"end": 12387,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12362,
											"end": 12387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12411,
											"end": 12412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12413,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12429,
											"end": 12433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12437,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12460,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 12423,
											"end": 12460,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12440,
											"end": 12458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 12440,
											"end": 12458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 12440,
											"end": 12458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12440,
											"end": 12458,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 12440,
											"end": 12458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12460,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 12423,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12467,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12653,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 12473,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12521,
											"end": 12598,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12518,
											"end": 12519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12599,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12618,
											"end": 12622,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12608,
											"end": 12623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12646,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12639,
											"end": 12640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12647,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12880,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12659,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12833,
											"name": "PUSH",
											"source": 10,
											"value": "5265776172642072617465206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 12795,
											"end": 12796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12776,
											"end": 12834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "PUSH",
											"source": 10,
											"value": "2030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12863,
											"end": 12865,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12855,
											"end": 12861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12851,
											"end": 12866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12844,
											"end": 12873,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12886,
											"end": 13252,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 12886,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13028,
											"end": 13031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 13108,
											"end": 13111,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13049,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 13049,
											"end": 13116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13049,
											"end": 13116,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 13049,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 13214,
											"end": 13217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13125,
											"end": 13218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13218,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 13125,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13245,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13238,
											"end": 13241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13234,
											"end": 13246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12886,
											"end": 13252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12886,
											"end": 13252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12886,
											"end": 13252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12886,
											"end": 13252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13677,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 13258,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13424,
											"end": 13428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13462,
											"end": 13464,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13451,
											"end": 13460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13447,
											"end": 13465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 13465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 13465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13511,
											"end": 13520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13505,
											"end": 13509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13495,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13482,
											"end": 13499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13475,
											"end": 13522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 13665,
											"end": 13669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13539,
											"end": 13670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13670,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 13539,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13683,
											"end": 13854,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13683,
											"end": 13854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13823,
											"end": 13846,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207374616B65203020746F6B656E730000000000000000000000"
										},
										{
											"begin": 13819,
											"end": 13820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13811,
											"end": 13817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13807,
											"end": 13821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13683,
											"end": 13854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13683,
											"end": 13854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 14226,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13860,
											"end": 14226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14002,
											"end": 14005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 14087,
											"end": 14089,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14082,
											"end": 14085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14023,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 14023,
											"end": 14090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14023,
											"end": 14090,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 14023,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14016,
											"end": 14090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14016,
											"end": 14090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14099,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 14188,
											"end": 14191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14099,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14099,
											"end": 14192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14099,
											"end": 14192,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 14099,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14217,
											"end": 14219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14212,
											"end": 14215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14208,
											"end": 14220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14201,
											"end": 14220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14201,
											"end": 14220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 14226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 14226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 14226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 14226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14651,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 14232,
											"end": 14651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14436,
											"end": 14438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14425,
											"end": 14434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14421,
											"end": 14439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14413,
											"end": 14439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14413,
											"end": 14439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14485,
											"end": 14494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14479,
											"end": 14483,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14475,
											"end": 14495,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14471,
											"end": 14472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14460,
											"end": 14469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14456,
											"end": 14473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14449,
											"end": 14496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14513,
											"end": 14644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 14639,
											"end": 14643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14513,
											"end": 14644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14513,
											"end": 14644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14513,
											"end": 14644,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 14513,
											"end": 14644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14505,
											"end": 14644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14505,
											"end": 14644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14838,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14657,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14797,
											"end": 14830,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14793,
											"end": 14794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14785,
											"end": 14791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14781,
											"end": 14795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14774,
											"end": 14831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 15210,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14844,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14986,
											"end": 14989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 15071,
											"end": 15073,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15066,
											"end": 15069,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15007,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 15007,
											"end": 15074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15007,
											"end": 15074,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 15007,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15000,
											"end": 15074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15000,
											"end": 15074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 15172,
											"end": 15175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 15083,
											"end": 15176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15176,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 15083,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15192,
											"end": 15204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15185,
											"end": 15204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15185,
											"end": 15204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 15210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 15210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 15210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 15210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15635,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 15216,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15382,
											"end": 15386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15420,
											"end": 15422,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15409,
											"end": 15418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15397,
											"end": 15423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15397,
											"end": 15423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15469,
											"end": 15478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15463,
											"end": 15467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15479,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15444,
											"end": 15453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15480,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15497,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 15623,
											"end": 15627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15497,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 15497,
											"end": 15628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15497,
											"end": 15628,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 15497,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15489,
											"end": 15628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15489,
											"end": 15628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15832,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 15641,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15700,
											"end": 15720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15700,
											"end": 15720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 15700,
											"end": 15720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15700,
											"end": 15720,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 15700,
											"end": 15720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15695,
											"end": 15720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15695,
											"end": 15720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 15752,
											"end": 15753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 15734,
											"end": 15754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15754,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 15734,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15729,
											"end": 15754,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15729,
											"end": 15754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15777,
											"end": 15778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15774,
											"end": 15775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15770,
											"end": 15779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15763,
											"end": 15779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15763,
											"end": 15779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15798,
											"end": 15801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15795,
											"end": 15796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15792,
											"end": 15802,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 15825,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 15789,
											"end": 15825,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 15805,
											"end": 15823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 15825,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 15789,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16027,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16014,
											"end": 16023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16010,
											"end": 16028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16002,
											"end": 16028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16002,
											"end": 16028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 16106,
											"end": 16107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16095,
											"end": 16104,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16091,
											"end": 16108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16088,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 16038,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 16187,
											"end": 16189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16176,
											"end": 16185,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16163,
											"end": 16169,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 16119,
											"end": 16191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 16269,
											"end": 16271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16258,
											"end": 16267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16245,
											"end": 16251,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 16201,
											"end": 16273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 16280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16519,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 16286,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16325,
											"end": 16328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16348,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 16366,
											"end": 16371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16348,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 16348,
											"end": 16372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16348,
											"end": 16372,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 16348,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16394,
											"end": 16460,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16387,
											"end": 16392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16384,
											"end": 16461,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16381,
											"end": 16484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 16381,
											"end": 16484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16464,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 16464,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 16464,
											"end": 16482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16464,
											"end": 16482,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 16464,
											"end": 16482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16381,
											"end": 16484,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 16381,
											"end": 16484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16511,
											"end": 16512,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16504,
											"end": 16509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16493,
											"end": 16513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16493,
											"end": 16513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16519,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16525,
											"end": 16705,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 16525,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16573,
											"end": 16650,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16570,
											"end": 16571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16563,
											"end": 16651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16674,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 16667,
											"end": 16668,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16660,
											"end": 16675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16694,
											"end": 16698,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16691,
											"end": 16692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16684,
											"end": 16699,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/PingPongPlay.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COMMUNITY_REWARDS()": "1cfe31c2",
							"MARKETING_PARTNERSHIP()": "39cf9b00",
							"PROJECT_DEVELOPMENT()": "e75c4927",
							"PUBLIC_SALE()": "5f89584e",
							"RESERVE()": "9d2cc436",
							"TEAM_FOUNDERS()": "1571ccf6",
							"TOTAL_SUPPLY()": "902d55a5",
							"VESTING_DURATION()": "4cfc4d30",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"calculateReward(address)": "d82e3962",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"releaseAllInterest()": "cb3dbecb",
							"releaseTeamTokens()": "14c411c7",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"stake(uint256)": "a694fc3a",
							"stakeAddresses(uint256)": "294f5fa3",
							"stakes(address)": "16934fc4",
							"symbol()": "95d89b41",
							"teamReleased()": "f6f0fa8d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78",
							"updateRewardRate(uint256)": "9ef3a261",
							"vestingStart()": "254800d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"AllInterestReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InterestClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMUNITY_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKETING_PARTNERSHIP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROJECT_DEVELOPMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_SALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_FOUNDERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseAllInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTeamTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 Token con funzionalit\\u00e0 di staking, vesting e gestione della liquidit\\u00e0.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"calculateReward(address)\":{\"details\":\"Calcola la ricompensa accumulata per un indirizzo staker.\",\"params\":{\"staker\":\"Indirizzo dello staker.\"},\"returns\":{\"_0\":\"Ricompensa accumulata.\"}},\"constructor\":{\"details\":\"Costruttore del contratto.\",\"params\":{\"_rewardRate\":\"Tasso di ricompensa annuale per lo staking.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releaseAllInterest()\":{\"details\":\"Rilascia tutti gli interessi maturati per ogni utente che ha stake attivo.\"},\"releaseTeamTokens()\":{\"details\":\"Rilascia i token del team secondo il piano di vesting.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"Permette agli utenti di mettere in staking i propri token.\",\"params\":{\"amount\":\"Quantit\\u00e0 di token da mettere in staking.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"Permette agli utenti di ritirare i propri token in staking e le ricompense accumulate.\",\"params\":{\"amount\":\"Quantit\\u00e0 di token da ritirare.\"}},\"updateRewardRate(uint256)\":{\"details\":\"Aggiorna il tasso di ricompensa per lo staking.\",\"params\":{\"_newRate\":\"Nuovo tasso di ricompensa annuale.\"}}},\"title\":\"PingPongPlay\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay.sol\":\"PingPongPlay\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/PingPongPlay.sol\":{\"keccak256\":\"0x9d6007c7af94513e2589f9cd9103af13887957ee699e9a14f9a10b1ea9b8fa61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c6212c953dc17330da67c4656a6475a58cd7d6733e8b9142b69956ef861588\",\"dweb:/ipfs/QmTe8i9rbDTW1hZEV7Yn9o8YCodw38dM8xcbpzipT17SwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1430,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "vestingStart",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1435,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "teamReleased",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1447,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "stakes",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Stake)1442_storage)"
							},
							{
								"astId": 1450,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "stakeAddresses",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1452,
								"contract": "contracts/PingPongPlay.sol:PingPongPlay",
								"label": "rewardRate",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Stake)1442_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PingPongPlay.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)1442_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Stake)1442_storage": {
								"encoding": "inplace",
								"label": "struct PingPongPlay.Stake",
								"members": [
									{
										"astId": 1437,
										"contract": "contracts/PingPongPlay.sol:PingPongPlay",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1439,
										"contract": "contracts/PingPongPlay.sol:PingPongPlay",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1441,
										"contract": "contracts/PingPongPlay.sol:PingPongPlay",
										"label": "lastClaimed",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1045,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1044
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1015,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1014,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1045,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1013
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 865,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 864,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 1045,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "483:7:5"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 952,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "492:5:5"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 988,
							"linearizedBaseContracts": [
								988,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 988,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 976,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 988,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 989,
							"src": "448:733:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 943,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 991,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 994,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:6"
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1014,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1014,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1010,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1014,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1044
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1044,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1031,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1033,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1044,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1039,
												"id": 1041,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1044,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1356
						]
					},
					"id": 1357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1047,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1356,
							"linearizedBaseContracts": [
								1356
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 1077,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															1060
														],
														"declarations": [
															{
																"constant": false,
																"id": 1060,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1077,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1059,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1064,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1062,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1072,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1070,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1058,
															"id": 1071,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1074,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1075,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1076,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1356,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 1105,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1091,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1092,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1098,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1090,
															"id": 1097,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1100,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1101,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1103,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1090,
														"id": 1104,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1356,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 1147,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1126,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1118,
															"id": 1125,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															1128
														],
														"declarations": [
															{
																"constant": false,
																"id": 1128,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1147,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1127,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1132,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1133,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1134,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1136,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1142,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1118,
															"id": 1141,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1144,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1145,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1118,
														"id": 1146,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1356,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 1175,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1168,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1166,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1160,
															"id": 1167,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1170,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1171,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1173,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1160,
														"id": 1174,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1356,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 1203,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1196,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1188,
															"id": 1195,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1198,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1199,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1201,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1188,
														"id": 1202,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1356,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1218,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1356,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1233,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1356,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1246,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1248,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1356,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1260,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1261,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1263,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1356,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1275,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1276,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1278,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1356,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "5054:106:8",
										"statements": [
											{
												"id": 1303,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1293,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5096:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1294,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "5101:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1296,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "5104:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1292,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1298,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "5138:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "5142:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1291,
														"id": 1302,
														"nodeType": "Return",
														"src": "5131:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4972:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4983:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4994:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "5045:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:8"
									},
									"scope": 1356,
									"src": "4959:201:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5739:105:8",
										"statements": [
											{
												"id": 1328,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1318,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "5781:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1321,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "5788:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1317,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1323,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "5822:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5826:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1327,
														"nodeType": "Return",
														"src": "5815:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5679:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:8"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5730:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:8"
									},
									"scope": 1356,
									"src": "5644:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "6585:105:8",
										"statements": [
											{
												"id": 1353,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "6627:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1346,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "6634:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1342,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1348,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "6668:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "6672:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1341,
														"id": 1352,
														"nodeType": "Return",
														"src": "6661:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6503:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6514:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6525:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:8"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6576:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:8"
									},
									"scope": 1356,
									"src": "6490:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1357,
							"src": "482:6210:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:8"
				},
				"id": 8
			},
			"contracts/PingPongPlay.sol": {
				"ast": {
					"absolutePath": "contracts/PingPongPlay.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1014
						],
						"Ownable": [
							147
						],
						"PingPongPlay": [
							2110
						],
						"ReentrancyGuard": [
							349
						],
						"SafeMath": [
							1356
						]
					},
					"id": 2111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 865,
							"src": "58:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 148,
							"src": "114:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 350,
							"src": "167:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 1357,
							"src": "230:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 989,
							"src": "288:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1365,
										"name": "ERC20",
										"nameLocations": [
											"507:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "507:5:9"
									},
									"id": 1366,
									"nodeType": "InheritanceSpecifier",
									"src": "507:5:9"
								},
								{
									"arguments": [
										{
											"arguments": [
												{
													"id": 1370,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "530:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PingPongPlay_$2110",
														"typeString": "contract PingPongPlay"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_PingPongPlay_$2110",
														"typeString": "contract PingPongPlay"
													}
												],
												"id": 1369,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "522:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:9",
													"typeDescriptions": {}
												}
											},
											"id": 1371,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "522:13:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1367,
										"name": "Ownable",
										"nameLocations": [
											"514:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "514:7:9"
									},
									"id": 1372,
									"nodeType": "InheritanceSpecifier",
									"src": "514:22:9"
								},
								{
									"baseName": {
										"id": 1373,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"538:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "538:15:9"
									},
									"id": 1374,
									"nodeType": "InheritanceSpecifier",
									"src": "538:15:9"
								},
								{
									"baseName": {
										"id": 1375,
										"name": "ERC20Burnable",
										"nameLocations": [
											"555:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "555:13:9"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "555:13:9"
								}
							],
							"canonicalName": "PingPongPlay",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1364,
								"nodeType": "StructuredDocumentation",
								"src": "364:117:9",
								"text": " @title PingPongPlay\n @dev ERC20 Token con funzionalità di staking, vesting e gestione della liquidità."
							},
							"fullyImplemented": true,
							"id": 2110,
							"linearizedBaseContracts": [
								2110,
								988,
								349,
								147,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "PingPongPlay",
							"nameLocation": "491:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1379,
									"libraryName": {
										"id": 1377,
										"name": "SafeMath",
										"nameLocations": [
											"581:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1356,
										"src": "581:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "575:27:9",
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1386,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "632:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "608:61:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "608:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"id": 1385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130305f3030305f303030",
											"id": 1381,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "647:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1384,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1382,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "661:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1383,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "667:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "661:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "647:22:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5f89584e",
									"id": 1393,
									"mutability": "constant",
									"name": "PUBLIC_SALE",
									"nameLocation": "733:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "709:61:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "709:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1390,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1388,
												"name": "TOTAL_SUPPLY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1386,
												"src": "747:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3430",
												"id": 1389,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "762:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_40_by_1",
													"typeString": "int_const 40"
												},
												"value": "40"
											},
											"src": "747:17:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1391,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "767:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "747:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1571ccf6",
									"id": 1400,
									"mutability": "constant",
									"name": "TEAM_FOUNDERS",
									"nameLocation": "800:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "776:63:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "776:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1399,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1397,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1395,
												"name": "TOTAL_SUPPLY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1386,
												"src": "816:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3230",
												"id": 1396,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "831:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_20_by_1",
													"typeString": "int_const 20"
												},
												"value": "20"
											},
											"src": "816:17:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1398,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "836:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "816:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "39cf9b00",
									"id": 1407,
									"mutability": "constant",
									"name": "MARKETING_PARTNERSHIP",
									"nameLocation": "869:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "845:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1401,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "845:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1406,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1404,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1402,
												"name": "TOTAL_SUPPLY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1386,
												"src": "893:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3135",
												"id": 1403,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "908:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											},
											"src": "893:17:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1405,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "913:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "893:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e75c4927",
									"id": 1414,
									"mutability": "constant",
									"name": "PROJECT_DEVELOPMENT",
									"nameLocation": "946:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "922:69:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "922:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1413,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1411,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1409,
												"name": "TOTAL_SUPPLY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1386,
												"src": "968:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3130",
												"id": 1410,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "983:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "968:17:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1412,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "988:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "968:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9d2cc436",
									"id": 1421,
									"mutability": "constant",
									"name": "RESERVE",
									"nameLocation": "1021:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "997:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "997:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1418,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1416,
												"name": "TOTAL_SUPPLY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1386,
												"src": "1031:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3130",
												"id": 1417,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1046:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "1031:17:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1419,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1051:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "1031:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1cfe31c2",
									"id": 1428,
									"mutability": "constant",
									"name": "COMMUNITY_REWARDS",
									"nameLocation": "1084:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1060:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1060:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1425,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1423,
												"name": "TOTAL_SUPPLY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1386,
												"src": "1104:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "35",
												"id": 1424,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1119:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											"src": "1104:16:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1123:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "1104:22:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "254800d4",
									"id": 1430,
									"mutability": "mutable",
									"name": "vestingStart",
									"nameLocation": "1201:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1186:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1429,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1186:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4cfc4d30",
									"id": 1433,
									"mutability": "constant",
									"name": "VESTING_DURATION",
									"nameLocation": "1243:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1219:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1219:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1262:8:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6f0fa8d",
									"id": 1435,
									"mutability": "mutable",
									"name": "teamReleased",
									"nameLocation": "1291:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1276:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1434,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1276:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PingPongPlay.Stake",
									"id": 1442,
									"members": [
										{
											"constant": false,
											"id": 1437,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1373:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1442,
											"src": "1365:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1436,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1365:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1439,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1426:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1442,
											"src": "1418:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1438,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1418:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1441,
											"mutability": "mutable",
											"name": "lastClaimed",
											"nameLocation": "1507:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1442,
											"src": "1499:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1440,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1499:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1349:5:9",
									"nodeType": "StructDefinition",
									"scope": 2110,
									"src": "1342:236:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 1447,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1617:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1584:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
										"typeString": "mapping(address => struct PingPongPlay.Stake)"
									},
									"typeName": {
										"id": 1446,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1443,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1592:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1584:25:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
											"typeString": "mapping(address => struct PingPongPlay.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1445,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1444,
												"name": "Stake",
												"nameLocations": [
													"1603:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1442,
												"src": "1603:5:9"
											},
											"referencedDeclaration": 1442,
											"src": "1603:5:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
												"typeString": "struct PingPongPlay.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "294f5fa3",
									"id": 1450,
									"mutability": "mutable",
									"name": "stakeAddresses",
									"nameLocation": "1646:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1629:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1448,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1629:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1449,
										"nodeType": "ArrayTypeName",
										"src": "1629:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1452,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "1752:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1737:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1737:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "2005:700:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1463,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "2023:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2037:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2023:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e2030",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															},
															"value": "Reward rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2015:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "2015:62:9"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1469,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "2096:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1470,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "2109:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2096:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "2096:24:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1476,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2153:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2145:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1474,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2145:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2145:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1478,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2160:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1473,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2139:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2139:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "2139:34:9"
											},
											{
												"expression": {
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1481,
														"name": "vestingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "2192:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1482,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2207:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2213:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2207:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2192:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "2192:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1489,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2285:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2277:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1487,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2277:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2277:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2292:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2296:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2292:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "PUBLIC_SALE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "2304:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1486,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2267:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "2267:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1499,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2364:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2356:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2356:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2356:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1503,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2379:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2371:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1501,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2371:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2371:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "TEAM_FOUNDERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "2386:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1496,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2346:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2346:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "2346:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1511,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2470:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2462:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2462:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2462:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1513,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2477:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2481:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2477:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "MARKETING_PARTNERSHIP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "2489:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2452:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2452:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "2452:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1521,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2539:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2531:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1519,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2531:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2546:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2550:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2546:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "PROJECT_DEVELOPMENT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "2558:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2521:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "2521:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1531,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2606:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2598:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2598:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2598:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1533,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2613:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2613:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "RESERVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2625:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1528,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2588:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "2588:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1541,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2661:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2653:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1539,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2653:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1543,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2668:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2672:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2668:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "COMMUNITY_REWARDS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "2680:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2643:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2643:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "2643:55:9"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1815:120:9",
										"text": " @dev Costruttore del contratto.\n @param _rewardRate Tasso di ricompensa annuale per lo staking."
									},
									"id": 1549,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50696e67506f6e67506c6179",
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1979:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_921e3d9949beab033a54ebbbf56ba315209904f2ef0fd2572c7baec8528fbc7d",
														"typeString": "literal_string \"PingPongPlay\""
													},
													"value": "PingPongPlay"
												},
												{
													"hexValue": "50494e475050",
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1995:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3c5f3ebda6774994bd68ec5f0fa90f6785464c4d3f2331bfb8d022f2ed5e8071",
														"typeString": "literal_string \"PINGPP\""
													},
													"value": "PINGPP"
												}
											],
											"id": 1460,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1457,
												"name": "ERC20",
												"nameLocations": [
													"1973:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1973:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1973:31:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "1960:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1952:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1951:21:9"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:9"
									},
									"scope": 2110,
									"src": "1940:765:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "2908:107:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1558,
																"name": "_newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "2926:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2937:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2926:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e2030",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2940:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															},
															"value": "Reward rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
																"typeString": "literal_string \"Reward rate must be greater than 0\""
															}
														],
														"id": 1557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2918:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "2918:59:9"
											},
											{
												"expression": {
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1564,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "2987:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1565,
														"name": "_newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "3000:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2987:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "2987:21:9"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "2711:129:9",
										"text": " @dev Aggiorna il tasso di ricompensa per lo staking.\n @param _newRate Nuovo tasso di ricompensa annuale."
									},
									"functionSelector": "9ef3a261",
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1554,
												"name": "onlyOwner",
												"nameLocations": [
													"2898:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2898:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2898:9:9"
										}
									],
									"name": "updateRewardRate",
									"nameLocation": "2854:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "_newRate",
												"nameLocation": "2879:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2871:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:18:9"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2908:0:9"
									},
									"scope": 2110,
									"src": "2845:170:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "3165:485:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1578,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3183:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3189:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3183:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1580,
																"name": "vestingStart",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "3202:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3183:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e67206e6f742073746172746564",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3216:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7",
																"typeString": "literal_string \"Vesting not started\""
															},
															"value": "Vesting not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1d6de90008c7e94b8f93c8b6da24dc243096a5934b6ce29b4473050f7c3cfb7",
																"typeString": "literal_string \"Vesting not started\""
															}
														],
														"id": 1577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3175:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3175:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "3175:63:9"
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "elapsed",
														"nameLocation": "3265:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3257:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3257:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1592,
												"initialValue": {
													"arguments": [
														{
															"id": 1590,
															"name": "vestingStart",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "3295:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1587,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3281:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3275:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3291:3:9",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1235,
														"src": "3275:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3275:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3257:51:9"
											},
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "totalReleasable",
														"nameLocation": "3326:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3318:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3318:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"arguments": [
														{
															"id": 1600,
															"name": "VESTING_DURATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "3375:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1597,
																	"name": "elapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "3362:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1595,
																	"name": "TEAM_FOUNDERS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "3344:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3358:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1250,
																"src": "3344:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3344:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3371:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1265,
														"src": "3344:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3318:74:9"
											},
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "amountToRelease",
														"nameLocation": "3410:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3402:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3402:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"initialValue": {
													"arguments": [
														{
															"id": 1607,
															"name": "teamReleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "3448:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1605,
															"name": "totalReleasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "3428:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3444:3:9",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1235,
														"src": "3428:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3428:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3402:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "amountToRelease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "3480:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3498:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3480:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3501:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															},
															"value": "No tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3472:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3472:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "3472:52:9"
											},
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1617,
														"name": "teamReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "3535:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1620,
																"name": "amountToRelease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "3567:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1618,
																"name": "teamReleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "3550:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3563:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "3550:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3550:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "3535:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1627,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3611:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3603:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1625,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3603:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3603:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1629,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3618:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3618:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1631,
															"name": "amountToRelease",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3627:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1624,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3593:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "3593:50:9"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "3021:78:9",
										"text": " @dev Rilascia i token del team secondo il piano di vesting."
									},
									"functionSelector": "14c411c7",
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1572,
												"name": "nonReentrant",
												"nameLocations": [
													"3142:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3142:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3142:12:9"
										},
										{
											"id": 1575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "onlyOwner",
												"nameLocations": [
													"3155:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3155:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3155:9:9"
										}
									],
									"name": "releaseTeamTokens",
									"nameLocation": "3113:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3130:2:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:0:9"
									},
									"scope": 2110,
									"src": "3104:546:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "3859:741:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1644,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "3877:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3877:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3889:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															},
															"value": "Cannot stake 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															}
														],
														"id": 1643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3869:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3869:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "3869:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1651,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3933:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3937:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3933:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1655,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3953:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3945:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3945:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "3960:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1650,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3923:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "3923:44:9"
											},
											{
												"assignments": [
													1662
												],
												"declarations": [
													{
														"constant": false,
														"id": 1662,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3992:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1727,
														"src": "3978:23:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
															"typeString": "struct PingPongPlay.Stake"
														},
														"typeName": {
															"id": 1661,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1660,
																"name": "Stake",
																"nameLocations": [
																	"3978:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1442,
																"src": "3978:5:9"
															},
															"referencedDeclaration": 1442,
															"src": "3978:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																"typeString": "struct PingPongPlay.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1667,
												"initialValue": {
													"baseExpression": {
														"id": 1663,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "4004:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
															"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
														}
													},
													"id": 1666,
													"indexExpression": {
														"expression": {
															"id": 1664,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4011:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4015:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4011:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4004:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1442_storage",
														"typeString": "struct PingPongPlay.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3978:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1671,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4052:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4056:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4052:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1668,
															"name": "stakeAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4032:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4047:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4032:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "4032:31:9"
											},
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "pendingReward",
														"nameLocation": "4137:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1727,
														"src": "4129:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4129:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1678,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4169:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4173:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4169:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1677,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "4153:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4129:51:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "4194:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4210:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4194:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "4190:160:9",
												"trueBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "4213:137:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1688,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4245:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																					"typeString": "contract PingPongPlay"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																					"typeString": "contract PingPongPlay"
																				}
																			],
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4237:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4237:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4237:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1690,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4252:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4256:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4252:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1692,
																		"name": "pendingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "4264:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1685,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "4227:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4227:51:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "4227:51:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1696,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4313:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4317:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4313:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1698,
																		"name": "pendingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "4325:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1695,
																	"name": "InterestClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "4297:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4297:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1700,
															"nodeType": "EmitStatement",
															"src": "4292:47:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1703,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "4450:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																"typeString": "struct PingPongPlay.Stake storage pointer"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4460:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1437,
														"src": "4450:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1709,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "4490:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1706,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "4469:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																		"typeString": "struct PingPongPlay.Stake storage pointer"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4479:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1437,
																"src": "4469:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4486:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "4469:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4450:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "4450:47:9"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1713,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "4507:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																"typeString": "struct PingPongPlay.Stake storage pointer"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4517:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1439,
														"src": "4507:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1716,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4529:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4535:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4529:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4507:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "4507:37:9"
											},
											{
												"expression": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1720,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "4554:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																"typeString": "struct PingPongPlay.Stake storage pointer"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4564:11:9",
														"memberName": "lastClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "4554:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1723,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4578:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4584:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4578:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4554:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "4554:39:9"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "3656:145:9",
										"text": " @dev Permette agli utenti di mettere in staking i propri token.\n @param amount Quantità di token da mettere in staking."
									},
									"functionSelector": "a694fc3a",
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1640,
												"name": "nonReentrant",
												"nameLocations": [
													"3846:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3846:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3846:12:9"
										}
									],
									"name": "stake",
									"nameLocation": "3815:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3829:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "3821:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:16:9"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3859:0:9"
									},
									"scope": 2110,
									"src": "3806:794:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "4829:1054:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "4847:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4856:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4847:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420756e7374616b65203020746f6b656e73",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4859:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2",
																"typeString": "literal_string \"Cannot unstake 0 tokens\""
															},
															"value": "Cannot unstake 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_414e0daf78ddd4ca670b2d0810ab0df5b991eff714a84af2ffa99f7ebe22d9d2",
																"typeString": "literal_string \"Cannot unstake 0 tokens\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4839:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4839:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "4839:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1744,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "4903:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																			"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																		}
																	},
																	"id": 1747,
																	"indexExpression": {
																		"expression": {
																			"id": 1745,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4910:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4914:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4910:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4903:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1442_storage",
																		"typeString": "struct PingPongPlay.Stake storage ref"
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4922:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1437,
																"src": "4903:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1749,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "4932:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4903:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4940:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															},
															"value": "Insufficient staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															}
														],
														"id": 1743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4895:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4895:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "4895:74:9"
											},
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5032:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "5024:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5057:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5061:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5057:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1756,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "5041:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5041:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5024:44:9"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "5086:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "5078:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5078:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1767,
												"initialValue": {
													"arguments": [
														{
															"id": 1765,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "5111:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "5100:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5107:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "5100:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5100:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5078:40:9"
											},
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1768,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5158:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																	"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																}
															},
															"id": 1771,
															"indexExpression": {
																"expression": {
																	"id": 1769,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5165:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5169:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5165:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5158:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage",
																"typeString": "struct PingPongPlay.Stake storage ref"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5177:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1437,
														"src": "5158:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "5216:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1773,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5186:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																			"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																		}
																	},
																	"id": 1776,
																	"indexExpression": {
																		"expression": {
																			"id": 1774,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5193:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5197:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5193:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5186:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1442_storage",
																		"typeString": "struct PingPongPlay.Stake storage ref"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5205:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1437,
																"src": "5186:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5212:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "5186:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5186:37:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5158:65:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "5158:65:9"
											},
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1783,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5233:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																	"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																}
															},
															"id": 1786,
															"indexExpression": {
																"expression": {
																	"id": 1784,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5240:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5244:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5240:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5233:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage",
																"typeString": "struct PingPongPlay.Stake storage ref"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5252:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1439,
														"src": "5233:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1788,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5264:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5270:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5264:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5233:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "5233:46:9"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1792,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5289:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																	"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																}
															},
															"id": 1795,
															"indexExpression": {
																"expression": {
																	"id": 1793,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5296:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5300:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5296:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5289:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage",
																"typeString": "struct PingPongPlay.Stake storage ref"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5308:11:9",
														"memberName": "lastClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "5289:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1797,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5322:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5328:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5322:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5289:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "5289:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1804,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5410:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																		"typeString": "contract PingPongPlay"
																	}
																],
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5402:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5402:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5402:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1806,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5417:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5421:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5417:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1808,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "5429:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1801,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "5392:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5392:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "5392:49:9"
											},
											{
												"body": {
													"id": 1847,
													"nodeType": "Block",
													"src": "5566:216:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1822,
																		"name": "stakeAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "5584:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1824,
																	"indexExpression": {
																		"id": 1823,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5599:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5584:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1825,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5605:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5609:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5605:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5584:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1846,
															"nodeType": "IfStatement",
															"src": "5580:192:9",
															"trueBody": {
																"id": 1845,
																"nodeType": "Block",
																"src": "5617:155:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1828,
																					"name": "stakeAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "5635:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1830,
																				"indexExpression": {
																					"id": 1829,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1812,
																					"src": "5650:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5635:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1831,
																					"name": "stakeAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "5655:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1836,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1832,
																							"name": "stakeAddresses",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1450,
																							"src": "5670:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1833,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5685:6:9",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "5670:21:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5694:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5670:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5655:41:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5635:61:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1838,
																		"nodeType": "ExpressionStatement",
																		"src": "5635:61:9"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1839,
																					"name": "stakeAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "5714:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5729:3:9",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5714:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5714:20:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1843,
																		"nodeType": "ExpressionStatement",
																		"src": "5714:20:9"
																	},
																	{
																		"id": 1844,
																		"nodeType": "Break",
																		"src": "5752:5:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "5534:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1816,
															"name": "stakeAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "5538:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5553:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5538:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5534:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1848,
												"initializationExpression": {
													"assignments": [
														1812
													],
													"declarations": [
														{
															"constant": false,
															"id": 1812,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5527:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1848,
															"src": "5522:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1811,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5522:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1814,
													"initialValue": {
														"hexValue": "30",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5531:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5522:10:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5561:3:9",
														"subExpression": {
															"id": 1819,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "5561:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1821,
													"nodeType": "ExpressionStatement",
													"src": "5561:3:9"
												},
												"nodeType": "ForStatement",
												"src": "5517:265:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5807:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5811:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5807:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "5819:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1849,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2105,
														"src": "5798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "EmitStatement",
												"src": "5793:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1856,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5857:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5861:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5857:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1858,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "5869:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1855,
														"name": "InterestClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "5841:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5841:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "EmitStatement",
												"src": "5836:40:9"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "4606:163:9",
										"text": " @dev Permette agli utenti di ritirare i propri token in staking e le ricompense accumulate.\n @param amount Quantità di token da ritirare."
									},
									"functionSelector": "2e17de78",
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1733,
												"name": "nonReentrant",
												"nameLocations": [
													"4816:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4816:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4816:12:9"
										}
									],
									"name": "unstake",
									"nameLocation": "4783:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4799:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4791:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4790:16:9"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4829:0:9"
									},
									"scope": 2110,
									"src": "4774:1109:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "6129:311:9",
										"statements": [
											{
												"assignments": [
													1872
												],
												"declarations": [
													{
														"constant": false,
														"id": 1872,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "6152:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "6139:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1442_memory_ptr",
															"typeString": "struct PingPongPlay.Stake"
														},
														"typeName": {
															"id": 1871,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1870,
																"name": "Stake",
																"nameLocations": [
																	"6139:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1442,
																"src": "6139:5:9"
															},
															"referencedDeclaration": 1442,
															"src": "6139:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																"typeString": "struct PingPongPlay.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"baseExpression": {
														"id": 1873,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "6164:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
															"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
														}
													},
													"id": 1875,
													"indexExpression": {
														"id": 1874,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "6171:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6164:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1442_storage",
														"typeString": "struct PingPongPlay.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6139:39:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1877,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "6192:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1442_memory_ptr",
																"typeString": "struct PingPongPlay.Stake memory"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6202:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1437,
														"src": "6192:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6212:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6192:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1883,
												"nodeType": "IfStatement",
												"src": "6188:35:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6222:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1869,
													"id": 1882,
													"nodeType": "Return",
													"src": "6215:8:9"
												}
											},
											{
												"assignments": [
													1885
												],
												"declarations": [
													{
														"constant": false,
														"id": 1885,
														"mutability": "mutable",
														"name": "daysStaked",
														"nameLocation": "6242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "6234:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6234:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1894,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1886,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6256:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6262:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6256:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1888,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "6274:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1442_memory_ptr",
																			"typeString": "struct PingPongPlay.Stake memory"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6284:11:9",
																	"memberName": "lastClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1441,
																	"src": "6274:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6256:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1891,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6255:41:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6299:6:9",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "6255:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6234:71:9"
											},
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "annualReward",
														"nameLocation": "6323:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "6315:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6315:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6375:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1900,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "6359:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1897,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "6338:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1442_memory_ptr",
																			"typeString": "struct PingPongPlay.Stake memory"
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6348:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1437,
																	"src": "6338:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6355:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1250,
																"src": "6338:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6338:32:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6371:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1265,
														"src": "6338:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6338:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6315:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "333635",
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6429:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															},
															"value": "365"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1908,
																	"name": "daysStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "6413:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1906,
																	"name": "annualReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "6396:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6409:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1250,
																"src": "6396:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6396:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6425:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1265,
														"src": "6396:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6396:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1913,
												"nodeType": "Return",
												"src": "6389:44:9"
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "5889:164:9",
										"text": " @dev Calcola la ricompensa accumulata per un indirizzo staker.\n @param staker Indirizzo dello staker.\n @return Ricompensa accumulata."
									},
									"functionSelector": "d82e3962",
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "6067:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "6091:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "6083:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:16:9"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "6120:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6119:9:9"
									},
									"scope": 2110,
									"src": "6058:382:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "6598:691:9",
										"statements": [
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "stakers",
														"nameLocation": "6625:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "6608:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1923,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6608:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1924,
															"nodeType": "ArrayTypeName",
															"src": "6608:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1926,
														"name": "_getAllStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "6635:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function () view returns (address[] memory)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6608:43:9"
											},
											{
												"assignments": [
													1930
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "totalReleased",
														"nameLocation": "6669:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "6661:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6661:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1932,
												"initialValue": {
													"hexValue": "30",
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6685:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6661:25:9"
											},
											{
												"body": {
													"id": 1998,
													"nodeType": "Block",
													"src": "6742:483:9",
													"statements": [
														{
															"assignments": [
																1946
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1946,
																	"mutability": "mutable",
																	"name": "userStake",
																	"nameLocation": "6770:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1998,
																	"src": "6756:23:9",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																		"typeString": "struct PingPongPlay.Stake"
																	},
																	"typeName": {
																		"id": 1945,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1944,
																			"name": "Stake",
																			"nameLocations": [
																				"6756:5:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1442,
																			"src": "6756:5:9"
																		},
																		"referencedDeclaration": 1442,
																		"src": "6756:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																			"typeString": "struct PingPongPlay.Stake"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1952,
															"initialValue": {
																"baseExpression": {
																	"id": 1947,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "6782:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																		"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																	}
																},
																"id": 1951,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1948,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "6789:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1950,
																	"indexExpression": {
																		"id": 1949,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "6797:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6789:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6782:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1442_storage",
																	"typeString": "struct PingPongPlay.Stake storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6756:44:9"
														},
														{
															"assignments": [
																1954
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1954,
																	"mutability": "mutable",
																	"name": "pendingReward",
																	"nameLocation": "6822:13:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1998,
																	"src": "6814:21:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1953,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6814:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1960,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1956,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "6854:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1958,
																		"indexExpression": {
																			"id": 1957,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "6862:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6854:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1955,
																	"name": "calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "6838:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6838:27:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6814:51:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1961,
																	"name": "pendingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "6883:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6899:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6883:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1997,
															"nodeType": "IfStatement",
															"src": "6879:336:9",
															"trueBody": {
																"id": 1996,
																"nodeType": "Block",
																"src": "6902:313:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1967,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "6938:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																								"typeString": "contract PingPongPlay"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_PingPongPlay_$2110",
																								"typeString": "contract PingPongPlay"
																							}
																						],
																						"id": 1966,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6930:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1965,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "6930:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6930:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1969,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1925,
																						"src": "6945:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 1971,
																					"indexExpression": {
																						"id": 1970,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1934,
																						"src": "6953:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6945:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1972,
																					"name": "pendingReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "6957:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1964,
																				"name": "_transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "6920:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6920:51:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1974,
																		"nodeType": "ExpressionStatement",
																		"src": "6920:51:9"
																	},
																	{
																		"expression": {
																			"id": 1980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1975,
																					"name": "userStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1946,
																					"src": "6989:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$1442_storage_ptr",
																						"typeString": "struct PingPongPlay.Stake storage pointer"
																					}
																				},
																				"id": 1977,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6999:11:9",
																				"memberName": "lastClaimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1441,
																				"src": "6989:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1978,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "7013:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7019:9:9",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "7013:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6989:39:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1981,
																		"nodeType": "ExpressionStatement",
																		"src": "6989:39:9"
																	},
																	{
																		"expression": {
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1982,
																				"name": "totalReleased",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1930,
																				"src": "7087:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1985,
																						"name": "pendingReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1954,
																						"src": "7121:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1983,
																						"name": "totalReleased",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1930,
																						"src": "7103:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7117:3:9",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1220,
																					"src": "7103:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7103:32:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7087:48:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1988,
																		"nodeType": "ExpressionStatement",
																		"src": "7087:48:9"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1990,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1925,
																						"src": "7174:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 1992,
																					"indexExpression": {
																						"id": 1991,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1934,
																						"src": "7182:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7174:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1993,
																					"name": "pendingReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "7186:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1989,
																				"name": "InterestClaimed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2099,
																				"src": "7158:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7158:42:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1995,
																		"nodeType": "EmitStatement",
																		"src": "7153:47:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1937,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "6717:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1938,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "6721:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6729:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6717:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1999,
												"initializationExpression": {
													"assignments": [
														1934
													],
													"declarations": [
														{
															"constant": false,
															"id": 1934,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6710:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1999,
															"src": "6702:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6702:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1936,
													"initialValue": {
														"hexValue": "30",
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6714:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6702:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6737:3:9",
														"subExpression": {
															"id": 1941,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "6737:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"nodeType": "ExpressionStatement",
													"src": "6737:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6697:528:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2001,
															"name": "totalReleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "7268:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2000,
														"name": "AllInterestReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "7248:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7248:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "EmitStatement",
												"src": "7243:39:9"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "6446:98:9",
										"text": " @dev Rilascia tutti gli interessi maturati per ogni utente che ha stake attivo."
									},
									"functionSelector": "cb3dbecb",
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1919,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1918,
												"name": "onlyOwner",
												"nameLocations": [
													"6588:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6588:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6588:9:9"
										}
									],
									"name": "releaseAllInterest",
									"nameLocation": "6558:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6576:2:9"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6598:0:9"
									},
									"scope": 2110,
									"src": "6549:740:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "7425:564:9",
										"statements": [
											{
												"assignments": [
													2012
												],
												"declarations": [
													{
														"constant": false,
														"id": 2012,
														"mutability": "mutable",
														"name": "stakerCount",
														"nameLocation": "7443:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "7435:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7435:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2014,
												"initialValue": {
													"hexValue": "30",
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7457:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7435:23:9"
											},
											{
												"body": {
													"id": 2039,
													"nodeType": "Block",
													"src": "7517:136:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2026,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "7535:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																				"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																			}
																		},
																		"id": 2030,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2027,
																				"name": "stakeAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "7542:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2029,
																			"indexExpression": {
																				"id": 2028,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2016,
																				"src": "7557:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7542:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7535:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1442_storage",
																			"typeString": "struct PingPongPlay.Stake storage ref"
																		}
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7561:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1437,
																	"src": "7535:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7570:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7535:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2038,
															"nodeType": "IfStatement",
															"src": "7531:112:9",
															"trueBody": {
																"id": 2037,
																"nodeType": "Block",
																"src": "7573:70:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7615:13:9",
																			"subExpression": {
																				"id": 2034,
																				"name": "stakerCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2012,
																				"src": "7615:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2036,
																		"nodeType": "ExpressionStatement",
																		"src": "7615:13:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2019,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "7485:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2020,
															"name": "stakeAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "7489:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7504:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7489:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7485:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2040,
												"initializationExpression": {
													"assignments": [
														2016
													],
													"declarations": [
														{
															"constant": false,
															"id": 2016,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7478:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2040,
															"src": "7473:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2015,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7473:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2018,
													"initialValue": {
														"hexValue": "30",
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7482:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7473:10:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7512:3:9",
														"subExpression": {
															"id": 2023,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "7512:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2025,
													"nodeType": "ExpressionStatement",
													"src": "7512:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7468:185:9"
											},
											{
												"assignments": [
													2045
												],
												"declarations": [
													{
														"constant": false,
														"id": 2045,
														"mutability": "mutable",
														"name": "stakers",
														"nameLocation": "7679:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "7662:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7662:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2044,
															"nodeType": "ArrayTypeName",
															"src": "7662:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2051,
												"initialValue": {
													"arguments": [
														{
															"id": 2049,
															"name": "stakerCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "7703:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7689:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7693:7:9",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2047,
															"nodeType": "ArrayTypeName",
															"src": "7693:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7689:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7662:53:9"
											},
											{
												"assignments": [
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "7733:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "7725:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7725:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2055,
												"initialValue": {
													"hexValue": "30",
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7741:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7725:17:9"
											},
											{
												"body": {
													"id": 2088,
													"nodeType": "Block",
													"src": "7801:158:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2067,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "7819:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1442_storage_$",
																				"typeString": "mapping(address => struct PingPongPlay.Stake storage ref)"
																			}
																		},
																		"id": 2071,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2068,
																				"name": "stakeAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "7826:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2070,
																			"indexExpression": {
																				"id": 2069,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "7841:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7826:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7819:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1442_storage",
																			"typeString": "struct PingPongPlay.Stake storage ref"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7845:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1437,
																	"src": "7819:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7854:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7819:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2087,
															"nodeType": "IfStatement",
															"src": "7815:134:9",
															"trueBody": {
																"id": 2086,
																"nodeType": "Block",
																"src": "7857:92:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2075,
																					"name": "stakers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2045,
																					"src": "7875:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2077,
																				"indexExpression": {
																					"id": 2076,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "7883:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7875:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2078,
																					"name": "stakeAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7892:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2080,
																				"indexExpression": {
																					"id": 2079,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2057,
																					"src": "7907:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7892:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7875:34:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2082,
																		"nodeType": "ExpressionStatement",
																		"src": "7875:34:9"
																	},
																	{
																		"expression": {
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7927:7:9",
																			"subExpression": {
																				"id": 2083,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "7927:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2085,
																		"nodeType": "ExpressionStatement",
																		"src": "7927:7:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2060,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2057,
														"src": "7769:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2061,
															"name": "stakeAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "7773:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7788:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7773:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7769:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2089,
												"initializationExpression": {
													"assignments": [
														2057
													],
													"declarations": [
														{
															"constant": false,
															"id": 2057,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7762:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2089,
															"src": "7757:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2056,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7757:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2059,
													"initialValue": {
														"hexValue": "30",
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7766:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7757:10:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7796:3:9",
														"subExpression": {
															"id": 2064,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "7796:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2066,
													"nodeType": "ExpressionStatement",
													"src": "7796:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7752:207:9"
											},
											{
												"expression": {
													"id": 2090,
													"name": "stakers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2045,
													"src": "7975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2091,
												"nodeType": "Return",
												"src": "7968:14:9"
											}
										]
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAllStakers",
									"nameLocation": "7367:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7381:2:9"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "7407:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2007,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7407:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2008,
													"nodeType": "ArrayTypeName",
													"src": "7407:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7406:18:9"
									},
									"scope": 2110,
									"src": "7358:631:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "f9984c8173c4b4ff9cc454f76ed19c053f4490ccb224fd9ddffeb4ef4bea3530",
									"id": 2099,
									"name": "InterestClaimed",
									"nameLocation": "8063:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8095:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "8079:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8079:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8109:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "8101:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8078:38:9"
									},
									"src": "8057:60:9"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 2105,
									"name": "Unstaked",
									"nameLocation": "8128:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8153:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "8137:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8167:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "8159:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8159:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8136:38:9"
									},
									"src": "8122:53:9"
								},
								{
									"anonymous": false,
									"eventSelector": "6a51b76326892cba00f44f8bc83414a1c2e4715f4bc1ebcac12326172ed53f18",
									"id": 2109,
									"name": "AllInterestReleased",
									"nameLocation": "8186:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "8214:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "8206:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8205:21:9"
									},
									"src": "8180:47:9"
								}
							],
							"scope": 2111,
							"src": "482:7747:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								2099,
								2105,
								2109
							]
						}
					],
					"src": "32:8198:9"
				},
				"id": 9
			}
		}
	}
}