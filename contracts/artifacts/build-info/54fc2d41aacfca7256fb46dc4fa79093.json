{
	"id": "54fc2d41aacfca7256fb46dc4fa79093",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PingPongPlay_flattened.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/PingPongPlay.sol\n\n\n\npragma solidity ^0.8.28;\n\n\n\ncontract PINGPONGPLAY is ERC20, Ownable(address(this)) {\n    bool public limited;\n    uint256 public maxHoldingAmount;\n    uint256 public minHoldingAmount;\n    address public uniswapV2Pair;\n    mapping(address => bool) public blacklists;\n\n    constructor(uint256 _totalSupply) ERC20(\"PingPongPlay\", \"PINGPP\") {\n        _mint(msg.sender, _totalSupply);\n    }\n\n    function blacklist(address _address, bool _isBlacklisting) external onlyOwner {\n        blacklists[_address] = _isBlacklisting;\n    }\n\n    function setRule(bool _limited, address _uniswapV2Pair, uint256 _maxHoldingAmount, uint256 _minHoldingAmount) external onlyOwner {\n        limited = _limited;\n        uniswapV2Pair = _uniswapV2Pair;\n        maxHoldingAmount = _maxHoldingAmount;\n        minHoldingAmount = _minHoldingAmount;\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(!blacklists[to] && !blacklists[from], \"Blacklisted\");\n\n        if (uniswapV2Pair == address(0)) {\n            require(from == owner() || to == owner(), \"trading is not started\");\n            return;\n        }\n\n        if (limited && from == uniswapV2Pair) {\n            require(super.balanceOf(to) + amount <= maxHoldingAmount && super.balanceOf(to) + amount >= minHoldingAmount, \"Forbid\");\n        }\n    }\n\n    function burn(uint256 value) external {\n        _burn(msg.sender, value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/PingPongPlay_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/PingPongPlay_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/PingPongPlay_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/PingPongPlay_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/PingPongPlay_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/PingPongPlay_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "contracts/PingPongPlay_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PINGPONGPLAY": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBlacklisting",
									"type": "bool"
								}
							],
							"name": "blacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "limited",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxHoldingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minHoldingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_limited",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_uniswapV2Pair",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_maxHoldingAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minHoldingAmount",
									"type": "uint256"
								}
							],
							"name": "setRule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PingPongPlay_flattened.sol\":24942:26376  contract PINGPONGPLAY is ERC20, Ownable(address(this)) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PingPongPlay_flattened.sol\":25185:25299  constructor(uint256 _totalSupply) ERC20(\"PingPongPlay\", \"PINGPP\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PingPongPlay_flattened.sol\":24990:24994  this */\n  address\n    /* \"contracts/PingPongPlay_flattened.sol\":12502:12615  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x50696e67506f6e67506c61790000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x50494e4750500000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":12576:12581  name_ */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":12568:12573  _name */\n  0x03\n    /* \"contracts/PingPongPlay_flattened.sol\":12568:12581  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":12601:12608  symbol_ */\n  dup1\n    /* \"contracts/PingPongPlay_flattened.sol\":12591:12598  _symbol */\n  0x04\n    /* \"contracts/PingPongPlay_flattened.sol\":12591:12608  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":12502:12615  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":23069:23070  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":23045:23071  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":23045:23057  initialOwner */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":23045:23071  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PingPongPlay_flattened.sol\":23041:23136  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/PingPongPlay_flattened.sol\":23122:23123  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":23094:23125  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/PingPongPlay_flattened.sol\":23041:23136  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/PingPongPlay_flattened.sol\":23145:23177  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/PingPongPlay_flattened.sol\":23164:23176  initialOwner */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":23145:23163  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/PingPongPlay_flattened.sol\":23145:23177  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/PingPongPlay_flattened.sol\":22997:23184  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":25261:25292  _mint(msg.sender, _totalSupply) */\n  tag_18\n    /* \"contracts/PingPongPlay_flattened.sol\":25267:25277  msg.sender */\n  caller\n    /* \"contracts/PingPongPlay_flattened.sol\":25279:25291  _totalSupply */\n  dup3\n    /* \"contracts/PingPongPlay_flattened.sol\":25261:25266  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/PingPongPlay_flattened.sol\":25261:25292  _mint(msg.sender, _totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/PingPongPlay_flattened.sol\":25185:25299  constructor(uint256 _totalSupply) ERC20(\"PingPongPlay\", \"PINGPP\") {... */\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":24942:26376  contract PINGPONGPLAY is ERC20, Ownable(address(this)) {... */\n  jump(tag_20)\n    /* \"contracts/PingPongPlay_flattened.sol\":24684:24871  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/PingPongPlay_flattened.sol\":24757:24773  address oldOwner */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":24776:24782  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":24757:24782  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":24801:24809  newOwner */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":24792:24798  _owner */\n  0x05\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":24792:24809  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":24855:24863  newOwner */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":24824:24864  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":24845:24853  oldOwner */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":24824:24864  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/PingPongPlay_flattened.sol\":24747:24871  {... */\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":24684:24871  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/PingPongPlay_flattened.sol\":18359:18567  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"contracts/PingPongPlay_flattened.sol\":18448:18449  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":18429:18450  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":18429:18436  account */\n  dup3\n    /* \"contracts/PingPongPlay_flattened.sol\":18429:18450  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PingPongPlay_flattened.sol\":18425:18516  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"contracts/PingPongPlay_flattened.sol\":18502:18503  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":18473:18505  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/PingPongPlay_flattened.sol\":18425:18516  if (account == address(0)) {... */\ntag_23:\n    /* \"contracts/PingPongPlay_flattened.sol\":18525:18560  _update(address(0), account, value) */\n  tag_25\n    /* \"contracts/PingPongPlay_flattened.sol\":18541:18542  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":18545:18552  account */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":18554:18559  value */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":18525:18532  _update */\n  shl(0x20, tag_26)\n    /* \"contracts/PingPongPlay_flattened.sol\":18525:18560  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/PingPongPlay_flattened.sol\":18359:18567  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PingPongPlay_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"contracts/PingPongPlay_flattened.sol\":17014:17015  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":16998:17016  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":16998:17002  from */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":16998:17016  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PingPongPlay_flattened.sol\":16994:17534  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"contracts/PingPongPlay_flattened.sol\":17150:17155  value */\n  dup1\n    /* \"contracts/PingPongPlay_flattened.sol\":17134:17146  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17134:17155  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":16994:17534  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"contracts/PingPongPlay_flattened.sol\":17186:17205  uint256 fromBalance */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17208:17217  _balances */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17208:17223  _balances[from] */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17218:17222  from */\n  dup6\n    /* \"contracts/PingPongPlay_flattened.sol\":17208:17223  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/PingPongPlay_flattened.sol\":17186:17223  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":17255:17260  value */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":17241:17252  fromBalance */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":17241:17260  fromBalance < value */\n  lt\n    /* \"contracts/PingPongPlay_flattened.sol\":17237:17352  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"contracts/PingPongPlay_flattened.sol\":17312:17316  from */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":17318:17329  fromBalance */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":17331:17336  value */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/PingPongPlay_flattened.sol\":17237:17352  if (fromBalance < value) {... */\ntag_32:\n    /* \"contracts/PingPongPlay_flattened.sol\":17504:17509  value */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":17490:17501  fromBalance */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":17490:17509  fromBalance - value */\n  sub\n    /* \"contracts/PingPongPlay_flattened.sol\":17472:17481  _balances */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17472:17487  _balances[from] */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17482:17486  from */\n  dup7\n    /* \"contracts/PingPongPlay_flattened.sol\":17472:17487  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/PingPongPlay_flattened.sol\":17472:17509  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":17172:17534  {... */\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":16994:17534  if (from == address(0)) {... */\ntag_31:\n    /* \"contracts/PingPongPlay_flattened.sol\":17562:17563  0 */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17548:17564  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":17548:17550  to */\n  dup3\n    /* \"contracts/PingPongPlay_flattened.sol\":17548:17564  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PingPongPlay_flattened.sol\":17544:17969  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"contracts/PingPongPlay_flattened.sol\":17727:17732  value */\n  dup1\n    /* \"contracts/PingPongPlay_flattened.sol\":17711:17723  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17711:17732  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":17544:17969  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"contracts/PingPongPlay_flattened.sol\":17939:17944  value */\n  dup1\n    /* \"contracts/PingPongPlay_flattened.sol\":17922:17931  _balances */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17922:17935  _balances[to] */\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17932:17934  to */\n  dup5\n    /* \"contracts/PingPongPlay_flattened.sol\":17922:17935  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/PingPongPlay_flattened.sol\":17922:17944  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PingPongPlay_flattened.sol\":17544:17969  if (to == address(0)) {... */\ntag_36:\n    /* \"contracts/PingPongPlay_flattened.sol\":17999:18001  to */\n  dup2\n    /* \"contracts/PingPongPlay_flattened.sol\":17984:18009  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PingPongPlay_flattened.sol\":17993:17997  from */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":17984:18009  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/PingPongPlay_flattened.sol\":18003:18008  value */\n  dup4\n    /* \"contracts/PingPongPlay_flattened.sol\":17984:18009  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/PingPongPlay_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_75\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_76:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_78\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_81\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":781:900   */\ntag_80:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_82\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_44\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_45:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_46:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_47:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_87:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_89\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1758:1842   */\ntag_88:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_49:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_50:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_51:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_52:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_94\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_51\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2473:2512   */\n  tag_95\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_51\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_53:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_54:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_98\n    /* \"#utility.yul\":2779:2813   */\n  tag_99\n    /* \"#utility.yul\":2788:2812   */\n  tag_100\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_42\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2779:2813   */\n  tag_53\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2761:2814   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_55:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_56:\n    /* \"#utility.yul\":3017:3056   */\n  tag_103\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3078:3169   */\n  tag_104\n    /* \"#utility.yul\":3127:3168   */\n  tag_105\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_55\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_52\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_57:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_58:\n    /* \"#utility.yul\":3338:3370   */\n  tag_108\n  tag_57\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3379:3444   */\n  tag_109\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_59:\n    /* \"#utility.yul\":3516:3636   */\ntag_111:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_114\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_60:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_117\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_49\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3867:3896   */\n  tag_118\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_50\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_119:\n    /* \"#utility.yul\":4094:4174   */\n  tag_120\n    /* \"#utility.yul\":4150:4172   */\n  tag_121\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_50\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_59\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_116:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_61:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_62:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_124\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_63:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_126\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_9:\n    /* \"#utility.yul\":4911:4948   */\n  tag_128\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_45\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_130\n  tag_46\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4999:5055   */\ntag_129:\n    /* \"#utility.yul\":5079:5117   */\n  tag_131\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_48\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5164:5231   */\n  tag_132\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_60\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_135:\n    /* \"#utility.yul\":6105:6172   */\n  tag_136\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_63\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_133)\n    /* \"#utility.yul\":5326:5944   */\ntag_134:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_137\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_138:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_142\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_141:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_133:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_64:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_65:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_145\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_64\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_66:\n    /* \"#utility.yul\":6516:6540   */\n  tag_147\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_65\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_149\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_66\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_67:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_30:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_152\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_42\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_153\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_42\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_155\n  tag_67\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7115:7151   */\ntag_154:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_68:\n    /* \"#utility.yul\":7251:7275   */\n  tag_157\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_42\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_34:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_159\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_66\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7569:7641   */\n  tag_160\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_68\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7651:7723   */\n  tag_161\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_68\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_38:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_163\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_68\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PingPongPlay_flattened.sol\":24942:26376  contract PINGPONGPLAY is ERC20, Ownable(address(this)) {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PingPongPlay_flattened.sol\":24942:26376  contract PINGPONGPLAY is ERC20, Ownable(address(this)) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x49bd5a5e\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x49bd5a5e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x860a32ec\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x89f9a1d3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3aa633aa\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x404e5129\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16c02129\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1ab99e12\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/PingPongPlay_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":25136:25178  mapping(address => bool) public blacklists */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":25065:25096  uint256 public minHoldingAmount */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":15677:15921  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":25444:25740  function setRule(bool _limited, address _uniswapV2Pair, uint256 _maxHoldingAmount, uint256 _minHoldingAmount) external onlyOwner {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/PingPongPlay_flattened.sol\":25305:25438  function blacklist(address _address, bool _isBlacklisting) external onlyOwner {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/PingPongPlay_flattened.sol\":26295:26374  function burn(uint256 value) external {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/PingPongPlay_flattened.sol\":25102:25130  address public uniswapV2Pair */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":24065:24166  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/PingPongPlay_flattened.sol\":25003:25022  bool public limited */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":25028:25059  uint256 public maxHoldingAmount */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":23410:23495  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":14216:14394  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":14452:14592  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PingPongPlay_flattened.sol\":24315:24530  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/PingPongPlay_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"contracts/PingPongPlay_flattened.sol\":12725:12738  string memory */\n      0x60\n        /* \"contracts/PingPongPlay_flattened.sol\":12757:12762  _name */\n      0x03\n        /* \"contracts/PingPongPlay_flattened.sol\":12750:12762  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/PingPongPlay_flattened.sol\":14972:14976  bool */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14988:15001  address owner */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":15004:15016  _msgSender() */\n      tag_111\n        /* \"contracts/PingPongPlay_flattened.sol\":15004:15014  _msgSender */\n      tag_112\n        /* \"contracts/PingPongPlay_flattened.sol\":15004:15016  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/PingPongPlay_flattened.sol\":14988:15016  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":15026:15057  _approve(owner, spender, value) */\n      tag_113\n        /* \"contracts/PingPongPlay_flattened.sol\":15035:15040  owner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":15042:15049  spender */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15051:15056  value */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15026:15034  _approve */\n      tag_114\n        /* \"contracts/PingPongPlay_flattened.sol\":15026:15057  _approve(owner, spender, value) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/PingPongPlay_flattened.sol\":15074:15078  true */\n      0x01\n        /* \"contracts/PingPongPlay_flattened.sol\":15067:15078  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25136:25178  mapping(address => bool) public blacklists */\n    tag_39:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"contracts/PingPongPlay_flattened.sol\":13802:13809  uint256 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":13828:13840  _totalSupply */\n      sload(0x02)\n        /* \"contracts/PingPongPlay_flattened.sol\":13821:13840  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25065:25096  uint256 public minHoldingAmount */\n    tag_46:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":15677:15921  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"contracts/PingPongPlay_flattened.sol\":15764:15768  bool */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":15780:15795  address spender */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":15798:15810  _msgSender() */\n      tag_117\n        /* \"contracts/PingPongPlay_flattened.sol\":15798:15808  _msgSender */\n      tag_112\n        /* \"contracts/PingPongPlay_flattened.sol\":15798:15810  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/PingPongPlay_flattened.sol\":15780:15810  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":15820:15857  _spendAllowance(from, spender, value) */\n      tag_118\n        /* \"contracts/PingPongPlay_flattened.sol\":15836:15840  from */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15842:15849  spender */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":15851:15856  value */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15820:15835  _spendAllowance */\n      tag_119\n        /* \"contracts/PingPongPlay_flattened.sol\":15820:15857  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/PingPongPlay_flattened.sol\":15867:15893  _transfer(from, to, value) */\n      tag_120\n        /* \"contracts/PingPongPlay_flattened.sol\":15877:15881  from */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15883:15885  to */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15887:15892  value */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":15867:15876  _transfer */\n      tag_121\n        /* \"contracts/PingPongPlay_flattened.sol\":15867:15893  _transfer(from, to, value) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/PingPongPlay_flattened.sol\":15910:15914  true */\n      0x01\n        /* \"contracts/PingPongPlay_flattened.sol\":15903:15914  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":15677:15921  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n    tag_54:\n        /* \"contracts/PingPongPlay_flattened.sol\":13657:13662  uint8 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":13681:13683  18 */\n      0x12\n        /* \"contracts/PingPongPlay_flattened.sol\":13674:13683  return 18 */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25444:25740  function setRule(bool _limited, address _uniswapV2Pair, uint256 _maxHoldingAmount, uint256 _minHoldingAmount) external onlyOwner {... */\n    tag_60:\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      tag_124\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23314  _checkOwner */\n      tag_125\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/PingPongPlay_flattened.sol\":25593:25601  _limited */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":25583:25590  limited */\n      0x05\n      0x14\n        /* \"contracts/PingPongPlay_flattened.sol\":25583:25601  limited = _limited */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":25627:25641  _uniswapV2Pair */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":25611:25624  uniswapV2Pair */\n      0x08\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":25611:25641  uniswapV2Pair = _uniswapV2Pair */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":25670:25687  _maxHoldingAmount */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":25651:25667  maxHoldingAmount */\n      0x06\n        /* \"contracts/PingPongPlay_flattened.sol\":25651:25687  maxHoldingAmount = _maxHoldingAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":25716:25733  _minHoldingAmount */\n      dup1\n        /* \"contracts/PingPongPlay_flattened.sol\":25697:25713  minHoldingAmount */\n      0x07\n        /* \"contracts/PingPongPlay_flattened.sol\":25697:25733  minHoldingAmount = _minHoldingAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":25444:25740  function setRule(bool _limited, address _uniswapV2Pair, uint256 _maxHoldingAmount, uint256 _minHoldingAmount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25305:25438  function blacklist(address _address, bool _isBlacklisting) external onlyOwner {... */\n    tag_64:\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      tag_128\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23314  _checkOwner */\n      tag_125\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/PingPongPlay_flattened.sol\":25416:25431  _isBlacklisting */\n      dup1\n        /* \"contracts/PingPongPlay_flattened.sol\":25393:25403  blacklists */\n      0x09\n        /* \"contracts/PingPongPlay_flattened.sol\":25393:25413  blacklists[_address] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":25404:25412  _address */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":25393:25413  blacklists[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":25393:25431  blacklists[_address] = _isBlacklisting */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":25305:25438  function blacklist(address _address, bool _isBlacklisting) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":26295:26374  function burn(uint256 value) external {... */\n    tag_68:\n        /* \"contracts/PingPongPlay_flattened.sol\":26343:26367  _burn(msg.sender, value) */\n      tag_131\n        /* \"contracts/PingPongPlay_flattened.sol\":26349:26359  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay_flattened.sol\":26361:26366  value */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":26343:26348  _burn */\n      tag_132\n        /* \"contracts/PingPongPlay_flattened.sol\":26343:26367  _burn(msg.sender, value) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/PingPongPlay_flattened.sol\":26295:26374  function burn(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25102:25130  address public uniswapV2Pair */\n    tag_70:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"contracts/PingPongPlay_flattened.sol\":13970:13977  uint256 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":13996:14005  _balances */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":13996:14014  _balances[account] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14006:14013  account */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":13996:14014  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PingPongPlay_flattened.sol\":13989:14014  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":24065:24166  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      tag_135\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23314  _checkOwner */\n      tag_125\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/PingPongPlay_flattened.sol\":24129:24159  _transferOwnership(address(0)) */\n      tag_137\n        /* \"contracts/PingPongPlay_flattened.sol\":24156:24157  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":24129:24147  _transferOwnership */\n      tag_138\n        /* \"contracts/PingPongPlay_flattened.sol\":24129:24159  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/PingPongPlay_flattened.sol\":24065:24166  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25003:25022  bool public limited */\n    tag_80:\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":25028:25059  uint256 public maxHoldingAmount */\n    tag_83:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":23410:23495  function owner() public view virtual returns (address) {... */\n    tag_86:\n        /* \"contracts/PingPongPlay_flattened.sol\":23456:23463  address */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":23482:23488  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":23475:23488  return _owner */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":23410:23495  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n    tag_89:\n        /* \"contracts/PingPongPlay_flattened.sol\":12929:12942  string memory */\n      0x60\n        /* \"contracts/PingPongPlay_flattened.sol\":12961:12968  _symbol */\n      0x04\n        /* \"contracts/PingPongPlay_flattened.sol\":12954:12968  return _symbol */\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_105\n      jump\t// in\n    tag_141:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_105\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":14216:14394  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_93:\n        /* \"contracts/PingPongPlay_flattened.sol\":14285:14289  bool */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14301:14314  address owner */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14317:14329  _msgSender() */\n      tag_147\n        /* \"contracts/PingPongPlay_flattened.sol\":14317:14327  _msgSender */\n      tag_112\n        /* \"contracts/PingPongPlay_flattened.sol\":14317:14329  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/PingPongPlay_flattened.sol\":14301:14329  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":14339:14366  _transfer(owner, to, value) */\n      tag_148\n        /* \"contracts/PingPongPlay_flattened.sol\":14349:14354  owner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":14356:14358  to */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":14360:14365  value */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":14339:14348  _transfer */\n      tag_121\n        /* \"contracts/PingPongPlay_flattened.sol\":14339:14366  _transfer(owner, to, value) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/PingPongPlay_flattened.sol\":14383:14387  true */\n      0x01\n        /* \"contracts/PingPongPlay_flattened.sol\":14376:14387  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":14216:14394  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":14452:14592  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_98:\n        /* \"contracts/PingPongPlay_flattened.sol\":14532:14539  uint256 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14558:14569  _allowances */\n      0x01\n        /* \"contracts/PingPongPlay_flattened.sol\":14558:14576  _allowances[owner] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14570:14575  owner */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":14558:14576  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay_flattened.sol\":14558:14585  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":14577:14584  spender */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":14558:14585  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PingPongPlay_flattened.sol\":14551:14585  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":14452:14592  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":24315:24530  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      tag_151\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23314  _checkOwner */\n      tag_125\n        /* \"contracts/PingPongPlay_flattened.sol\":23303:23316  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/PingPongPlay_flattened.sol\":24419:24420  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":24399:24421  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":24399:24407  newOwner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":24399:24421  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":24395:24486  if (newOwner == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":24472:24473  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":24444:24475  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":24395:24486  if (newOwner == address(0)) {... */\n    tag_153:\n        /* \"contracts/PingPongPlay_flattened.sol\":24495:24523  _transferOwnership(newOwner) */\n      tag_155\n        /* \"contracts/PingPongPlay_flattened.sol\":24514:24522  newOwner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":24495:24513  _transferOwnership */\n      tag_138\n        /* \"contracts/PingPongPlay_flattened.sol\":24495:24523  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/PingPongPlay_flattened.sol\":24315:24530  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":4209:4305  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"contracts/PingPongPlay_flattened.sol\":4262:4269  address */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/PingPongPlay_flattened.sol\":4281:4298  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":4209:4305  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":19627:19755  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_114:\n        /* \"contracts/PingPongPlay_flattened.sol\":19711:19748  _approve(owner, spender, value, true) */\n      tag_158\n        /* \"contracts/PingPongPlay_flattened.sol\":19720:19725  owner */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":19727:19734  spender */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":19736:19741  value */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":19743:19747  true */\n      0x01\n        /* \"contracts/PingPongPlay_flattened.sol\":19711:19719  _approve */\n      tag_159\n        /* \"contracts/PingPongPlay_flattened.sol\":19711:19748  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/PingPongPlay_flattened.sol\":19627:19755  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":21316:21792  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_119:\n        /* \"contracts/PingPongPlay_flattened.sol\":21415:21439  uint256 currentAllowance */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":21442:21467  allowance(owner, spender) */\n      tag_161\n        /* \"contracts/PingPongPlay_flattened.sol\":21452:21457  owner */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":21459:21466  spender */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":21442:21451  allowance */\n      tag_98\n        /* \"contracts/PingPongPlay_flattened.sol\":21442:21467  allowance(owner, spender) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/PingPongPlay_flattened.sol\":21415:21467  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":21500:21517  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/PingPongPlay_flattened.sol\":21481:21497  currentAllowance */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":21481:21517  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/PingPongPlay_flattened.sol\":21477:21786  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":21556:21561  value */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":21537:21553  currentAllowance */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":21537:21561  currentAllowance < value */\n      lt\n        /* \"contracts/PingPongPlay_flattened.sol\":21533:21663  if (currentAllowance < value) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":21615:21622  spender */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":21624:21640  currentAllowance */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":21642:21647  value */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":21588:21648  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":21533:21663  if (currentAllowance < value) {... */\n    tag_163:\n        /* \"contracts/PingPongPlay_flattened.sol\":21704:21761  _approve(owner, spender, currentAllowance - value, false) */\n      tag_166\n        /* \"contracts/PingPongPlay_flattened.sol\":21713:21718  owner */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":21720:21727  spender */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":21748:21753  value */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":21729:21745  currentAllowance */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":21729:21753  currentAllowance - value */\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":21755:21760  false */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":21704:21712  _approve */\n      tag_159\n        /* \"contracts/PingPongPlay_flattened.sol\":21704:21761  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/PingPongPlay_flattened.sol\":21477:21786  if (currentAllowance < type(uint256).max) {... */\n    tag_162:\n        /* \"contracts/PingPongPlay_flattened.sol\":21405:21792  {... */\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":21316:21792  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":16294:16594  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_121:\n        /* \"contracts/PingPongPlay_flattened.sol\":16393:16394  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":16377:16395  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":16377:16381  from */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":16377:16395  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":16373:16459  if (from == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":16445:16446  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":16418:16448  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":16373:16459  if (from == address(0)) {... */\n    tag_168:\n        /* \"contracts/PingPongPlay_flattened.sol\":16486:16487  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":16472:16488  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":16472:16474  to */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":16472:16488  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":16468:16554  if (to == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":16540:16541  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":16511:16543  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":16468:16554  if (to == address(0)) {... */\n    tag_170:\n        /* \"contracts/PingPongPlay_flattened.sol\":16563:16587  _update(from, to, value) */\n      tag_172\n        /* \"contracts/PingPongPlay_flattened.sol\":16571:16575  from */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":16577:16579  to */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":16581:16586  value */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":16563:16570  _update */\n      tag_173\n        /* \"contracts/PingPongPlay_flattened.sol\":16563:16587  _update(from, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/PingPongPlay_flattened.sol\":16294:16594  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":23568:23730  function _checkOwner() internal view virtual {... */\n    tag_125:\n        /* \"contracts/PingPongPlay_flattened.sol\":23638:23650  _msgSender() */\n      tag_175\n        /* \"contracts/PingPongPlay_flattened.sol\":23638:23648  _msgSender */\n      tag_112\n        /* \"contracts/PingPongPlay_flattened.sol\":23638:23650  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/PingPongPlay_flattened.sol\":23627:23650  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":23627:23634  owner() */\n      tag_176\n        /* \"contracts/PingPongPlay_flattened.sol\":23627:23632  owner */\n      tag_86\n        /* \"contracts/PingPongPlay_flattened.sol\":23627:23634  owner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/PingPongPlay_flattened.sol\":23627:23650  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PingPongPlay_flattened.sol\":23623:23724  if (owner() != _msgSender()) {... */\n      tag_177\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":23700:23712  _msgSender() */\n      tag_178\n        /* \"contracts/PingPongPlay_flattened.sol\":23700:23710  _msgSender */\n      tag_112\n        /* \"contracts/PingPongPlay_flattened.sol\":23700:23712  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/PingPongPlay_flattened.sol\":23673:23713  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":23623:23724  if (owner() != _msgSender()) {... */\n    tag_177:\n        /* \"contracts/PingPongPlay_flattened.sol\":23568:23730  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":18885:19091  function _burn(address account, uint256 value) internal {... */\n    tag_132:\n        /* \"contracts/PingPongPlay_flattened.sol\":18974:18975  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":18955:18976  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":18955:18962  account */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":18955:18976  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":18951:19040  if (account == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":19026:19027  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":18999:19029  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":18951:19040  if (account == address(0)) {... */\n    tag_181:\n        /* \"contracts/PingPongPlay_flattened.sol\":19049:19084  _update(account, address(0), value) */\n      tag_183\n        /* \"contracts/PingPongPlay_flattened.sol\":19057:19064  account */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":19074:19075  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":19078:19083  value */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":19049:19056  _update */\n      tag_173\n        /* \"contracts/PingPongPlay_flattened.sol\":19049:19084  _update(account, address(0), value) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/PingPongPlay_flattened.sol\":18885:19091  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":24684:24871  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_138:\n        /* \"contracts/PingPongPlay_flattened.sol\":24757:24773  address oldOwner */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":24776:24782  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":24757:24782  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":24801:24809  newOwner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":24792:24798  _owner */\n      0x05\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":24792:24809  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":24855:24863  newOwner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":24824:24864  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":24845:24853  oldOwner */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":24824:24864  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PingPongPlay_flattened.sol\":24747:24871  {... */\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":24684:24871  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":20602:21034  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_159:\n        /* \"contracts/PingPongPlay_flattened.sol\":20731:20732  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":20714:20733  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":20714:20719  owner */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":20714:20733  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":20710:20799  if (owner == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":20785:20786  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":20756:20788  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":20710:20799  if (owner == address(0)) {... */\n    tag_186:\n        /* \"contracts/PingPongPlay_flattened.sol\":20831:20832  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":20812:20833  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":20812:20819  spender */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":20812:20833  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":20808:20898  if (spender == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":20884:20885  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":20856:20887  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":20808:20898  if (spender == address(0)) {... */\n    tag_188:\n        /* \"contracts/PingPongPlay_flattened.sol\":20937:20942  value */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":20907:20918  _allowances */\n      0x01\n        /* \"contracts/PingPongPlay_flattened.sol\":20907:20925  _allowances[owner] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":20919:20924  owner */\n      dup7\n        /* \"contracts/PingPongPlay_flattened.sol\":20907:20925  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay_flattened.sol\":20907:20934  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":20926:20933  spender */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":20907:20934  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay_flattened.sol\":20907:20942  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":20956:20965  emitEvent */\n      dup1\n        /* \"contracts/PingPongPlay_flattened.sol\":20952:21028  if (emitEvent) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":21002:21009  spender */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":20995:21000  owner */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/PingPongPlay_flattened.sol\":21011:21016  value */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PingPongPlay_flattened.sol\":20952:21028  if (emitEvent) {... */\n    tag_190:\n        /* \"contracts/PingPongPlay_flattened.sol\":20602:21034  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PingPongPlay_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_173:\n        /* \"contracts/PingPongPlay_flattened.sol\":17014:17015  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":16998:17016  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":16998:17002  from */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":16998:17016  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":16994:17534  if (from == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":17150:17155  value */\n      dup1\n        /* \"contracts/PingPongPlay_flattened.sol\":17134:17146  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17134:17155  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":16994:17534  if (from == address(0)) {... */\n      jump(tag_196)\n    tag_193:\n        /* \"contracts/PingPongPlay_flattened.sol\":17186:17205  uint256 fromBalance */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17208:17217  _balances */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17208:17223  _balances[from] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17218:17222  from */\n      dup6\n        /* \"contracts/PingPongPlay_flattened.sol\":17208:17223  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PingPongPlay_flattened.sol\":17186:17223  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":17255:17260  value */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":17241:17252  fromBalance */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":17241:17260  fromBalance < value */\n      lt\n        /* \"contracts/PingPongPlay_flattened.sol\":17237:17352  if (fromBalance < value) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":17312:17316  from */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":17318:17329  fromBalance */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":17331:17336  value */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PingPongPlay_flattened.sol\":17237:17352  if (fromBalance < value) {... */\n    tag_197:\n        /* \"contracts/PingPongPlay_flattened.sol\":17504:17509  value */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":17490:17501  fromBalance */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":17490:17509  fromBalance - value */\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":17472:17481  _balances */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17472:17487  _balances[from] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17482:17486  from */\n      dup7\n        /* \"contracts/PingPongPlay_flattened.sol\":17472:17487  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PingPongPlay_flattened.sol\":17472:17509  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":17172:17534  {... */\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":16994:17534  if (from == address(0)) {... */\n    tag_196:\n        /* \"contracts/PingPongPlay_flattened.sol\":17562:17563  0 */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17548:17564  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":17548:17550  to */\n      dup3\n        /* \"contracts/PingPongPlay_flattened.sol\":17548:17564  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PingPongPlay_flattened.sol\":17544:17969  if (to == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"contracts/PingPongPlay_flattened.sol\":17727:17732  value */\n      dup1\n        /* \"contracts/PingPongPlay_flattened.sol\":17711:17723  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17711:17732  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":17544:17969  if (to == address(0)) {... */\n      jump(tag_200)\n    tag_199:\n        /* \"contracts/PingPongPlay_flattened.sol\":17939:17944  value */\n      dup1\n        /* \"contracts/PingPongPlay_flattened.sol\":17922:17931  _balances */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17922:17935  _balances[to] */\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17932:17934  to */\n      dup5\n        /* \"contracts/PingPongPlay_flattened.sol\":17922:17935  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PingPongPlay_flattened.sol\":17922:17944  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PingPongPlay_flattened.sol\":17544:17969  if (to == address(0)) {... */\n    tag_200:\n        /* \"contracts/PingPongPlay_flattened.sol\":17999:18001  to */\n      dup2\n        /* \"contracts/PingPongPlay_flattened.sol\":17984:18009  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PingPongPlay_flattened.sol\":17993:17997  from */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":17984:18009  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PingPongPlay_flattened.sol\":18003:18008  value */\n      dup4\n        /* \"contracts/PingPongPlay_flattened.sol\":17984:18009  Transfer(from, to, value) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PingPongPlay_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_202:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_203:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_204:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_205:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_206:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_233\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_202\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":711:782   */\n      tag_234\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_203\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_235\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_204\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":881:910   */\n      tag_236\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_205\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_29:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_238\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_206\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_208:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_210:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_211:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_244\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_210\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_212:\n        /* \"#utility.yul\":1876:1900   */\n      tag_246\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_211\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_247:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_213:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_249\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_212\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_214:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_215:\n        /* \"#utility.yul\":2232:2256   */\n      tag_252\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_214\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_253:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_216:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_255\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_215\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_32:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_258\n      tag_208\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2525:2644   */\n    tag_257:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_259\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_213\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_260\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_216\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_217:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_218:\n        /* \"#utility.yul\":3089:3110   */\n      tag_263\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_35:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_265\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_218\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_38:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_268\n      tag_208\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3415:3534   */\n    tag_267:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_269\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_213\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_219:\n        /* \"#utility.yul\":3761:3785   */\n      tag_271\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_214\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_44:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_273\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_219\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_50:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_276\n      tag_208\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4136:4255   */\n    tag_275:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_277\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_213\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_278\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_213\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_279\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_216\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_220:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_221:\n        /* \"#utility.yul\":4826:4848   */\n      tag_282\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_220\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_56:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_284\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_221\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5197   */\n    tag_222:\n        /* \"#utility.yul\":5151:5172   */\n      tag_286\n        /* \"#utility.yul\":5166:5171   */\n      dup2\n        /* \"#utility.yul\":5151:5172   */\n      tag_217\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5144:5149   */\n      dup2\n        /* \"#utility.yul\":5141:5173   */\n      eq\n        /* \"#utility.yul\":5131:5191   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5187:5188   */\n      0x00\n        /* \"#utility.yul\":5184:5185   */\n      0x00\n        /* \"#utility.yul\":5177:5189   */\n      revert\n        /* \"#utility.yul\":5131:5191   */\n    tag_287:\n        /* \"#utility.yul\":5081:5197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5203:5336   */\n    tag_223:\n        /* \"#utility.yul\":5246:5251   */\n      0x00\n        /* \"#utility.yul\":5284:5290   */\n      dup2\n        /* \"#utility.yul\":5271:5291   */\n      calldataload\n        /* \"#utility.yul\":5262:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5300:5330   */\n      tag_289\n        /* \"#utility.yul\":5324:5329   */\n      dup2\n        /* \"#utility.yul\":5300:5330   */\n      tag_222\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5203:5336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:6101   */\n    tag_59:\n        /* \"#utility.yul\":5425:5431   */\n      0x00\n        /* \"#utility.yul\":5433:5439   */\n      0x00\n        /* \"#utility.yul\":5441:5447   */\n      0x00\n        /* \"#utility.yul\":5449:5455   */\n      0x00\n        /* \"#utility.yul\":5498:5501   */\n      0x80\n        /* \"#utility.yul\":5486:5495   */\n      dup6\n        /* \"#utility.yul\":5477:5484   */\n      dup8\n        /* \"#utility.yul\":5473:5496   */\n      sub\n        /* \"#utility.yul\":5469:5502   */\n      slt\n        /* \"#utility.yul\":5466:5586   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":5505:5584   */\n      tag_292\n      tag_208\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5466:5586   */\n    tag_291:\n        /* \"#utility.yul\":5625:5626   */\n      0x00\n        /* \"#utility.yul\":5650:5700   */\n      tag_293\n        /* \"#utility.yul\":5692:5699   */\n      dup8\n        /* \"#utility.yul\":5683:5689   */\n      dup3\n        /* \"#utility.yul\":5672:5681   */\n      dup9\n        /* \"#utility.yul\":5668:5690   */\n      add\n        /* \"#utility.yul\":5650:5700   */\n      tag_223\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5640:5700   */\n      swap5\n      pop\n        /* \"#utility.yul\":5596:5710   */\n      pop\n        /* \"#utility.yul\":5749:5751   */\n      0x20\n        /* \"#utility.yul\":5775:5828   */\n      tag_294\n        /* \"#utility.yul\":5820:5827   */\n      dup8\n        /* \"#utility.yul\":5811:5817   */\n      dup3\n        /* \"#utility.yul\":5800:5809   */\n      dup9\n        /* \"#utility.yul\":5796:5818   */\n      add\n        /* \"#utility.yul\":5775:5828   */\n      tag_213\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5765:5828   */\n      swap4\n      pop\n        /* \"#utility.yul\":5720:5838   */\n      pop\n        /* \"#utility.yul\":5877:5879   */\n      0x40\n        /* \"#utility.yul\":5903:5956   */\n      tag_295\n        /* \"#utility.yul\":5948:5955   */\n      dup8\n        /* \"#utility.yul\":5939:5945   */\n      dup3\n        /* \"#utility.yul\":5928:5937   */\n      dup9\n        /* \"#utility.yul\":5924:5946   */\n      add\n        /* \"#utility.yul\":5903:5956   */\n      tag_216\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5893:5956   */\n      swap3\n      pop\n        /* \"#utility.yul\":5848:5966   */\n      pop\n        /* \"#utility.yul\":6005:6007   */\n      0x60\n        /* \"#utility.yul\":6031:6084   */\n      tag_296\n        /* \"#utility.yul\":6076:6083   */\n      dup8\n        /* \"#utility.yul\":6067:6073   */\n      dup3\n        /* \"#utility.yul\":6056:6065   */\n      dup9\n        /* \"#utility.yul\":6052:6074   */\n      add\n        /* \"#utility.yul\":6031:6084   */\n      tag_216\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6021:6084   */\n      swap2\n      pop\n        /* \"#utility.yul\":5976:6094   */\n      pop\n        /* \"#utility.yul\":5342:6101   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6107:6575   */\n    tag_63:\n        /* \"#utility.yul\":6172:6178   */\n      0x00\n        /* \"#utility.yul\":6180:6186   */\n      0x00\n        /* \"#utility.yul\":6229:6231   */\n      0x40\n        /* \"#utility.yul\":6217:6226   */\n      dup4\n        /* \"#utility.yul\":6208:6215   */\n      dup6\n        /* \"#utility.yul\":6204:6227   */\n      sub\n        /* \"#utility.yul\":6200:6232   */\n      slt\n        /* \"#utility.yul\":6197:6316   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6235:6314   */\n      tag_299\n      tag_208\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6197:6316   */\n    tag_298:\n        /* \"#utility.yul\":6355:6356   */\n      0x00\n        /* \"#utility.yul\":6380:6433   */\n      tag_300\n        /* \"#utility.yul\":6425:6432   */\n      dup6\n        /* \"#utility.yul\":6416:6422   */\n      dup3\n        /* \"#utility.yul\":6405:6414   */\n      dup7\n        /* \"#utility.yul\":6401:6423   */\n      add\n        /* \"#utility.yul\":6380:6433   */\n      tag_213\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6370:6433   */\n      swap3\n      pop\n        /* \"#utility.yul\":6326:6443   */\n      pop\n        /* \"#utility.yul\":6482:6484   */\n      0x20\n        /* \"#utility.yul\":6508:6558   */\n      tag_301\n        /* \"#utility.yul\":6550:6557   */\n      dup6\n        /* \"#utility.yul\":6541:6547   */\n      dup3\n        /* \"#utility.yul\":6530:6539   */\n      dup7\n        /* \"#utility.yul\":6526:6548   */\n      add\n        /* \"#utility.yul\":6508:6558   */\n      tag_223\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6498:6558   */\n      swap2\n      pop\n        /* \"#utility.yul\":6453:6568   */\n      pop\n        /* \"#utility.yul\":6107:6575   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6581:6910   */\n    tag_67:\n        /* \"#utility.yul\":6640:6646   */\n      0x00\n        /* \"#utility.yul\":6689:6691   */\n      0x20\n        /* \"#utility.yul\":6677:6686   */\n      dup3\n        /* \"#utility.yul\":6668:6675   */\n      dup5\n        /* \"#utility.yul\":6664:6687   */\n      sub\n        /* \"#utility.yul\":6660:6692   */\n      slt\n        /* \"#utility.yul\":6657:6776   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6695:6774   */\n      tag_304\n      tag_208\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6657:6776   */\n    tag_303:\n        /* \"#utility.yul\":6815:6816   */\n      0x00\n        /* \"#utility.yul\":6840:6893   */\n      tag_305\n        /* \"#utility.yul\":6885:6892   */\n      dup5\n        /* \"#utility.yul\":6876:6882   */\n      dup3\n        /* \"#utility.yul\":6865:6874   */\n      dup6\n        /* \"#utility.yul\":6861:6883   */\n      add\n        /* \"#utility.yul\":6840:6893   */\n      tag_216\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6830:6893   */\n      swap2\n      pop\n        /* \"#utility.yul\":6786:6903   */\n      pop\n        /* \"#utility.yul\":6581:6910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6916:7034   */\n    tag_224:\n        /* \"#utility.yul\":7003:7027   */\n      tag_307\n        /* \"#utility.yul\":7021:7026   */\n      dup2\n        /* \"#utility.yul\":7003:7027   */\n      tag_211\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6998:7001   */\n      dup3\n        /* \"#utility.yul\":6991:7028   */\n      mstore\n        /* \"#utility.yul\":6916:7034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7040:7262   */\n    tag_72:\n        /* \"#utility.yul\":7133:7137   */\n      0x00\n        /* \"#utility.yul\":7171:7173   */\n      0x20\n        /* \"#utility.yul\":7160:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7174   */\n      add\n        /* \"#utility.yul\":7148:7174   */\n      swap1\n      pop\n        /* \"#utility.yul\":7184:7255   */\n      tag_309\n        /* \"#utility.yul\":7252:7253   */\n      0x00\n        /* \"#utility.yul\":7241:7250   */\n      dup4\n        /* \"#utility.yul\":7237:7254   */\n      add\n        /* \"#utility.yul\":7228:7234   */\n      dup5\n        /* \"#utility.yul\":7184:7255   */\n      tag_224\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7040:7262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7268:7742   */\n    tag_97:\n        /* \"#utility.yul\":7336:7342   */\n      0x00\n        /* \"#utility.yul\":7344:7350   */\n      0x00\n        /* \"#utility.yul\":7393:7395   */\n      0x40\n        /* \"#utility.yul\":7381:7390   */\n      dup4\n        /* \"#utility.yul\":7372:7379   */\n      dup6\n        /* \"#utility.yul\":7368:7391   */\n      sub\n        /* \"#utility.yul\":7364:7396   */\n      slt\n        /* \"#utility.yul\":7361:7480   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7399:7478   */\n      tag_312\n      tag_208\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7361:7480   */\n    tag_311:\n        /* \"#utility.yul\":7519:7520   */\n      0x00\n        /* \"#utility.yul\":7544:7597   */\n      tag_313\n        /* \"#utility.yul\":7589:7596   */\n      dup6\n        /* \"#utility.yul\":7580:7586   */\n      dup3\n        /* \"#utility.yul\":7569:7578   */\n      dup7\n        /* \"#utility.yul\":7565:7587   */\n      add\n        /* \"#utility.yul\":7544:7597   */\n      tag_213\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7534:7597   */\n      swap3\n      pop\n        /* \"#utility.yul\":7490:7607   */\n      pop\n        /* \"#utility.yul\":7646:7648   */\n      0x20\n        /* \"#utility.yul\":7672:7725   */\n      tag_314\n        /* \"#utility.yul\":7717:7724   */\n      dup6\n        /* \"#utility.yul\":7708:7714   */\n      dup3\n        /* \"#utility.yul\":7697:7706   */\n      dup7\n        /* \"#utility.yul\":7693:7715   */\n      add\n        /* \"#utility.yul\":7672:7725   */\n      tag_213\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7662:7725   */\n      swap2\n      pop\n        /* \"#utility.yul\":7617:7735   */\n      pop\n        /* \"#utility.yul\":7268:7742   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7748:7928   */\n    tag_225:\n        /* \"#utility.yul\":7796:7873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7793:7794   */\n      0x00\n        /* \"#utility.yul\":7786:7874   */\n      mstore\n        /* \"#utility.yul\":7893:7897   */\n      0x22\n        /* \"#utility.yul\":7890:7891   */\n      0x04\n        /* \"#utility.yul\":7883:7898   */\n      mstore\n        /* \"#utility.yul\":7917:7921   */\n      0x24\n        /* \"#utility.yul\":7914:7915   */\n      0x00\n        /* \"#utility.yul\":7907:7922   */\n      revert\n        /* \"#utility.yul\":7934:8254   */\n    tag_105:\n        /* \"#utility.yul\":7978:7984   */\n      0x00\n        /* \"#utility.yul\":8015:8016   */\n      0x02\n        /* \"#utility.yul\":8009:8013   */\n      dup3\n        /* \"#utility.yul\":8005:8017   */\n      div\n        /* \"#utility.yul\":7995:8017   */\n      swap1\n      pop\n        /* \"#utility.yul\":8062:8063   */\n      0x01\n        /* \"#utility.yul\":8056:8060   */\n      dup3\n        /* \"#utility.yul\":8052:8064   */\n      and\n        /* \"#utility.yul\":8083:8101   */\n      dup1\n        /* \"#utility.yul\":8073:8154   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8139:8143   */\n      0x7f\n        /* \"#utility.yul\":8131:8137   */\n      dup3\n        /* \"#utility.yul\":8127:8144   */\n      and\n        /* \"#utility.yul\":8117:8144   */\n      swap2\n      pop\n        /* \"#utility.yul\":8073:8154   */\n    tag_317:\n        /* \"#utility.yul\":8201:8203   */\n      0x20\n        /* \"#utility.yul\":8193:8199   */\n      dup3\n        /* \"#utility.yul\":8190:8204   */\n      lt\n        /* \"#utility.yul\":8170:8188   */\n      dup2\n        /* \"#utility.yul\":8167:8205   */\n      sub\n        /* \"#utility.yul\":8164:8248   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8220:8238   */\n      tag_319\n      tag_225\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8164:8248   */\n    tag_318:\n        /* \"#utility.yul\":7985:8254   */\n      pop\n        /* \"#utility.yul\":7934:8254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8702   */\n    tag_165:\n        /* \"#utility.yul\":8409:8413   */\n      0x00\n        /* \"#utility.yul\":8447:8449   */\n      0x60\n        /* \"#utility.yul\":8436:8445   */\n      dup3\n        /* \"#utility.yul\":8432:8450   */\n      add\n        /* \"#utility.yul\":8424:8450   */\n      swap1\n      pop\n        /* \"#utility.yul\":8460:8531   */\n      tag_321\n        /* \"#utility.yul\":8528:8529   */\n      0x00\n        /* \"#utility.yul\":8517:8526   */\n      dup4\n        /* \"#utility.yul\":8513:8530   */\n      add\n        /* \"#utility.yul\":8504:8510   */\n      dup7\n        /* \"#utility.yul\":8460:8531   */\n      tag_224\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8541:8613   */\n      tag_322\n        /* \"#utility.yul\":8609:8611   */\n      0x20\n        /* \"#utility.yul\":8598:8607   */\n      dup4\n        /* \"#utility.yul\":8594:8612   */\n      add\n        /* \"#utility.yul\":8585:8591   */\n      dup6\n        /* \"#utility.yul\":8541:8613   */\n      tag_219\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8623:8695   */\n      tag_323\n        /* \"#utility.yul\":8691:8693   */\n      0x40\n        /* \"#utility.yul\":8680:8689   */\n      dup4\n        /* \"#utility.yul\":8676:8694   */\n      add\n        /* \"#utility.yul\":8667:8673   */\n      dup5\n        /* \"#utility.yul\":8623:8695   */\n      tag_219\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8260:8702   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8708:8888   */\n    tag_226:\n        /* \"#utility.yul\":8756:8833   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8753:8754   */\n      0x00\n        /* \"#utility.yul\":8746:8834   */\n      mstore\n        /* \"#utility.yul\":8853:8857   */\n      0x11\n        /* \"#utility.yul\":8850:8851   */\n      0x04\n        /* \"#utility.yul\":8843:8858   */\n      mstore\n        /* \"#utility.yul\":8877:8881   */\n      0x24\n        /* \"#utility.yul\":8874:8875   */\n      0x00\n        /* \"#utility.yul\":8867:8882   */\n      revert\n        /* \"#utility.yul\":8894:9085   */\n    tag_195:\n        /* \"#utility.yul\":8934:8937   */\n      0x00\n        /* \"#utility.yul\":8953:8973   */\n      tag_326\n        /* \"#utility.yul\":8971:8972   */\n      dup3\n        /* \"#utility.yul\":8953:8973   */\n      tag_214\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8948:8973   */\n      swap2\n      pop\n        /* \"#utility.yul\":8987:9007   */\n      tag_327\n        /* \"#utility.yul\":9005:9006   */\n      dup4\n        /* \"#utility.yul\":8987:9007   */\n      tag_214\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8982:9007   */\n      swap3\n      pop\n        /* \"#utility.yul\":9030:9031   */\n      dup3\n        /* \"#utility.yul\":9027:9028   */\n      dup3\n        /* \"#utility.yul\":9023:9032   */\n      add\n        /* \"#utility.yul\":9016:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9051:9054   */\n      dup1\n        /* \"#utility.yul\":9048:9049   */\n      dup3\n        /* \"#utility.yul\":9045:9055   */\n      gt\n        /* \"#utility.yul\":9042:9078   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":9058:9076   */\n      tag_329\n      tag_226\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9042:9078   */\n    tag_328:\n        /* \"#utility.yul\":8894:9085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3a74412fdcdb937942e7eb4fe27ebae988acc551179e2f47c6d9bfd58873e6664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 537,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 342,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 670,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:1",
										"nodeType": "YulBlock",
										"src": "0:7961:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "608:80:1",
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nativeSrc": "618:22:1",
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nativeSrc": "627:13:1",
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nativeSrc": "649:33:1",
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nativeSrc": "649:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:1",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:1",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:1",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nativeSrc": "771:274:1",
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:1",
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nativeSrc": "819:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nativeSrc": "819:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nativeSrc": "788:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nativeSrc": "784:32:1",
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nativeSrc": "781:119:1",
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nativeSrc": "910:128:1",
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nativeSrc": "925:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:1",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:1",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:1",
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nativeSrc": "996:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nativeSrc": "964:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:1",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:1",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:1",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											},
											{
												"body": {
													"nativeSrc": "1110:40:1",
													"nodeType": "YulBlock",
													"src": "1110:40:1",
													"statements": [
														{
															"nativeSrc": "1121:22:1",
															"nodeType": "YulAssignment",
															"src": "1121:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:1"
																},
																"nativeSrc": "1131:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:1",
														"nodeType": "YulTypedName",
														"src": "1093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:1",
														"nodeType": "YulTypedName",
														"src": "1103:6:1",
														"type": ""
													}
												],
												"src": "1051:99:1"
											},
											{
												"body": {
													"nativeSrc": "1184:152:1",
													"nodeType": "YulBlock",
													"src": "1184:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:1"
															},
															"nativeSrc": "1194:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:1"
																},
																"nativeSrc": "1291:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:1"
															},
															"nativeSrc": "1291:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:1"
																},
																"nativeSrc": "1315:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:1"
															},
															"nativeSrc": "1315:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:1"
											},
											{
												"body": {
													"nativeSrc": "1370:152:1",
													"nodeType": "YulBlock",
													"src": "1370:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nativeSrc": "1380:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:1"
															},
															"nativeSrc": "1380:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:1"
																},
																"nativeSrc": "1477:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:1"
															},
															"nativeSrc": "1477:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:1"
																},
																"nativeSrc": "1501:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:1"
															},
															"nativeSrc": "1501:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:1"
											},
											{
												"body": {
													"nativeSrc": "1579:269:1",
													"nodeType": "YulBlock",
													"src": "1579:269:1",
													"statements": [
														{
															"nativeSrc": "1589:22:1",
															"nodeType": "YulAssignment",
															"src": "1589:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:1"
																},
																"nativeSrc": "1599:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																}
															]
														},
														{
															"nativeSrc": "1620:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:1"
																},
																"nativeSrc": "1646:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:1",
																"nodeType": "YulBlock",
																"src": "1697:51:1",
																"statements": [
																	{
																		"nativeSrc": "1711:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:1"
																			},
																			"nativeSrc": "1721:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:1"
																},
																"nativeSrc": "1670:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:1"
															},
															"nativeSrc": "1667:81:1",
															"nodeType": "YulIf",
															"src": "1667:81:1"
														},
														{
															"body": {
																"nativeSrc": "1800:42:1",
																"nodeType": "YulBlock",
																"src": "1800:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:1"
																			},
																			"nativeSrc": "1814:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:1"
																		},
																		"nativeSrc": "1814:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:1"
																		},
																		"nativeSrc": "1784:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:1"
																},
																"nativeSrc": "1761:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:1"
															},
															"nativeSrc": "1758:84:1",
															"nodeType": "YulIf",
															"src": "1758:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:1",
														"nodeType": "YulTypedName",
														"src": "1563:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:1",
														"nodeType": "YulTypedName",
														"src": "1572:6:1",
														"type": ""
													}
												],
												"src": "1528:320:1"
											},
											{
												"body": {
													"nativeSrc": "1908:87:1",
													"nodeType": "YulBlock",
													"src": "1908:87:1",
													"statements": [
														{
															"nativeSrc": "1918:11:1",
															"nodeType": "YulAssignment",
															"src": "1918:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:1",
																"nodeType": "YulIdentifier",
																"src": "1926:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:1"
																},
																"nativeSrc": "1939:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:1"
															},
															"nativeSrc": "1939:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:1"
														},
														{
															"nativeSrc": "1962:26:1",
															"nodeType": "YulAssignment",
															"src": "1962:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:1"
																},
																"nativeSrc": "1970:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:1",
														"nodeType": "YulTypedName",
														"src": "1895:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:1",
														"nodeType": "YulTypedName",
														"src": "1903:4:1",
														"type": ""
													}
												],
												"src": "1854:141:1"
											},
											{
												"body": {
													"nativeSrc": "2045:49:1",
													"nodeType": "YulBlock",
													"src": "2045:49:1",
													"statements": [
														{
															"nativeSrc": "2055:33:1",
															"nodeType": "YulAssignment",
															"src": "2055:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:1"
																		},
																		"nativeSrc": "2069:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:1"
																},
																"nativeSrc": "2065:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:1",
														"nodeType": "YulTypedName",
														"src": "2028:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:1",
														"nodeType": "YulTypedName",
														"src": "2038:6:1",
														"type": ""
													}
												],
												"src": "2001:93:1"
											},
											{
												"body": {
													"nativeSrc": "2153:54:1",
													"nodeType": "YulBlock",
													"src": "2153:54:1",
													"statements": [
														{
															"nativeSrc": "2163:37:1",
															"nodeType": "YulAssignment",
															"src": "2163:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:1"
																},
																"nativeSrc": "2184:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:1",
														"nodeType": "YulTypedName",
														"src": "2128:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:1",
														"nodeType": "YulTypedName",
														"src": "2134:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:1",
														"nodeType": "YulTypedName",
														"src": "2144:8:1",
														"type": ""
													}
												],
												"src": "2100:107:1"
											},
											{
												"body": {
													"nativeSrc": "2289:317:1",
													"nodeType": "YulBlock",
													"src": "2289:317:1",
													"statements": [
														{
															"nativeSrc": "2299:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:1"
																},
																"nativeSrc": "2316:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:1"
																},
																"nativeSrc": "2355:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:1",
															"nodeType": "YulAssignment",
															"src": "2461:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:1"
																},
																"nativeSrc": "2473:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:1"
																}
															]
														},
														{
															"nativeSrc": "2521:30:1",
															"nodeType": "YulAssignment",
															"src": "2521:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:1"
																		},
																		"nativeSrc": "2541:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:1"
																},
																"nativeSrc": "2530:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:1"
																}
															]
														},
														{
															"nativeSrc": "2560:40:1",
															"nodeType": "YulAssignment",
															"src": "2560:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:1"
																		},
																		"nativeSrc": "2580:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:1"
																},
																"nativeSrc": "2570:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:1",
														"nodeType": "YulTypedName",
														"src": "2250:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:1",
														"nodeType": "YulTypedName",
														"src": "2257:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:1",
														"nodeType": "YulTypedName",
														"src": "2269:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:1",
														"nodeType": "YulTypedName",
														"src": "2282:6:1",
														"type": ""
													}
												],
												"src": "2213:393:1"
											},
											{
												"body": {
													"nativeSrc": "2644:28:1",
													"nodeType": "YulBlock",
													"src": "2644:28:1",
													"statements": [
														{
															"nativeSrc": "2654:12:1",
															"nodeType": "YulAssignment",
															"src": "2654:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:1",
																"nodeType": "YulIdentifier",
																"src": "2661:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:1",
														"nodeType": "YulTypedName",
														"src": "2630:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:1",
														"nodeType": "YulTypedName",
														"src": "2640:3:1",
														"type": ""
													}
												],
												"src": "2612:60:1"
											},
											{
												"body": {
													"nativeSrc": "2738:82:1",
													"nodeType": "YulBlock",
													"src": "2738:82:1",
													"statements": [
														{
															"nativeSrc": "2748:66:1",
															"nodeType": "YulAssignment",
															"src": "2748:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:1"
																				},
																				"nativeSrc": "2788:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:1"
																		},
																		"nativeSrc": "2779:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:1"
																},
																"nativeSrc": "2761:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:1",
														"nodeType": "YulTypedName",
														"src": "2718:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:1",
														"nodeType": "YulTypedName",
														"src": "2728:9:1",
														"type": ""
													}
												],
												"src": "2678:142:1"
											},
											{
												"body": {
													"nativeSrc": "2873:28:1",
													"nodeType": "YulBlock",
													"src": "2873:28:1",
													"statements": [
														{
															"nativeSrc": "2883:12:1",
															"nodeType": "YulAssignment",
															"src": "2883:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:1",
																"nodeType": "YulIdentifier",
																"src": "2890:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:1",
														"nodeType": "YulTypedName",
														"src": "2859:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:1",
														"nodeType": "YulTypedName",
														"src": "2869:3:1",
														"type": ""
													}
												],
												"src": "2826:75:1"
											},
											{
												"body": {
													"nativeSrc": "2983:193:1",
													"nodeType": "YulBlock",
													"src": "2983:193:1",
													"statements": [
														{
															"nativeSrc": "2993:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:1"
																},
																"nativeSrc": "3017:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:1"
																				},
																				"nativeSrc": "3106:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:1"
																				},
																				"nativeSrc": "3127:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:1"
																		},
																		"nativeSrc": "3078:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:1"
																},
																"nativeSrc": "3065:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:1"
															},
															"nativeSrc": "3065:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:1",
														"nodeType": "YulTypedName",
														"src": "2960:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:1",
														"nodeType": "YulTypedName",
														"src": "2966:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:1",
														"nodeType": "YulTypedName",
														"src": "2974:7:1",
														"type": ""
													}
												],
												"src": "2907:269:1"
											},
											{
												"body": {
													"nativeSrc": "3231:24:1",
													"nodeType": "YulBlock",
													"src": "3231:24:1",
													"statements": [
														{
															"nativeSrc": "3241:8:1",
															"nodeType": "YulAssignment",
															"src": "3241:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:1",
																"nodeType": "YulLiteral",
																"src": "3248:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:1",
														"nodeType": "YulTypedName",
														"src": "3227:3:1",
														"type": ""
													}
												],
												"src": "3182:73:1"
											},
											{
												"body": {
													"nativeSrc": "3314:136:1",
													"nodeType": "YulBlock",
													"src": "3314:136:1",
													"statements": [
														{
															"nativeSrc": "3324:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:1"
																},
																"nativeSrc": "3338:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:1"
																},
																"nativeSrc": "3379:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:1"
															},
															"nativeSrc": "3379:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:1",
														"nodeType": "YulTypedName",
														"src": "3300:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"src": "3261:189:1"
											},
											{
												"body": {
													"nativeSrc": "3506:136:1",
													"nodeType": "YulBlock",
													"src": "3506:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:1",
																"nodeType": "YulBlock",
																"src": "3573:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:1"
																			},
																			"nativeSrc": "3587:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:1"
																		},
																		"nativeSrc": "3587:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:1"
																},
																"nativeSrc": "3523:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:1"
															},
															"nativeSrc": "3516:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:1",
																"nodeType": "YulBlock",
																"src": "3538:26:1",
																"statements": [
																	{
																		"nativeSrc": "3540:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:1"
																			},
																			"nativeSrc": "3549:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:1",
																"nodeType": "YulBlock",
																"src": "3520:2:1",
																"statements": []
															},
															"src": "3516:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:1",
														"nodeType": "YulTypedName",
														"src": "3494:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:1",
														"nodeType": "YulTypedName",
														"src": "3501:3:1",
														"type": ""
													}
												],
												"src": "3456:186:1"
											},
											{
												"body": {
													"nativeSrc": "3727:464:1",
													"nodeType": "YulBlock",
													"src": "3727:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:1",
																"nodeType": "YulBlock",
																"src": "3753:431:1",
																"statements": [
																	{
																		"nativeSrc": "3767:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:1"
																			},
																			"nativeSrc": "3783:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:1",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:1"
																					},
																					"nativeSrc": "3867:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:1"
																			},
																			"nativeSrc": "3853:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:1",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:1",
																			"nodeType": "YulBlock",
																			"src": "4054:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:1"
																			},
																			"nativeSrc": "4035:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:1"
																		},
																		"nativeSrc": "4032:49:1",
																		"nodeType": "YulIf",
																		"src": "4032:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:1"
																							},
																							"nativeSrc": "4150:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:1"
																					},
																					"nativeSrc": "4136:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:1"
																			},
																			"nativeSrc": "4094:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:1"
																		},
																		"nativeSrc": "4094:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:1"
																},
																"nativeSrc": "3741:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:1"
															},
															"nativeSrc": "3738:446:1",
															"nodeType": "YulIf",
															"src": "3738:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:1",
														"nodeType": "YulTypedName",
														"src": "3703:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:1",
														"nodeType": "YulTypedName",
														"src": "3710:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:1",
														"nodeType": "YulTypedName",
														"src": "3715:10:1",
														"type": ""
													}
												],
												"src": "3648:543:1"
											},
											{
												"body": {
													"nativeSrc": "4260:54:1",
													"nodeType": "YulBlock",
													"src": "4260:54:1",
													"statements": [
														{
															"nativeSrc": "4270:37:1",
															"nodeType": "YulAssignment",
															"src": "4270:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:1"
																},
																"nativeSrc": "4291:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:1",
														"nodeType": "YulTypedName",
														"src": "4235:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:1",
														"nodeType": "YulTypedName",
														"src": "4241:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:1",
														"nodeType": "YulTypedName",
														"src": "4251:8:1",
														"type": ""
													}
												],
												"src": "4197:117:1"
											},
											{
												"body": {
													"nativeSrc": "4371:118:1",
													"nodeType": "YulBlock",
													"src": "4371:118:1",
													"statements": [
														{
															"nativeSrc": "4381:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:1"
																				},
																				"nativeSrc": "4426:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:1"
																				},
																				"nativeSrc": "4441:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:1"
																		},
																		"nativeSrc": "4397:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:1"
																},
																"nativeSrc": "4393:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:1",
															"nodeType": "YulAssignment",
															"src": "4458:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:1"
																},
																"nativeSrc": "4468:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:1",
														"nodeType": "YulTypedName",
														"src": "4348:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:1",
														"nodeType": "YulTypedName",
														"src": "4354:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:1",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													}
												],
												"src": "4320:169:1"
											},
											{
												"body": {
													"nativeSrc": "4575:214:1",
													"nodeType": "YulBlock",
													"src": "4575:214:1",
													"statements": [
														{
															"nativeSrc": "4708:37:1",
															"nodeType": "YulAssignment",
															"src": "4708:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:1"
																},
																"nativeSrc": "4716:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:1"
																}
															]
														},
														{
															"nativeSrc": "4754:29:1",
															"nodeType": "YulAssignment",
															"src": "4754:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:1"
																		},
																		"nativeSrc": "4771:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:1"
																},
																"nativeSrc": "4762:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:1",
														"nodeType": "YulTypedName",
														"src": "4556:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:1",
														"nodeType": "YulTypedName",
														"src": "4562:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:1",
														"nodeType": "YulTypedName",
														"src": "4570:4:1",
														"type": ""
													}
												],
												"src": "4494:295:1"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:1",
													"nodeType": "YulBlock",
													"src": "4886:1303:1",
													"statements": [
														{
															"nativeSrc": "4897:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:1"
																},
																"nativeSrc": "4911:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:1",
																"nodeType": "YulBlock",
																"src": "5033:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:1"
																			},
																			"nativeSrc": "5035:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:1"
																		},
																		"nativeSrc": "5035:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:1"
																},
																"nativeSrc": "5002:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:1"
															},
															"nativeSrc": "4999:56:1",
															"nodeType": "YulIf",
															"src": "4999:56:1"
														},
														{
															"nativeSrc": "5065:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:1"
																		},
																		"nativeSrc": "5105:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:1"
																},
																"nativeSrc": "5079:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:1"
																},
																"nativeSrc": "5164:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:1"
															},
															"nativeSrc": "5164:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:1"
														},
														{
															"nativeSrc": "5241:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:1",
																"nodeType": "YulLiteral",
																"src": "5258:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:1",
															"nodeType": "YulAssignment",
															"src": "5269:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:1",
																"nodeType": "YulLiteral",
																"src": "5282:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:1",
																		"nodeType": "YulBlock",
																		"src": "5333:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:1"
																							},
																							"nativeSrc": "5374:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:1"
																					},
																					"nativeSrc": "5362:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:1"
																					},
																					"nativeSrc": "5412:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:1",
																					"nodeType": "YulBlock",
																					"src": "5530:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:1"
																												},
																												"nativeSrc": "5569:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:1"
																										},
																										"nativeSrc": "5563:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:1"
																								},
																								"nativeSrc": "5548:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:1"
																							},
																							"nativeSrc": "5548:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:1"
																						},
																						{
																							"nativeSrc": "5607:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:1"
																								},
																								"nativeSrc": "5617:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:1"
																								},
																								"nativeSrc": "5661:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:1"
																					},
																					"nativeSrc": "5493:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:1"
																				},
																				"nativeSrc": "5485:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:1",
																					"nodeType": "YulBlock",
																					"src": "5508:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:1"
																								},
																								"nativeSrc": "5515:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:1",
																					"nodeType": "YulBlock",
																					"src": "5489:3:1",
																					"statements": []
																				},
																				"src": "5485:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:1",
																					"nodeType": "YulBlock",
																					"src": "5729:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:1"
																										},
																										"nativeSrc": "5770:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:1"
																								},
																								"nativeSrc": "5764:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:1",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:1"
																												},
																												"nativeSrc": "5852:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:1"
																										},
																										"nativeSrc": "5822:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:1"
																								},
																								"nativeSrc": "5807:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:1"
																							},
																							"nativeSrc": "5807:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:1"
																					},
																					"nativeSrc": "5709:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:1"
																				},
																				"nativeSrc": "5706:179:1",
																				"nodeType": "YulIf",
																				"src": "5706:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:1",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:1"
																									},
																									"nativeSrc": "5915:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:1",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:1"
																							},
																							"nativeSrc": "5911:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:1"
																					},
																					"nativeSrc": "5898:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:1"
																				},
																				"nativeSrc": "5898:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:1",
																	"nodeType": "YulCase",
																	"src": "5326:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:1",
																		"nodeType": "YulBlock",
																		"src": "5961:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:1",
																					"nodeType": "YulBlock",
																					"src": "6012:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:1"
																										},
																										"nativeSrc": "6045:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:1"
																								},
																								"nativeSrc": "6039:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:1"
																				},
																				"nativeSrc": "6002:77:1",
																				"nodeType": "YulIf",
																				"src": "6002:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:1"
																							},
																							"nativeSrc": "6105:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:1"
																					},
																					"nativeSrc": "6092:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:1"
																				},
																				"nativeSrc": "6092:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:1"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:1",
																	"nodeType": "YulCase",
																	"src": "5953:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:1"
																},
																"nativeSrc": "5303:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:1"
															},
															"nativeSrc": "5296:887:1",
															"nodeType": "YulSwitch",
															"src": "5296:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:1",
														"nodeType": "YulTypedName",
														"src": "4875:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:1",
														"nodeType": "YulTypedName",
														"src": "4881:3:1",
														"type": ""
													}
												],
												"src": "4794:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6240:81:1",
													"nodeType": "YulBlock",
													"src": "6240:81:1",
													"statements": [
														{
															"nativeSrc": "6250:65:1",
															"nodeType": "YulAssignment",
															"src": "6250:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:1",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:1"
																},
																"nativeSrc": "6261:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:1",
														"nodeType": "YulTypedName",
														"src": "6222:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:1",
														"nodeType": "YulTypedName",
														"src": "6232:7:1",
														"type": ""
													}
												],
												"src": "6195:126:1"
											},
											{
												"body": {
													"nativeSrc": "6372:51:1",
													"nodeType": "YulBlock",
													"src": "6372:51:1",
													"statements": [
														{
															"nativeSrc": "6382:35:1",
															"nodeType": "YulAssignment",
															"src": "6382:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:1"
																},
																"nativeSrc": "6393:24:1",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:1",
														"nodeType": "YulTypedName",
														"src": "6354:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:1",
														"nodeType": "YulTypedName",
														"src": "6364:7:1",
														"type": ""
													}
												],
												"src": "6327:96:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6809:152:1",
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nativeSrc": "6819:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nativeSrc": "6819:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nativeSrc": "6916:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nativeSrc": "6940:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nativeSrc": "6940:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nativeSrc": "7011:147:1",
													"nodeType": "YulBlock",
													"src": "7011:147:1",
													"statements": [
														{
															"nativeSrc": "7021:25:1",
															"nodeType": "YulAssignment",
															"src": "7021:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:1"
																},
																"nativeSrc": "7026:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:1"
																}
															]
														},
														{
															"nativeSrc": "7055:25:1",
															"nodeType": "YulAssignment",
															"src": "7055:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:1"
																},
																"nativeSrc": "7060:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:1"
																}
															]
														},
														{
															"nativeSrc": "7089:16:1",
															"nodeType": "YulAssignment",
															"src": "7089:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:1"
																},
																"nativeSrc": "7096:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:1",
																"nodeType": "YulBlock",
																"src": "7129:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:1"
																			},
																			"nativeSrc": "7131:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:1"
																		},
																		"nativeSrc": "7131:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:1"
																},
																"nativeSrc": "7118:10:1",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:1"
															},
															"nativeSrc": "7115:36:1",
															"nodeType": "YulIf",
															"src": "7115:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:1",
														"nodeType": "YulTypedName",
														"src": "6998:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:1",
														"nodeType": "YulTypedName",
														"src": "7001:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:1",
														"nodeType": "YulTypedName",
														"src": "7007:3:1",
														"type": ""
													}
												],
												"src": "6967:191:1"
											},
											{
												"body": {
													"nativeSrc": "7229:53:1",
													"nodeType": "YulBlock",
													"src": "7229:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:1"
																		},
																		"nativeSrc": "7251:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:1"
																},
																"nativeSrc": "7239:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:1"
															},
															"nativeSrc": "7239:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:1",
														"nodeType": "YulTypedName",
														"src": "7217:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:1",
														"nodeType": "YulTypedName",
														"src": "7224:3:1",
														"type": ""
													}
												],
												"src": "7164:118:1"
											},
											{
												"body": {
													"nativeSrc": "7442:288:1",
													"nodeType": "YulBlock",
													"src": "7442:288:1",
													"statements": [
														{
															"nativeSrc": "7452:26:1",
															"nodeType": "YulAssignment",
															"src": "7452:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:1"
																},
																"nativeSrc": "7460:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:1"
																		},
																		"nativeSrc": "7541:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:1"
																},
																"nativeSrc": "7488:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:1"
															},
															"nativeSrc": "7488:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:1"
																		},
																		"nativeSrc": "7622:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:1"
																},
																"nativeSrc": "7569:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:1"
															},
															"nativeSrc": "7569:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:1"
																		},
																		"nativeSrc": "7704:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:1"
																},
																"nativeSrc": "7651:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:1"
															},
															"nativeSrc": "7651:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:1",
														"nodeType": "YulTypedName",
														"src": "7398:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:1",
														"nodeType": "YulTypedName",
														"src": "7410:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:1",
														"nodeType": "YulTypedName",
														"src": "7418:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:1",
														"nodeType": "YulTypedName",
														"src": "7426:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:1",
														"nodeType": "YulTypedName",
														"src": "7437:4:1",
														"type": ""
													}
												],
												"src": "7288:442:1"
											},
											{
												"body": {
													"nativeSrc": "7834:124:1",
													"nodeType": "YulBlock",
													"src": "7834:124:1",
													"statements": [
														{
															"nativeSrc": "7844:26:1",
															"nodeType": "YulAssignment",
															"src": "7844:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:1"
																},
																"nativeSrc": "7852:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:1"
																		},
																		"nativeSrc": "7933:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:1"
																},
																"nativeSrc": "7880:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:1"
															},
															"nativeSrc": "7880:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:1",
														"nodeType": "YulTypedName",
														"src": "7806:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:1",
														"nodeType": "YulTypedName",
														"src": "7818:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:1",
														"nodeType": "YulTypedName",
														"src": "7829:4:1",
														"type": ""
													}
												],
												"src": "7736:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611dbc380380611dbc833981810160405281019061003191906104ee565b306040518060400160405280600c81526020017f50696e67506f6e67506c617900000000000000000000000000000000000000008152506040518060400160405280600681526020017f50494e475050000000000000000000000000000000000000000000000000000081525081600390816100ad919061074d565b5080600490816100bd919061074d565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610127919061085b565b60405180910390fd5b61013f8161015660201b60201c565b50610150338261021960201b60201c565b50610931565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610289575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610280919061085b565b60405180910390fd5b61029a5f838361029e60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102ee578060025f8282546102e291906108a1565b925050819055506103bc565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610377578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161036e939291906108e3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610403578060025f828254039250508190555061044d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104aa9190610918565b60405180910390a3505050565b5f5ffd5b5f819050919050565b6104cd816104bb565b81146104d7575f5ffd5b50565b5f815190506104e8816104c4565b92915050565b5f60208284031215610503576105026104b7565b5b5f610510848285016104da565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061059457607f821691505b6020821081036105a7576105a6610550565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105ce565b61061386836105ce565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61064e610649610644846104bb565b61062b565b6104bb565b9050919050565b5f819050919050565b61066783610634565b61067b61067382610655565b8484546105da565b825550505050565b5f5f905090565b610692610683565b61069d81848461065e565b505050565b5b818110156106c0576106b55f8261068a565b6001810190506106a3565b5050565b601f821115610705576106d6816105ad565b6106df846105bf565b810160208510156106ee578190505b6107026106fa856105bf565b8301826106a2565b50505b505050565b5f82821c905092915050565b5f6107255f198460080261070a565b1980831691505092915050565b5f61073d8383610716565b9150826002028217905092915050565b61075682610519565b67ffffffffffffffff81111561076f5761076e610523565b5b610779825461057d565b6107848282856106c4565b5f60209050601f8311600181146107b5575f84156107a3578287015190505b6107ad8582610732565b865550610814565b601f1984166107c3866105ad565b5f5b828110156107ea578489015182556001820191506020850194506020810190506107c5565b868310156108075784890151610803601f891682610716565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108458261081c565b9050919050565b6108558161083b565b82525050565b5f60208201905061086e5f83018461084c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108ab826104bb565b91506108b6836104bb565b92508282019050808211156108ce576108cd610874565b5b92915050565b6108dd816104bb565b82525050565b5f6060820190506108f65f83018661084c565b61090360208301856108d4565b61091060408301846108d4565b949350505050565b5f60208201905061092b5f8301846108d4565b92915050565b61147e8061093e5f395ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806349bd5a5e116100ab5780638da5cb5b1161006f5780638da5cb5b1461031e57806395d89b411461033c578063a9059cbb1461035a578063dd62ed3e1461038a578063f2fde38b146103ba5761012a565b806349bd5a5e1461028a57806370a08231146102a8578063715018a6146102d8578063860a32ec146102e257806389f9a1d3146103005761012a565b806323b872dd116100f257806323b872dd146101e8578063313ce567146102185780633aa633aa14610236578063404e51291461025257806342966c681461026e5761012a565b806306fdde031461012e578063095ea7b31461014c57806316c021291461017c57806318160ddd146101ac5780631ab99e12146101ca575b5f5ffd5b6101366103d6565b6040516101439190611000565b60405180910390f35b610166600480360381019061016191906110b1565b610466565b6040516101739190611109565b60405180910390f35b61019660048036038101906101919190611122565b610488565b6040516101a39190611109565b60405180910390f35b6101b46104a5565b6040516101c1919061115c565b60405180910390f35b6101d26104ae565b6040516101df919061115c565b60405180910390f35b61020260048036038101906101fd9190611175565b6104b4565b60405161020f9190611109565b60405180910390f35b6102206104e2565b60405161022d91906111e0565b60405180910390f35b610250600480360381019061024b9190611223565b6104ea565b005b61026c60048036038101906102679190611287565b610560565b005b610288600480360381019061028391906112c5565b6105c0565b005b6102926105cd565b60405161029f91906112ff565b60405180910390f35b6102c260048036038101906102bd9190611122565b6105f2565b6040516102cf919061115c565b60405180910390f35b6102e0610637565b005b6102ea61064a565b6040516102f79190611109565b60405180910390f35b61030861065d565b604051610315919061115c565b60405180910390f35b610326610663565b60405161033391906112ff565b60405180910390f35b61034461068b565b6040516103519190611000565b60405180910390f35b610374600480360381019061036f91906110b1565b61071b565b6040516103819190611109565b60405180910390f35b6103a4600480360381019061039f9190611318565b61073d565b6040516103b1919061115c565b60405180910390f35b6103d460048036038101906103cf9190611122565b6107bf565b005b6060600380546103e590611383565b80601f016020809104026020016040519081016040528092919081815260200182805461041190611383565b801561045c5780601f106104335761010080835404028352916020019161045c565b820191905f5260205f20905b81548152906001019060200180831161043f57829003601f168201915b5050505050905090565b5f5f610470610843565b905061047d81858561084a565b600191505092915050565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f600254905090565b60075481565b5f5f6104be610843565b90506104cb85828561085c565b6104d68585856108ef565b60019150509392505050565b5f6012905090565b6104f26109df565b83600560146101000a81548160ff0219169083151502179055508260085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055508060078190555050505050565b6105686109df565b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b6105ca3382610a66565b50565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61063f6109df565b6106485f610ae5565b565b600560149054906101000a900460ff1681565b60065481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069a90611383565b80601f01602080910402602001604051908101604052809291908181526020018280546106c690611383565b80156107115780601f106106e857610100808354040283529160200191610711565b820191905f5260205f20905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b5f5f610725610843565b90506107328185856108ef565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107c76109df565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610837575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161082e91906112ff565b60405180910390fd5b61084081610ae5565b50565b5f33905090565b6108578383836001610ba8565b505050565b5f610867848461073d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108e957818110156108da578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108d1939291906113b3565b60405180910390fd5b6108e884848484035f610ba8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361095f575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095691906112ff565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109cf575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109c691906112ff565b60405180910390fd5b6109da838383610d77565b505050565b6109e7610843565b73ffffffffffffffffffffffffffffffffffffffff16610a05610663565b73ffffffffffffffffffffffffffffffffffffffff1614610a6457610a28610843565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a5b91906112ff565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ad6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610acd91906112ff565b60405180910390fd5b610ae1825f83610d77565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c18575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c0f91906112ff565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c88575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c7f91906112ff565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d71578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d68919061115c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dc7578060025f828254610dbb9190611415565b92505081905550610e95565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e50578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e47939291906113b3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610edc578060025f8282540392505081905550610f26565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f83919061115c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610fd282610f90565b610fdc8185610f9a565b9350610fec818560208601610faa565b610ff581610fb8565b840191505092915050565b5f6020820190508181035f8301526110188184610fc8565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104d82611024565b9050919050565b61105d81611043565b8114611067575f5ffd5b50565b5f8135905061107881611054565b92915050565b5f819050919050565b6110908161107e565b811461109a575f5ffd5b50565b5f813590506110ab81611087565b92915050565b5f5f604083850312156110c7576110c6611020565b5b5f6110d48582860161106a565b92505060206110e58582860161109d565b9150509250929050565b5f8115159050919050565b611103816110ef565b82525050565b5f60208201905061111c5f8301846110fa565b92915050565b5f6020828403121561113757611136611020565b5b5f6111448482850161106a565b91505092915050565b6111568161107e565b82525050565b5f60208201905061116f5f83018461114d565b92915050565b5f5f5f6060848603121561118c5761118b611020565b5b5f6111998682870161106a565b93505060206111aa8682870161106a565b92505060406111bb8682870161109d565b9150509250925092565b5f60ff82169050919050565b6111da816111c5565b82525050565b5f6020820190506111f35f8301846111d1565b92915050565b611202816110ef565b811461120c575f5ffd5b50565b5f8135905061121d816111f9565b92915050565b5f5f5f5f6080858703121561123b5761123a611020565b5b5f6112488782880161120f565b94505060206112598782880161106a565b935050604061126a8782880161109d565b925050606061127b8782880161109d565b91505092959194509250565b5f5f6040838503121561129d5761129c611020565b5b5f6112aa8582860161106a565b92505060206112bb8582860161120f565b9150509250929050565b5f602082840312156112da576112d9611020565b5b5f6112e78482850161109d565b91505092915050565b6112f981611043565b82525050565b5f6020820190506113125f8301846112f0565b92915050565b5f5f6040838503121561132e5761132d611020565b5b5f61133b8582860161106a565b925050602061134c8582860161106a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061139a57607f821691505b6020821081036113ad576113ac611356565b5b50919050565b5f6060820190506113c65f8301866112f0565b6113d3602083018561114d565b6113e0604083018461114d565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61141f8261107e565b915061142a8361107e565b9250828201905080821115611442576114416113e8565b5b9291505056fea2646970667358221220d3a74412fdcdb937942e7eb4fe27ebae988acc551179e2f47c6d9bfd58873e6664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DBC CODESIZE SUB DUP1 PUSH2 0x1DBC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4EE JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50696E67506F6E67506C61790000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50494E4750500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x156 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x150 CALLER DUP3 PUSH2 0x219 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x931 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x289 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29A PUSH0 DUP4 DUP4 PUSH2 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2EE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3BC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x377 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x403 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x44D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP2 EQ PUSH2 0x4D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E8 DUP2 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x4B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x510 DUP5 DUP3 DUP6 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x594 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x550 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x609 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x613 DUP7 DUP4 PUSH2 0x5CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x64E PUSH2 0x649 PUSH2 0x644 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x667 DUP4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x67B PUSH2 0x673 DUP3 PUSH2 0x655 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5DA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x692 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x69D DUP2 DUP5 DUP5 PUSH2 0x65E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C0 JUMPI PUSH2 0x6B5 PUSH0 DUP3 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x705 JUMPI PUSH2 0x6D6 DUP2 PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x6DF DUP5 PUSH2 0x5BF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x702 PUSH2 0x6FA DUP6 PUSH2 0x5BF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6A2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x725 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x70A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73D DUP4 DUP4 PUSH2 0x716 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x756 DUP3 PUSH2 0x519 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76F JUMPI PUSH2 0x76E PUSH2 0x523 JUMP JUMPDEST JUMPDEST PUSH2 0x779 DUP3 SLOAD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x784 DUP3 DUP3 DUP6 PUSH2 0x6C4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7B5 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7A3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7AD DUP6 DUP3 PUSH2 0x732 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7C3 DUP7 PUSH2 0x5AD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7EA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7C5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x807 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x803 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x716 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x845 DUP3 PUSH2 0x81C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x855 DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86E PUSH0 DUP4 ADD DUP5 PUSH2 0x84C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8AB DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B6 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x874 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DD DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8F6 PUSH0 DUP4 ADD DUP7 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x903 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x910 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92B PUSH0 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x147E DUP1 PUSH2 0x93E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49BD5A5E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x860A32EC EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x89F9A1D3 EQ PUSH2 0x300 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x3AA633AA EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x404E5129 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x16C02129 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x1AB99E12 EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x433 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x470 PUSH2 0x843 JUMP JUMPDEST SWAP1 POP PUSH2 0x47D DUP2 DUP6 DUP6 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4BE PUSH2 0x843 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CB DUP6 DUP3 DUP6 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x4D6 DUP6 DUP6 DUP6 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F2 PUSH2 0x9DF JUMP JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x568 PUSH2 0x9DF JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x5CA CALLER DUP3 PUSH2 0xA66 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63F PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x648 PUSH0 PUSH2 0xAE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69A SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C6 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x711 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x711 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x725 PUSH2 0x843 JUMP JUMPDEST SWAP1 POP PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C7 PUSH2 0x9DF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x837 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x840 DUP2 PUSH2 0xAE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x857 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x867 DUP5 DUP5 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8E9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8DA JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DA DUP4 DUP4 DUP4 PUSH2 0xD77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E7 PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA05 PUSH2 0x663 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA64 JUMPI PUSH2 0xA28 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE1 DUP3 PUSH0 DUP4 PUSH2 0xD77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC18 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC88 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD71 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE95 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE50 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF26 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD2 DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0xFDC DUP2 DUP6 PUSH2 0xF9A JUMP JUMPDEST SWAP4 POP PUSH2 0xFEC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFF5 DUP2 PUSH2 0xFB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1018 DUP2 DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104D DUP3 PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP2 EQ PUSH2 0x1067 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1078 DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1090 DUP2 PUSH2 0x107E JUMP JUMPDEST DUP2 EQ PUSH2 0x109A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10AB DUP2 PUSH2 0x1087 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D4 DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10E5 DUP6 DUP3 DUP7 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1103 DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111C PUSH0 DUP4 ADD DUP5 PUSH2 0x10FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1144 DUP5 DUP3 DUP6 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1156 DUP2 PUSH2 0x107E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116F PUSH0 DUP4 ADD DUP5 PUSH2 0x114D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1199 DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11AA DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11BB DUP7 DUP3 DUP8 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DA DUP2 PUSH2 0x11C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x11D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1202 DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP2 EQ PUSH2 0x120C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121D DUP2 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x123B JUMPI PUSH2 0x123A PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1248 DUP8 DUP3 DUP9 ADD PUSH2 0x120F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1259 DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x126A DUP8 DUP3 DUP9 ADD PUSH2 0x109D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x127B DUP8 DUP3 DUP9 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129D JUMPI PUSH2 0x129C PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AA DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12BB DUP6 DUP3 DUP7 ADD PUSH2 0x120F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D9 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E7 DUP5 DUP3 DUP6 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F9 DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1312 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x132E JUMPI PUSH2 0x132D PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133B DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x134C DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x139A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13AD JUMPI PUSH2 0x13AC PUSH2 0x1356 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13C6 PUSH0 DUP4 ADD DUP7 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x13D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x13E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x114D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x141F DUP3 PUSH2 0x107E JUMP JUMPDEST SWAP2 POP PUSH2 0x142A DUP4 PUSH2 0x107E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xA7 PREVRANDAO SLT REVERT 0xCD 0xB9 CALLDATACOPY SWAP5 0x2E PUSH31 0xB4FE27EBAE988ACC551179E2F47C6D9BFD58873E6664736F6C634300081C00 CALLER ",
							"sourceMap": "24942:1434:0:-:0;;;25185:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24990:4;12502:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12576:5;12568;:13;;;;;;:::i;:::-;;12601:7;12591;:17;;;;;;:::i;:::-;;12502:113;;23069:1;23045:26;;:12;:26;;;23041:95;;23122:1;23094:31;;;;;;;;;;;:::i;:::-;;;;;;;;23041:95;23145:32;23164:12;23145:18;;;:32;;:::i;:::-;22997:187;25261:31:::1;25267:10;25279:12;25261:5;;;:31;;:::i;:::-;25185:114:::0;24942:1434;;24684:187;24757:16;24776:6;;;;;;;;;;;24757:25;;24801:8;24792:6;;:17;;;;;;;;;;;;;;;;;;24855:8;24824:40;;24845:8;24824:40;;;;;;;;;;;;24747:124;24684:187;:::o;18359:208::-;18448:1;18429:21;;:7;:21;;;18425:91;;18502:1;18473:32;;;;;;;;;;;:::i;:::-;;;;;;;;18425:91;18525:35;18541:1;18545:7;18554:5;18525:7;;;:35;;:::i;:::-;18359:208;;:::o;16909:1107::-;17014:1;16998:18;;:4;:18;;;16994:540;;17150:5;17134:12;;:21;;;;;;;:::i;:::-;;;;;;;;16994:540;;;17186:19;17208:9;:15;17218:4;17208:15;;;;;;;;;;;;;;;;17186:37;;17255:5;17241:11;:19;17237:115;;;17312:4;17318:11;17331:5;17287:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17237:115;17504:5;17490:11;:19;17472:9;:15;17482:4;17472:15;;;;;;;;;;;;;;;:37;;;;17172:362;16994:540;17562:1;17548:16;;:2;:16;;;17544:425;;17727:5;17711:12;;:21;;;;;;;;;;;17544:425;;;17939:5;17922:9;:13;17932:2;17922:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17544:425;17999:2;17984:25;;17993:4;17984:25;;;18003:5;17984:25;;;;;;:::i;:::-;;;;;;;;16909:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;24942:1434:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 2122,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 2984,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 2662,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 2527,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 2115,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 2140,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 2789,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2287,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3447,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 1853,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1126,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1522,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blacklist_969": {
									"entryPoint": 1376,
									"id": 969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@blacklists_937": {
									"entryPoint": 1160,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1084": {
									"entryPoint": 1472,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1250,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@limited_927": {
									"entryPoint": 1610,
									"id": 927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxHoldingAmount_929": {
									"entryPoint": 1629,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minHoldingAmount_931": {
									"entryPoint": 1198,
									"id": 931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 982,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": 1635,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 1591,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRule_999": {
									"entryPoint": 1258,
									"id": 999,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1675,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1189,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1204,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 1983,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 1819,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapV2Pair_933": {
									"entryPoint": 1485,
									"id": 933,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_addresst_uint256t_uint256": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9088:1",
										"nodeType": "YulBlock",
										"src": "0:9088:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3405:263:1",
													"nodeType": "YulBlock",
													"src": "3405:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:1",
																"nodeType": "YulBlock",
																"src": "3451:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:1"
																			},
																			"nativeSrc": "3453:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:1"
																		},
																		"nativeSrc": "3453:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:1"
																		},
																		"nativeSrc": "3422:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:1"
																},
																"nativeSrc": "3418:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:1"
															},
															"nativeSrc": "3415:119:1",
															"nodeType": "YulIf",
															"src": "3415:119:1"
														},
														{
															"nativeSrc": "3544:117:1",
															"nodeType": "YulBlock",
															"src": "3544:117:1",
															"statements": [
																{
																	"nativeSrc": "3559:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:1"
																				},
																				"nativeSrc": "3619:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:1"
																		},
																		"nativeSrc": "3598:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:1",
														"nodeType": "YulTypedName",
														"src": "3375:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:1",
														"nodeType": "YulTypedName",
														"src": "3386:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:1",
														"nodeType": "YulTypedName",
														"src": "3398:6:1",
														"type": ""
													}
												],
												"src": "3339:329:1"
											},
											{
												"body": {
													"nativeSrc": "3739:53:1",
													"nodeType": "YulBlock",
													"src": "3739:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:1"
																		},
																		"nativeSrc": "3761:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:1"
																},
																"nativeSrc": "3749:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:1"
															},
															"nativeSrc": "3749:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:1",
														"nodeType": "YulTypedName",
														"src": "3727:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:1",
														"nodeType": "YulTypedName",
														"src": "3734:3:1",
														"type": ""
													}
												],
												"src": "3674:118:1"
											},
											{
												"body": {
													"nativeSrc": "3896:124:1",
													"nodeType": "YulBlock",
													"src": "3896:124:1",
													"statements": [
														{
															"nativeSrc": "3906:26:1",
															"nodeType": "YulAssignment",
															"src": "3906:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:1"
																},
																"nativeSrc": "3914:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:1"
																		},
																		"nativeSrc": "3995:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:1"
																},
																"nativeSrc": "3942:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:1"
															},
															"nativeSrc": "3942:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:1",
														"nodeType": "YulTypedName",
														"src": "3868:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:1",
														"nodeType": "YulTypedName",
														"src": "3880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:1",
														"nodeType": "YulTypedName",
														"src": "3891:4:1",
														"type": ""
													}
												],
												"src": "3798:222:1"
											},
											{
												"body": {
													"nativeSrc": "4126:519:1",
													"nodeType": "YulBlock",
													"src": "4126:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:1",
																"nodeType": "YulBlock",
																"src": "4172:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:1"
																			},
																			"nativeSrc": "4174:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:1"
																		},
																		"nativeSrc": "4174:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:1"
																		},
																		"nativeSrc": "4143:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:1"
																},
																"nativeSrc": "4139:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:1"
															},
															"nativeSrc": "4136:119:1",
															"nodeType": "YulIf",
															"src": "4136:119:1"
														},
														{
															"nativeSrc": "4265:117:1",
															"nodeType": "YulBlock",
															"src": "4265:117:1",
															"statements": [
																{
																	"nativeSrc": "4280:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:1"
																				},
																				"nativeSrc": "4340:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:1"
																		},
																		"nativeSrc": "4319:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:1",
															"nodeType": "YulBlock",
															"src": "4392:118:1",
															"statements": [
																{
																	"nativeSrc": "4407:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:1"
																				},
																				"nativeSrc": "4468:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:1"
																		},
																		"nativeSrc": "4447:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:1",
															"nodeType": "YulBlock",
															"src": "4520:118:1",
															"statements": [
																{
																	"nativeSrc": "4535:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:1"
																				},
																				"nativeSrc": "4596:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:1"
																		},
																		"nativeSrc": "4575:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:1",
														"nodeType": "YulTypedName",
														"src": "4080:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:1",
														"nodeType": "YulTypedName",
														"src": "4091:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:1",
														"nodeType": "YulTypedName",
														"src": "4103:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:1",
														"nodeType": "YulTypedName",
														"src": "4111:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:1",
														"nodeType": "YulTypedName",
														"src": "4119:6:1",
														"type": ""
													}
												],
												"src": "4026:619:1"
											},
											{
												"body": {
													"nativeSrc": "4694:43:1",
													"nodeType": "YulBlock",
													"src": "4694:43:1",
													"statements": [
														{
															"nativeSrc": "4704:27:1",
															"nodeType": "YulAssignment",
															"src": "4704:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:1"
																},
																"nativeSrc": "4715:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:1",
														"nodeType": "YulTypedName",
														"src": "4676:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:1",
														"nodeType": "YulTypedName",
														"src": "4686:7:1",
														"type": ""
													}
												],
												"src": "4651:86:1"
											},
											{
												"body": {
													"nativeSrc": "4804:51:1",
													"nodeType": "YulBlock",
													"src": "4804:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:1"
																		},
																		"nativeSrc": "4826:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:1"
																},
																"nativeSrc": "4814:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:1"
															},
															"nativeSrc": "4814:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:1",
														"nodeType": "YulTypedName",
														"src": "4792:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:1",
														"nodeType": "YulTypedName",
														"src": "4799:3:1",
														"type": ""
													}
												],
												"src": "4743:112:1"
											},
											{
												"body": {
													"nativeSrc": "4955:120:1",
													"nodeType": "YulBlock",
													"src": "4955:120:1",
													"statements": [
														{
															"nativeSrc": "4965:26:1",
															"nodeType": "YulAssignment",
															"src": "4965:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:1"
																},
																"nativeSrc": "4973:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:1"
																		},
																		"nativeSrc": "5050:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:1"
																},
																"nativeSrc": "5001:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:1"
															},
															"nativeSrc": "5001:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:1",
														"nodeType": "YulTypedName",
														"src": "4927:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:1",
														"nodeType": "YulTypedName",
														"src": "4939:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:1",
														"nodeType": "YulTypedName",
														"src": "4950:4:1",
														"type": ""
													}
												],
												"src": "4861:214:1"
											},
											{
												"body": {
													"nativeSrc": "5121:76:1",
													"nodeType": "YulBlock",
													"src": "5121:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5175:16:1",
																"nodeType": "YulBlock",
																"src": "5175:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5184:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5184:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5187:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5187:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5177:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5177:6:1"
																			},
																			"nativeSrc": "5177:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5177:12:1"
																		},
																		"nativeSrc": "5177:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5177:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5144:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5144:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5166:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5166:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5151:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "5151:14:1"
																				},
																				"nativeSrc": "5151:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5151:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5141:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5141:2:1"
																		},
																		"nativeSrc": "5141:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5141:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5134:6:1"
																},
																"nativeSrc": "5134:40:1",
																"nodeType": "YulFunctionCall",
																"src": "5134:40:1"
															},
															"nativeSrc": "5131:60:1",
															"nodeType": "YulIf",
															"src": "5131:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5081:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5114:5:1",
														"nodeType": "YulTypedName",
														"src": "5114:5:1",
														"type": ""
													}
												],
												"src": "5081:116:1"
											},
											{
												"body": {
													"nativeSrc": "5252:84:1",
													"nodeType": "YulBlock",
													"src": "5252:84:1",
													"statements": [
														{
															"nativeSrc": "5262:29:1",
															"nodeType": "YulAssignment",
															"src": "5262:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5284:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5284:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5271:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5271:12:1"
																},
																"nativeSrc": "5271:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5271:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5262:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5262:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5324:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5324:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5300:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:23:1"
																},
																"nativeSrc": "5300:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:30:1"
															},
															"nativeSrc": "5300:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5300:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5203:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5230:6:1",
														"nodeType": "YulTypedName",
														"src": "5230:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5238:3:1",
														"nodeType": "YulTypedName",
														"src": "5238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5246:5:1",
														"nodeType": "YulTypedName",
														"src": "5246:5:1",
														"type": ""
													}
												],
												"src": "5203:133:1"
											},
											{
												"body": {
													"nativeSrc": "5456:645:1",
													"nodeType": "YulBlock",
													"src": "5456:645:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5503:83:1",
																"nodeType": "YulBlock",
																"src": "5503:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5505:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5505:77:1"
																			},
																			"nativeSrc": "5505:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5505:79:1"
																		},
																		"nativeSrc": "5505:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5505:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5477:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5477:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5486:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5486:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:1"
																		},
																		"nativeSrc": "5473:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5498:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5498:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5469:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:1"
																},
																"nativeSrc": "5469:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5469:33:1"
															},
															"nativeSrc": "5466:120:1",
															"nodeType": "YulIf",
															"src": "5466:120:1"
														},
														{
															"nativeSrc": "5596:114:1",
															"nodeType": "YulBlock",
															"src": "5596:114:1",
															"statements": [
																{
																	"nativeSrc": "5611:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5625:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5625:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5615:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5615:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5640:60:1",
																	"nodeType": "YulAssignment",
																	"src": "5640:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5672:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5672:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5683:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5683:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5668:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5668:3:1"
																				},
																				"nativeSrc": "5668:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5668:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5692:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5692:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5650:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5650:17:1"
																		},
																		"nativeSrc": "5650:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5650:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5640:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5640:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5720:118:1",
															"nodeType": "YulBlock",
															"src": "5720:118:1",
															"statements": [
																{
																	"nativeSrc": "5735:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5749:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5765:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5765:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5800:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5800:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5811:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5811:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5796:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5796:3:1"
																				},
																				"nativeSrc": "5796:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5796:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5820:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5820:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5775:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5775:20:1"
																		},
																		"nativeSrc": "5775:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5775:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5765:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5765:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5848:118:1",
															"nodeType": "YulBlock",
															"src": "5848:118:1",
															"statements": [
																{
																	"nativeSrc": "5863:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5863:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5877:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5877:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5867:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5867:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5893:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5893:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5928:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5928:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5939:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5939:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5924:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5924:3:1"
																				},
																				"nativeSrc": "5924:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5924:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5948:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5948:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5903:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5903:20:1"
																		},
																		"nativeSrc": "5903:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5893:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5893:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5976:118:1",
															"nodeType": "YulBlock",
															"src": "5976:118:1",
															"statements": [
																{
																	"nativeSrc": "5991:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5991:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6005:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6005:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5995:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5995:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6021:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6021:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6056:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6056:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6067:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6067:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6052:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6052:3:1"
																				},
																				"nativeSrc": "6052:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6052:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6076:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6076:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6031:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6031:20:1"
																		},
																		"nativeSrc": "6031:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6031:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6021:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6021:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_addresst_uint256t_uint256",
												"nativeSrc": "5342:759:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5402:9:1",
														"nodeType": "YulTypedName",
														"src": "5402:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5413:7:1",
														"nodeType": "YulTypedName",
														"src": "5413:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5425:6:1",
														"nodeType": "YulTypedName",
														"src": "5425:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5433:6:1",
														"nodeType": "YulTypedName",
														"src": "5433:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5441:6:1",
														"nodeType": "YulTypedName",
														"src": "5441:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5449:6:1",
														"nodeType": "YulTypedName",
														"src": "5449:6:1",
														"type": ""
													}
												],
												"src": "5342:759:1"
											},
											{
												"body": {
													"nativeSrc": "6187:388:1",
													"nodeType": "YulBlock",
													"src": "6187:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6233:83:1",
																"nodeType": "YulBlock",
																"src": "6233:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6235:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6235:77:1"
																			},
																			"nativeSrc": "6235:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:79:1"
																		},
																		"nativeSrc": "6235:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6235:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6208:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6208:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6217:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6217:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6204:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6204:3:1"
																		},
																		"nativeSrc": "6204:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6204:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6229:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6229:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6200:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:1"
																},
																"nativeSrc": "6200:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6200:32:1"
															},
															"nativeSrc": "6197:119:1",
															"nodeType": "YulIf",
															"src": "6197:119:1"
														},
														{
															"nativeSrc": "6326:117:1",
															"nodeType": "YulBlock",
															"src": "6326:117:1",
															"statements": [
																{
																	"nativeSrc": "6341:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6341:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6355:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6355:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6345:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6345:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6370:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6370:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6405:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6405:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6416:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6416:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6401:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6401:3:1"
																				},
																				"nativeSrc": "6401:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6401:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6425:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6425:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6380:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6380:20:1"
																		},
																		"nativeSrc": "6380:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6380:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6370:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6370:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6453:115:1",
															"nodeType": "YulBlock",
															"src": "6453:115:1",
															"statements": [
																{
																	"nativeSrc": "6468:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6468:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6482:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6482:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6472:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6472:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6498:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6498:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6530:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6530:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6541:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6541:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6526:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6526:3:1"
																				},
																				"nativeSrc": "6526:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6526:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6550:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6550:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6508:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6508:17:1"
																		},
																		"nativeSrc": "6508:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6508:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6498:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6498:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6107:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6149:9:1",
														"nodeType": "YulTypedName",
														"src": "6149:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6160:7:1",
														"nodeType": "YulTypedName",
														"src": "6160:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6172:6:1",
														"nodeType": "YulTypedName",
														"src": "6172:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6180:6:1",
														"nodeType": "YulTypedName",
														"src": "6180:6:1",
														"type": ""
													}
												],
												"src": "6107:468:1"
											},
											{
												"body": {
													"nativeSrc": "6647:263:1",
													"nodeType": "YulBlock",
													"src": "6647:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6693:83:1",
																"nodeType": "YulBlock",
																"src": "6693:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6695:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6695:77:1"
																			},
																			"nativeSrc": "6695:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6695:79:1"
																		},
																		"nativeSrc": "6695:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6695:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6668:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6668:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6677:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6664:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6664:3:1"
																		},
																		"nativeSrc": "6664:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6664:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6689:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6689:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6660:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:1"
																},
																"nativeSrc": "6660:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6660:32:1"
															},
															"nativeSrc": "6657:119:1",
															"nodeType": "YulIf",
															"src": "6657:119:1"
														},
														{
															"nativeSrc": "6786:117:1",
															"nodeType": "YulBlock",
															"src": "6786:117:1",
															"statements": [
																{
																	"nativeSrc": "6801:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6801:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6815:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6815:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6805:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6805:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6830:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6830:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6865:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6865:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6876:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6876:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6861:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6861:3:1"
																				},
																				"nativeSrc": "6861:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6861:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6885:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6885:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6840:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6840:20:1"
																		},
																		"nativeSrc": "6840:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6840:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6830:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6830:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6581:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6617:9:1",
														"nodeType": "YulTypedName",
														"src": "6617:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6628:7:1",
														"nodeType": "YulTypedName",
														"src": "6628:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6640:6:1",
														"nodeType": "YulTypedName",
														"src": "6640:6:1",
														"type": ""
													}
												],
												"src": "6581:329:1"
											},
											{
												"body": {
													"nativeSrc": "6981:53:1",
													"nodeType": "YulBlock",
													"src": "6981:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6998:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7021:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7021:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7003:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7003:17:1"
																		},
																		"nativeSrc": "7003:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7003:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6991:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6991:6:1"
																},
																"nativeSrc": "6991:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6991:37:1"
															},
															"nativeSrc": "6991:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6991:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6916:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6969:5:1",
														"nodeType": "YulTypedName",
														"src": "6969:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6976:3:1",
														"nodeType": "YulTypedName",
														"src": "6976:3:1",
														"type": ""
													}
												],
												"src": "6916:118:1"
											},
											{
												"body": {
													"nativeSrc": "7138:124:1",
													"nodeType": "YulBlock",
													"src": "7138:124:1",
													"statements": [
														{
															"nativeSrc": "7148:26:1",
															"nodeType": "YulAssignment",
															"src": "7148:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7160:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7160:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7171:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7171:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:1"
																},
																"nativeSrc": "7156:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7156:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7148:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7148:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7228:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7228:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7241:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7252:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7252:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7237:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:1"
																		},
																		"nativeSrc": "7237:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7184:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7184:43:1"
																},
																"nativeSrc": "7184:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7184:71:1"
															},
															"nativeSrc": "7184:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7184:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7040:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7110:9:1",
														"nodeType": "YulTypedName",
														"src": "7110:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7122:6:1",
														"nodeType": "YulTypedName",
														"src": "7122:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7133:4:1",
														"nodeType": "YulTypedName",
														"src": "7133:4:1",
														"type": ""
													}
												],
												"src": "7040:222:1"
											},
											{
												"body": {
													"nativeSrc": "7351:391:1",
													"nodeType": "YulBlock",
													"src": "7351:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7397:83:1",
																"nodeType": "YulBlock",
																"src": "7397:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7399:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7399:77:1"
																			},
																			"nativeSrc": "7399:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7399:79:1"
																		},
																		"nativeSrc": "7399:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7399:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7372:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7372:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7381:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:1"
																		},
																		"nativeSrc": "7368:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7368:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7393:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7364:3:1"
																},
																"nativeSrc": "7364:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7364:32:1"
															},
															"nativeSrc": "7361:119:1",
															"nodeType": "YulIf",
															"src": "7361:119:1"
														},
														{
															"nativeSrc": "7490:117:1",
															"nodeType": "YulBlock",
															"src": "7490:117:1",
															"statements": [
																{
																	"nativeSrc": "7505:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7505:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7519:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7519:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7509:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7509:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7534:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7534:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7569:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7569:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7580:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7580:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7565:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7565:3:1"
																				},
																				"nativeSrc": "7565:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7565:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7589:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7589:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7544:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7544:20:1"
																		},
																		"nativeSrc": "7544:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7544:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7534:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7534:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7617:118:1",
															"nodeType": "YulBlock",
															"src": "7617:118:1",
															"statements": [
																{
																	"nativeSrc": "7632:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7632:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7646:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7646:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7636:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7636:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7662:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7662:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7697:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7697:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7708:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7708:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7693:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7693:3:1"
																				},
																				"nativeSrc": "7693:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7693:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7717:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7717:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7672:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7672:20:1"
																		},
																		"nativeSrc": "7672:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7672:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7662:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7662:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7268:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7313:9:1",
														"nodeType": "YulTypedName",
														"src": "7313:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7324:7:1",
														"nodeType": "YulTypedName",
														"src": "7324:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7336:6:1",
														"nodeType": "YulTypedName",
														"src": "7336:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7344:6:1",
														"nodeType": "YulTypedName",
														"src": "7344:6:1",
														"type": ""
													}
												],
												"src": "7268:474:1"
											},
											{
												"body": {
													"nativeSrc": "7776:152:1",
													"nodeType": "YulBlock",
													"src": "7776:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7793:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7793:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7796:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7796:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7786:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:1"
																},
																"nativeSrc": "7786:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7786:88:1"
															},
															"nativeSrc": "7786:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7786:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7890:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7890:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7893:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7893:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7883:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7883:6:1"
																},
																"nativeSrc": "7883:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7883:15:1"
															},
															"nativeSrc": "7883:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7883:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7914:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7914:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7917:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7917:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7907:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:1"
																},
																"nativeSrc": "7907:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7907:15:1"
															},
															"nativeSrc": "7907:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7907:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7748:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7748:180:1"
											},
											{
												"body": {
													"nativeSrc": "7985:269:1",
													"nodeType": "YulBlock",
													"src": "7985:269:1",
													"statements": [
														{
															"nativeSrc": "7995:22:1",
															"nodeType": "YulAssignment",
															"src": "7995:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8009:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8009:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8015:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8015:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8005:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8005:3:1"
																},
																"nativeSrc": "8005:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8005:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7995:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:1"
																}
															]
														},
														{
															"nativeSrc": "8026:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8026:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8056:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8056:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8062:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8052:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:1"
																},
																"nativeSrc": "8052:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8052:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8030:18:1",
																	"nodeType": "YulTypedName",
																	"src": "8030:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8103:51:1",
																"nodeType": "YulBlock",
																"src": "8103:51:1",
																"statements": [
																	{
																		"nativeSrc": "8117:27:1",
																		"nodeType": "YulAssignment",
																		"src": "8117:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8131:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8131:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8139:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8139:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8127:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8127:3:1"
																			},
																			"nativeSrc": "8127:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8127:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8117:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8117:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8083:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8083:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8076:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:1"
																},
																"nativeSrc": "8076:26:1",
																"nodeType": "YulFunctionCall",
																"src": "8076:26:1"
															},
															"nativeSrc": "8073:81:1",
															"nodeType": "YulIf",
															"src": "8073:81:1"
														},
														{
															"body": {
																"nativeSrc": "8206:42:1",
																"nodeType": "YulBlock",
																"src": "8206:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8220:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8220:16:1"
																			},
																			"nativeSrc": "8220:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:18:1"
																		},
																		"nativeSrc": "8220:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8220:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8170:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8170:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8193:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8193:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8201:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8201:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8190:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8190:2:1"
																		},
																		"nativeSrc": "8190:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8167:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8167:2:1"
																},
																"nativeSrc": "8167:38:1",
																"nodeType": "YulFunctionCall",
																"src": "8167:38:1"
															},
															"nativeSrc": "8164:84:1",
															"nodeType": "YulIf",
															"src": "8164:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7934:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7969:4:1",
														"nodeType": "YulTypedName",
														"src": "7969:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7978:6:1",
														"nodeType": "YulTypedName",
														"src": "7978:6:1",
														"type": ""
													}
												],
												"src": "7934:320:1"
											},
											{
												"body": {
													"nativeSrc": "8414:288:1",
													"nodeType": "YulBlock",
													"src": "8414:288:1",
													"statements": [
														{
															"nativeSrc": "8424:26:1",
															"nodeType": "YulAssignment",
															"src": "8424:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8436:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8436:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8447:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8447:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8432:3:1"
																},
																"nativeSrc": "8432:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8432:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8424:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8424:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8504:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8504:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8517:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8517:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8528:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8528:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8513:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8513:3:1"
																		},
																		"nativeSrc": "8513:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8513:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8460:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8460:43:1"
																},
																"nativeSrc": "8460:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8460:71:1"
															},
															"nativeSrc": "8460:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8460:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8585:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8585:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8598:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8598:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8609:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8609:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8594:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8594:3:1"
																		},
																		"nativeSrc": "8594:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8594:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8541:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8541:43:1"
																},
																"nativeSrc": "8541:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8541:72:1"
															},
															"nativeSrc": "8541:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8541:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8667:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8667:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8680:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8680:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8691:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8691:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8676:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8676:3:1"
																		},
																		"nativeSrc": "8676:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8676:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8623:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8623:43:1"
																},
																"nativeSrc": "8623:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8623:72:1"
															},
															"nativeSrc": "8623:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8623:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8260:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8370:9:1",
														"nodeType": "YulTypedName",
														"src": "8370:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8382:6:1",
														"nodeType": "YulTypedName",
														"src": "8382:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8390:6:1",
														"nodeType": "YulTypedName",
														"src": "8390:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8398:6:1",
														"nodeType": "YulTypedName",
														"src": "8398:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8409:4:1",
														"nodeType": "YulTypedName",
														"src": "8409:4:1",
														"type": ""
													}
												],
												"src": "8260:442:1"
											},
											{
												"body": {
													"nativeSrc": "8736:152:1",
													"nodeType": "YulBlock",
													"src": "8736:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8753:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8753:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8756:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8756:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8746:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:1"
																},
																"nativeSrc": "8746:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8746:88:1"
															},
															"nativeSrc": "8746:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8746:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8850:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8853:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8853:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8843:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:1"
																},
																"nativeSrc": "8843:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8843:15:1"
															},
															"nativeSrc": "8843:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8843:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8874:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8874:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8877:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8877:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8867:6:1"
																},
																"nativeSrc": "8867:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8867:15:1"
															},
															"nativeSrc": "8867:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8867:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8708:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8708:180:1"
											},
											{
												"body": {
													"nativeSrc": "8938:147:1",
													"nodeType": "YulBlock",
													"src": "8938:147:1",
													"statements": [
														{
															"nativeSrc": "8948:25:1",
															"nodeType": "YulAssignment",
															"src": "8948:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8971:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8971:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8953:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8953:17:1"
																},
																"nativeSrc": "8953:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8953:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8948:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8948:1:1"
																}
															]
														},
														{
															"nativeSrc": "8982:25:1",
															"nodeType": "YulAssignment",
															"src": "8982:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9005:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9005:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8987:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8987:17:1"
																},
																"nativeSrc": "8987:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8987:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8982:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8982:1:1"
																}
															]
														},
														{
															"nativeSrc": "9016:16:1",
															"nodeType": "YulAssignment",
															"src": "9016:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9027:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9027:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9030:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9030:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9023:3:1"
																},
																"nativeSrc": "9023:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9023:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9016:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9016:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9056:22:1",
																"nodeType": "YulBlock",
																"src": "9056:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9058:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9058:16:1"
																			},
																			"nativeSrc": "9058:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9058:18:1"
																		},
																		"nativeSrc": "9058:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9058:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9048:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9048:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9051:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9051:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9045:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9045:2:1"
																},
																"nativeSrc": "9045:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9045:10:1"
															},
															"nativeSrc": "9042:36:1",
															"nodeType": "YulIf",
															"src": "9042:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8894:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8925:1:1",
														"nodeType": "YulTypedName",
														"src": "8925:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8928:1:1",
														"nodeType": "YulTypedName",
														"src": "8928:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8934:3:1",
														"nodeType": "YulTypedName",
														"src": "8934:3:1",
														"type": ""
													}
												],
												"src": "8894:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806349bd5a5e116100ab5780638da5cb5b1161006f5780638da5cb5b1461031e57806395d89b411461033c578063a9059cbb1461035a578063dd62ed3e1461038a578063f2fde38b146103ba5761012a565b806349bd5a5e1461028a57806370a08231146102a8578063715018a6146102d8578063860a32ec146102e257806389f9a1d3146103005761012a565b806323b872dd116100f257806323b872dd146101e8578063313ce567146102185780633aa633aa14610236578063404e51291461025257806342966c681461026e5761012a565b806306fdde031461012e578063095ea7b31461014c57806316c021291461017c57806318160ddd146101ac5780631ab99e12146101ca575b5f5ffd5b6101366103d6565b6040516101439190611000565b60405180910390f35b610166600480360381019061016191906110b1565b610466565b6040516101739190611109565b60405180910390f35b61019660048036038101906101919190611122565b610488565b6040516101a39190611109565b60405180910390f35b6101b46104a5565b6040516101c1919061115c565b60405180910390f35b6101d26104ae565b6040516101df919061115c565b60405180910390f35b61020260048036038101906101fd9190611175565b6104b4565b60405161020f9190611109565b60405180910390f35b6102206104e2565b60405161022d91906111e0565b60405180910390f35b610250600480360381019061024b9190611223565b6104ea565b005b61026c60048036038101906102679190611287565b610560565b005b610288600480360381019061028391906112c5565b6105c0565b005b6102926105cd565b60405161029f91906112ff565b60405180910390f35b6102c260048036038101906102bd9190611122565b6105f2565b6040516102cf919061115c565b60405180910390f35b6102e0610637565b005b6102ea61064a565b6040516102f79190611109565b60405180910390f35b61030861065d565b604051610315919061115c565b60405180910390f35b610326610663565b60405161033391906112ff565b60405180910390f35b61034461068b565b6040516103519190611000565b60405180910390f35b610374600480360381019061036f91906110b1565b61071b565b6040516103819190611109565b60405180910390f35b6103a4600480360381019061039f9190611318565b61073d565b6040516103b1919061115c565b60405180910390f35b6103d460048036038101906103cf9190611122565b6107bf565b005b6060600380546103e590611383565b80601f016020809104026020016040519081016040528092919081815260200182805461041190611383565b801561045c5780601f106104335761010080835404028352916020019161045c565b820191905f5260205f20905b81548152906001019060200180831161043f57829003601f168201915b5050505050905090565b5f5f610470610843565b905061047d81858561084a565b600191505092915050565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f600254905090565b60075481565b5f5f6104be610843565b90506104cb85828561085c565b6104d68585856108ef565b60019150509392505050565b5f6012905090565b6104f26109df565b83600560146101000a81548160ff0219169083151502179055508260085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055508060078190555050505050565b6105686109df565b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b6105ca3382610a66565b50565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61063f6109df565b6106485f610ae5565b565b600560149054906101000a900460ff1681565b60065481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069a90611383565b80601f01602080910402602001604051908101604052809291908181526020018280546106c690611383565b80156107115780601f106106e857610100808354040283529160200191610711565b820191905f5260205f20905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b5f5f610725610843565b90506107328185856108ef565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107c76109df565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610837575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161082e91906112ff565b60405180910390fd5b61084081610ae5565b50565b5f33905090565b6108578383836001610ba8565b505050565b5f610867848461073d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108e957818110156108da578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108d1939291906113b3565b60405180910390fd5b6108e884848484035f610ba8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361095f575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095691906112ff565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109cf575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109c691906112ff565b60405180910390fd5b6109da838383610d77565b505050565b6109e7610843565b73ffffffffffffffffffffffffffffffffffffffff16610a05610663565b73ffffffffffffffffffffffffffffffffffffffff1614610a6457610a28610843565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a5b91906112ff565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ad6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610acd91906112ff565b60405180910390fd5b610ae1825f83610d77565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c18575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c0f91906112ff565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c88575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c7f91906112ff565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d71578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d68919061115c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dc7578060025f828254610dbb9190611415565b92505081905550610e95565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e50578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e47939291906113b3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610edc578060025f8282540392505081905550610f26565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f83919061115c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610fd282610f90565b610fdc8185610f9a565b9350610fec818560208601610faa565b610ff581610fb8565b840191505092915050565b5f6020820190508181035f8301526110188184610fc8565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104d82611024565b9050919050565b61105d81611043565b8114611067575f5ffd5b50565b5f8135905061107881611054565b92915050565b5f819050919050565b6110908161107e565b811461109a575f5ffd5b50565b5f813590506110ab81611087565b92915050565b5f5f604083850312156110c7576110c6611020565b5b5f6110d48582860161106a565b92505060206110e58582860161109d565b9150509250929050565b5f8115159050919050565b611103816110ef565b82525050565b5f60208201905061111c5f8301846110fa565b92915050565b5f6020828403121561113757611136611020565b5b5f6111448482850161106a565b91505092915050565b6111568161107e565b82525050565b5f60208201905061116f5f83018461114d565b92915050565b5f5f5f6060848603121561118c5761118b611020565b5b5f6111998682870161106a565b93505060206111aa8682870161106a565b92505060406111bb8682870161109d565b9150509250925092565b5f60ff82169050919050565b6111da816111c5565b82525050565b5f6020820190506111f35f8301846111d1565b92915050565b611202816110ef565b811461120c575f5ffd5b50565b5f8135905061121d816111f9565b92915050565b5f5f5f5f6080858703121561123b5761123a611020565b5b5f6112488782880161120f565b94505060206112598782880161106a565b935050604061126a8782880161109d565b925050606061127b8782880161109d565b91505092959194509250565b5f5f6040838503121561129d5761129c611020565b5b5f6112aa8582860161106a565b92505060206112bb8582860161120f565b9150509250929050565b5f602082840312156112da576112d9611020565b5b5f6112e78482850161109d565b91505092915050565b6112f981611043565b82525050565b5f6020820190506113125f8301846112f0565b92915050565b5f5f6040838503121561132e5761132d611020565b5b5f61133b8582860161106a565b925050602061134c8582860161106a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061139a57607f821691505b6020821081036113ad576113ac611356565b5b50919050565b5f6060820190506113c65f8301866112f0565b6113d3602083018561114d565b6113e0604083018461114d565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61141f8261107e565b915061142a8361107e565b9250828201905080821115611442576114416113e8565b5b9291505056fea2646970667358221220d3a74412fdcdb937942e7eb4fe27ebae988acc551179e2f47c6d9bfd58873e6664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49BD5A5E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x860A32EC EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x89F9A1D3 EQ PUSH2 0x300 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x3AA633AA EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x404E5129 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x16C02129 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x1AB99E12 EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x433 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x470 PUSH2 0x843 JUMP JUMPDEST SWAP1 POP PUSH2 0x47D DUP2 DUP6 DUP6 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4BE PUSH2 0x843 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CB DUP6 DUP3 DUP6 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x4D6 DUP6 DUP6 DUP6 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F2 PUSH2 0x9DF JUMP JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x568 PUSH2 0x9DF JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x5CA CALLER DUP3 PUSH2 0xA66 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63F PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x648 PUSH0 PUSH2 0xAE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69A SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C6 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x711 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x711 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x725 PUSH2 0x843 JUMP JUMPDEST SWAP1 POP PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C7 PUSH2 0x9DF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x837 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x840 DUP2 PUSH2 0xAE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x857 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x867 DUP5 DUP5 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8E9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8DA JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DA DUP4 DUP4 DUP4 PUSH2 0xD77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E7 PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA05 PUSH2 0x663 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA64 JUMPI PUSH2 0xA28 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE1 DUP3 PUSH0 DUP4 PUSH2 0xD77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC18 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC88 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD71 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE95 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE50 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF26 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD2 DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0xFDC DUP2 DUP6 PUSH2 0xF9A JUMP JUMPDEST SWAP4 POP PUSH2 0xFEC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFF5 DUP2 PUSH2 0xFB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1018 DUP2 DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104D DUP3 PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP2 EQ PUSH2 0x1067 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1078 DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1090 DUP2 PUSH2 0x107E JUMP JUMPDEST DUP2 EQ PUSH2 0x109A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10AB DUP2 PUSH2 0x1087 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D4 DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10E5 DUP6 DUP3 DUP7 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1103 DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111C PUSH0 DUP4 ADD DUP5 PUSH2 0x10FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1144 DUP5 DUP3 DUP6 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1156 DUP2 PUSH2 0x107E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116F PUSH0 DUP4 ADD DUP5 PUSH2 0x114D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1199 DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11AA DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11BB DUP7 DUP3 DUP8 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DA DUP2 PUSH2 0x11C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x11D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1202 DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP2 EQ PUSH2 0x120C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121D DUP2 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x123B JUMPI PUSH2 0x123A PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1248 DUP8 DUP3 DUP9 ADD PUSH2 0x120F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1259 DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x126A DUP8 DUP3 DUP9 ADD PUSH2 0x109D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x127B DUP8 DUP3 DUP9 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129D JUMPI PUSH2 0x129C PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AA DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12BB DUP6 DUP3 DUP7 ADD PUSH2 0x120F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D9 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E7 DUP5 DUP3 DUP6 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F9 DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1312 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x132E JUMPI PUSH2 0x132D PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133B DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x134C DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x139A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13AD JUMPI PUSH2 0x13AC PUSH2 0x1356 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13C6 PUSH0 DUP4 ADD DUP7 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x13D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x13E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x114D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x141F DUP3 PUSH2 0x107E JUMP JUMPDEST SWAP2 POP PUSH2 0x142A DUP4 PUSH2 0x107E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xA7 PREVRANDAO SLT REVERT 0xCD 0xB9 CALLDATACOPY SWAP5 0x2E PUSH31 0xB4FE27EBAE988ACC551179E2F47C6D9BFD58873E6664736F6C634300081C00 CALLER ",
							"sourceMap": "24942:1434:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14899:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25136:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13750:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25065:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15677:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13608:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25444:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25305:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26295:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25102:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13905:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24065:101;;;:::i;:::-;;25003:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25028:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23410:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12882:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14216:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14452:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24315:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12680:89;12725:13;12757:5;12750:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:89;:::o;14899:186::-;14972:4;14988:13;15004:12;:10;:12::i;:::-;14988:28;;15026:31;15035:5;15042:7;15051:5;15026:8;:31::i;:::-;15074:4;15067:11;;;14899:186;;;;:::o;25136:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;13750:97::-;13802:7;13828:12;;13821:19;;13750:97;:::o;25065:31::-;;;;:::o;15677:244::-;15764:4;15780:15;15798:12;:10;:12::i;:::-;15780:30;;15820:37;15836:4;15842:7;15851:5;15820:15;:37::i;:::-;15867:26;15877:4;15883:2;15887:5;15867:9;:26::i;:::-;15910:4;15903:11;;;15677:244;;;;;:::o;13608:82::-;13657:5;13681:2;13674:9;;13608:82;:::o;25444:296::-;23303:13;:11;:13::i;:::-;25593:8:::1;25583:7;;:18;;;;;;;;;;;;;;;;;;25627:14;25611:13;;:30;;;;;;;;;;;;;;;;;;25670:17;25651:16;:36;;;;25716:17;25697:16;:36;;;;25444:296:::0;;;;:::o;25305:133::-;23303:13;:11;:13::i;:::-;25416:15:::1;25393:10;:20;25404:8;25393:20;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;25305:133:::0;;:::o;26295:79::-;26343:24;26349:10;26361:5;26343;:24::i;:::-;26295:79;:::o;25102:28::-;;;;;;;;;;;;;:::o;13905:116::-;13970:7;13996:9;:18;14006:7;13996:18;;;;;;;;;;;;;;;;13989:25;;13905:116;;;:::o;24065:101::-;23303:13;:11;:13::i;:::-;24129:30:::1;24156:1;24129:18;:30::i;:::-;24065:101::o:0;25003:19::-;;;;;;;;;;;;;:::o;25028:31::-;;;;:::o;23410:85::-;23456:7;23482:6;;;;;;;;;;;23475:13;;23410:85;:::o;12882:93::-;12929:13;12961:7;12954:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12882:93;:::o;14216:178::-;14285:4;14301:13;14317:12;:10;:12::i;:::-;14301:28;;14339:27;14349:5;14356:2;14360:5;14339:9;:27::i;:::-;14383:4;14376:11;;;14216:178;;;;:::o;14452:140::-;14532:7;14558:11;:18;14570:5;14558:18;;;;;;;;;;;;;;;:27;14577:7;14558:27;;;;;;;;;;;;;;;;14551:34;;14452:140;;;;:::o;24315:215::-;23303:13;:11;:13::i;:::-;24419:1:::1;24399:22;;:8;:22;;::::0;24395:91:::1;;24472:1;24444:31;;;;;;;;;;;:::i;:::-;;;;;;;;24395:91;24495:28;24514:8;24495:18;:28::i;:::-;24315:215:::0;:::o;4209:96::-;4262:7;4288:10;4281:17;;4209:96;:::o;19627:128::-;19711:37;19720:5;19727:7;19736:5;19743:4;19711:8;:37::i;:::-;19627:128;;;:::o;21316:476::-;21415:24;21442:25;21452:5;21459:7;21442:9;:25::i;:::-;21415:52;;21500:17;21481:16;:36;21477:309;;;21556:5;21537:16;:24;21533:130;;;21615:7;21624:16;21642:5;21588:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21533:130;21704:57;21713:5;21720:7;21748:5;21729:16;:24;21755:5;21704:8;:57::i;:::-;21477:309;21405:387;21316:476;;;:::o;16294:300::-;16393:1;16377:18;;:4;:18;;;16373:86;;16445:1;16418:30;;;;;;;;;;;:::i;:::-;;;;;;;;16373:86;16486:1;16472:16;;:2;:16;;;16468:86;;16540:1;16511:32;;;;;;;;;;;:::i;:::-;;;;;;;;16468:86;16563:24;16571:4;16577:2;16581:5;16563:7;:24::i;:::-;16294:300;;;:::o;23568:162::-;23638:12;:10;:12::i;:::-;23627:23;;:7;:5;:7::i;:::-;:23;;;23623:101;;23700:12;:10;:12::i;:::-;23673:40;;;;;;;;;;;:::i;:::-;;;;;;;;23623:101;23568:162::o;18885:206::-;18974:1;18955:21;;:7;:21;;;18951:89;;19026:1;18999:30;;;;;;;;;;;:::i;:::-;;;;;;;;18951:89;19049:35;19057:7;19074:1;19078:5;19049:7;:35::i;:::-;18885:206;;:::o;24684:187::-;24757:16;24776:6;;;;;;;;;;;24757:25;;24801:8;24792:6;;:17;;;;;;;;;;;;;;;;;;24855:8;24824:40;;24845:8;24824:40;;;;;;;;;;;;24747:124;24684:187;:::o;20602:432::-;20731:1;20714:19;;:5;:19;;;20710:89;;20785:1;20756:32;;;;;;;;;;;:::i;:::-;;;;;;;;20710:89;20831:1;20812:21;;:7;:21;;;20808:90;;20884:1;20856:31;;;;;;;;;;;:::i;:::-;;;;;;;;20808:90;20937:5;20907:11;:18;20919:5;20907:18;;;;;;;;;;;;;;;:27;20926:7;20907:27;;;;;;;;;;;;;;;:35;;;;20956:9;20952:76;;;21002:7;20986:31;;20995:5;20986:31;;;21011:5;20986:31;;;;;;:::i;:::-;;;;;;;;20952:76;20602:432;;;;:::o;16909:1107::-;17014:1;16998:18;;:4;:18;;;16994:540;;17150:5;17134:12;;:21;;;;;;;:::i;:::-;;;;;;;;16994:540;;;17186:19;17208:9;:15;17218:4;17208:15;;;;;;;;;;;;;;;;17186:37;;17255:5;17241:11;:19;17237:115;;;17312:4;17318:11;17331:5;17287:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17237:115;17504:5;17490:11;:19;17472:9;:15;17482:4;17472:15;;;;;;;;;;;;;;;:37;;;;17172:362;16994:540;17562:1;17548:16;;:2;:16;;;17544:425;;17727:5;17711:12;;:21;;;;;;;;;;;17544:425;;;17939:5;17922:9;:13;17932:2;17922:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17544:425;17999:2;17984:25;;17993:4;17984:25;;;18003:5;17984:25;;;;;;:::i;:::-;;;;;;;;16909:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:116::-;5151:21;5166:5;5151:21;:::i;:::-;5144:5;5141:32;5131:60;;5187:1;5184;5177:12;5131:60;5081:116;:::o;5203:133::-;5246:5;5284:6;5271:20;5262:29;;5300:30;5324:5;5300:30;:::i;:::-;5203:133;;;;:::o;5342:759::-;5425:6;5433;5441;5449;5498:3;5486:9;5477:7;5473:23;5469:33;5466:120;;;5505:79;;:::i;:::-;5466:120;5625:1;5650:50;5692:7;5683:6;5672:9;5668:22;5650:50;:::i;:::-;5640:60;;5596:114;5749:2;5775:53;5820:7;5811:6;5800:9;5796:22;5775:53;:::i;:::-;5765:63;;5720:118;5877:2;5903:53;5948:7;5939:6;5928:9;5924:22;5903:53;:::i;:::-;5893:63;;5848:118;6005:2;6031:53;6076:7;6067:6;6056:9;6052:22;6031:53;:::i;:::-;6021:63;;5976:118;5342:759;;;;;;;:::o;6107:468::-;6172:6;6180;6229:2;6217:9;6208:7;6204:23;6200:32;6197:119;;;6235:79;;:::i;:::-;6197:119;6355:1;6380:53;6425:7;6416:6;6405:9;6401:22;6380:53;:::i;:::-;6370:63;;6326:117;6482:2;6508:50;6550:7;6541:6;6530:9;6526:22;6508:50;:::i;:::-;6498:60;;6453:115;6107:468;;;;;:::o;6581:329::-;6640:6;6689:2;6677:9;6668:7;6664:23;6660:32;6657:119;;;6695:79;;:::i;:::-;6657:119;6815:1;6840:53;6885:7;6876:6;6865:9;6861:22;6840:53;:::i;:::-;6830:63;;6786:117;6581:329;;;;:::o;6916:118::-;7003:24;7021:5;7003:24;:::i;:::-;6998:3;6991:37;6916:118;;:::o;7040:222::-;7133:4;7171:2;7160:9;7156:18;7148:26;;7184:71;7252:1;7241:9;7237:17;7228:6;7184:71;:::i;:::-;7040:222;;;;:::o;7268:474::-;7336:6;7344;7393:2;7381:9;7372:7;7368:23;7364:32;7361:119;;;7399:79;;:::i;:::-;7361:119;7519:1;7544:53;7589:7;7580:6;7569:9;7565:22;7544:53;:::i;:::-;7534:63;;7490:117;7646:2;7672:53;7717:7;7708:6;7697:9;7693:22;7672:53;:::i;:::-;7662:63;;7617:118;7268:474;;;;;:::o;7748:180::-;7796:77;7793:1;7786:88;7893:4;7890:1;7883:15;7917:4;7914:1;7907:15;7934:320;7978:6;8015:1;8009:4;8005:12;7995:22;;8062:1;8056:4;8052:12;8083:18;8073:81;;8139:4;8131:6;8127:17;8117:27;;8073:81;8201:2;8193:6;8190:14;8170:18;8167:38;8164:84;;8220:18;;:::i;:::-;8164:84;7985:269;7934:320;;;:::o;8260:442::-;8409:4;8447:2;8436:9;8432:18;8424:26;;8460:71;8528:1;8517:9;8513:17;8504:6;8460:71;:::i;:::-;8541:72;8609:2;8598:9;8594:18;8585:6;8541:72;:::i;:::-;8623;8691:2;8680:9;8676:18;8667:6;8623:72;:::i;:::-;8260:442;;;;;;:::o;8708:180::-;8756:77;8753:1;8746:88;8853:4;8850:1;8843:15;8877:4;8874:1;8867:15;8894:191;8934:3;8953:20;8971:1;8953:20;:::i;:::-;8948:25;;8987:20;9005:1;8987:20;:::i;:::-;8982:25;;9030:1;9027;9023:9;9016:16;;9051:3;9048:1;9045:10;9042:36;;;9058:18;;:::i;:::-;9042:36;8894:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1049200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"blacklist(address,bool)": "infinite",
								"blacklists(address)": "2901",
								"burn(uint256)": "infinite",
								"decimals()": "383",
								"limited()": "2606",
								"maxHoldingAmount()": "2536",
								"minHoldingAmount()": "2537",
								"name()": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"setRule(bool,address,uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapV2Pair()": "2531"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25185,
									"end": 25299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24990,
									"end": 24994,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "50696E67506F6E67506C61790000000000000000000000000000000000000000"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "50494E4750500000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12576,
									"end": 12581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12573,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12568,
									"end": 12581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12601,
									"end": 12608,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12598,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12591,
									"end": 12608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23069,
									"end": 23070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23045,
									"end": 23071,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23045,
									"end": 23071,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23045,
									"end": 23057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23045,
									"end": 23071,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23045,
									"end": 23071,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23045,
									"end": 23071,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23041,
									"end": 23136,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23041,
									"end": 23136,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23122,
									"end": 23123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23094,
									"end": 23125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23125,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23041,
									"end": 23136,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23041,
									"end": 23136,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23145,
									"end": 23177,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23164,
									"end": 23176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23145,
									"end": 23163,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23145,
									"end": 23163,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23145,
									"end": 23163,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23145,
									"end": 23177,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23145,
									"end": 23177,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23145,
									"end": 23177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23145,
									"end": 23177,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23145,
									"end": 23177,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22997,
									"end": 23184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25261,
									"end": 25292,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25267,
									"end": 25277,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 25279,
									"end": 25291,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25261,
									"end": 25266,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25261,
									"end": 25266,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25261,
									"end": 25266,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 25261,
									"end": 25292,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25261,
									"end": 25292,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25261,
									"end": 25292,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25261,
									"end": 25292,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25261,
									"end": 25292,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25185,
									"end": 25299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24684,
									"end": 24871,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24684,
									"end": 24871,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24757,
									"end": 24773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24776,
									"end": 24782,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24757,
									"end": 24782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24757,
									"end": 24782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24801,
									"end": 24809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24798,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24792,
									"end": 24798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24855,
									"end": 24863,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24845,
									"end": 24853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24824,
									"end": 24864,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24747,
									"end": 24871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24684,
									"end": 24871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24684,
									"end": 24871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18448,
									"end": 18449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18429,
									"end": 18436,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18502,
									"end": 18503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18473,
									"end": 18505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18541,
									"end": 18542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18545,
									"end": 18552,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18554,
									"end": 18559,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18532,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 18525,
									"end": 18532,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18525,
									"end": 18532,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17014,
									"end": 17015,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16998,
									"end": 17002,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17150,
									"end": 17155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17146,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17134,
									"end": 17146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17134,
									"end": 17155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17208,
									"end": 17217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17218,
									"end": 17222,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17223,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17255,
									"end": 17260,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17241,
									"end": 17252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17241,
									"end": 17260,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17316,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17318,
									"end": 17329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17331,
									"end": 17336,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17287,
									"end": 17337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17504,
									"end": 17509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17509,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17482,
									"end": 17486,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17509,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17509,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17172,
									"end": 17534,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17562,
									"end": 17563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17548,
									"end": 17550,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17727,
									"end": 17732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17723,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17711,
									"end": 17723,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17939,
									"end": 17944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17931,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17932,
									"end": 17934,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17999,
									"end": 18001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17993,
									"end": 17997,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18003,
									"end": 18008,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17984,
									"end": 18009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24942,
									"end": 26376,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3a74412fdcdb937942e7eb4fe27ebae988acc551179e2f47c6d9bfd58873e6664736f6c634300081c0033",
									".code": [
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "49BD5A5E"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "49BD5A5E"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "860A32EC"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "89F9A1D3"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "3AA633AA"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "404E5129"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "16C02129"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "1AB99E12"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24942,
											"end": 26376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25136,
											"end": 25178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25136,
											"end": 25178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25136,
											"end": 25178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13750,
											"end": 13847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13750,
											"end": 13847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25065,
											"end": 25096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25065,
											"end": 25096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15677,
											"end": 15921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15677,
											"end": 15921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15677,
											"end": 15921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13608,
											"end": 13690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13608,
											"end": 13690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25444,
											"end": 25740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25444,
											"end": 25740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25305,
											"end": 25438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25305,
											"end": 25438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26295,
											"end": 26374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26295,
											"end": 26374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25102,
											"end": 25130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25102,
											"end": 25130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24065,
											"end": 24166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25003,
											"end": 25022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25003,
											"end": 25022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25028,
											"end": 25059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25028,
											"end": 25059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23410,
											"end": 23495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23410,
											"end": 23495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14216,
											"end": 14394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14216,
											"end": 14394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14216,
											"end": 14394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14452,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14452,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14452,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 24315,
											"end": 24530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24315,
											"end": 24530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12725,
											"end": 12738,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12757,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12750,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12750,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14972,
											"end": 14976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14988,
											"end": 15001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15004,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15004,
											"end": 15016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 15016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 15016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15026,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15035,
											"end": 15040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15042,
											"end": 15049,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15026,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15026,
											"end": 15057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15026,
											"end": 15057,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15026,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15074,
											"end": 15078,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15067,
											"end": 15078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15067,
											"end": 15078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15067,
											"end": 15078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25065,
											"end": 25096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15780,
											"end": 15795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15798,
											"end": 15810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15798,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15798,
											"end": 15810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15798,
											"end": 15810,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15798,
											"end": 15810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15780,
											"end": 15810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15780,
											"end": 15810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15836,
											"end": 15840,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15842,
											"end": 15849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15851,
											"end": 15856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15820,
											"end": 15857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15857,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15820,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15877,
											"end": 15881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15883,
											"end": 15885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15867,
											"end": 15893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15893,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15867,
											"end": 15893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15903,
											"end": 15914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13674,
											"end": 13683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13674,
											"end": 13683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23303,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 23303,
											"end": 23316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25593,
											"end": 25601,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25583,
											"end": 25590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25627,
											"end": 25641,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25611,
											"end": 25624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25670,
											"end": 25687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25651,
											"end": 25667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25651,
											"end": 25687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25651,
											"end": 25687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25651,
											"end": 25687,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25651,
											"end": 25687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25716,
											"end": 25733,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25697,
											"end": 25733,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25733,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25444,
											"end": 25740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23303,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 23303,
											"end": 23316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25431,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25404,
											"end": 25412,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25431,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26343,
											"end": 26367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 26349,
											"end": 26359,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26361,
											"end": 26366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26343,
											"end": 26348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 26343,
											"end": 26367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26343,
											"end": 26367,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 26343,
											"end": 26367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14006,
											"end": 14013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13989,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13989,
											"end": 14014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24065,
											"end": 24166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23303,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 23303,
											"end": 23316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24129,
											"end": 24159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24156,
											"end": 24157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24129,
											"end": 24147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24129,
											"end": 24159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24129,
											"end": 24159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24129,
											"end": 24159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24065,
											"end": 24166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23456,
											"end": 23463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23475,
											"end": 23488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23475,
											"end": 23488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23410,
											"end": 23495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12942,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12954,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12954,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14285,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14317,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14317,
											"end": 14327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14317,
											"end": 14329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14329,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14317,
											"end": 14329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14339,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14349,
											"end": 14354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14360,
											"end": 14365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14339,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14339,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14339,
											"end": 14366,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14339,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 14387,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14376,
											"end": 14387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14376,
											"end": 14387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14376,
											"end": 14387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14570,
											"end": 14575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14577,
											"end": 14584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14551,
											"end": 14585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14551,
											"end": 14585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 23303,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 23303,
											"end": 23316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 23303,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24419,
											"end": 24420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24399,
											"end": 24421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24399,
											"end": 24421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24399,
											"end": 24407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24399,
											"end": 24421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24399,
											"end": 24421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24399,
											"end": 24421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24395,
											"end": 24486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24395,
											"end": 24486,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24444,
											"end": 24475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24475,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24395,
											"end": 24486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24395,
											"end": 24486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24514,
											"end": 24522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24495,
											"end": 24523,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24523,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24495,
											"end": 24523,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24315,
											"end": 24530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19711,
											"end": 19748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 19720,
											"end": 19725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19727,
											"end": 19734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19736,
											"end": 19741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19743,
											"end": 19747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19711,
											"end": 19719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 19711,
											"end": 19748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19711,
											"end": 19748,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 19711,
											"end": 19748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21442,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21452,
											"end": 21457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21459,
											"end": 21466,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21442,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21442,
											"end": 21467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21442,
											"end": 21467,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21442,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21500,
											"end": 21517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21481,
											"end": 21497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21556,
											"end": 21561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21615,
											"end": 21622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21624,
											"end": 21640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21642,
											"end": 21647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21588,
											"end": 21648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21713,
											"end": 21718,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21720,
											"end": 21727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21753,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21755,
											"end": 21760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21704,
											"end": 21712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21704,
											"end": 21761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21761,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21704,
											"end": 21761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21405,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16418,
											"end": 16448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16472,
											"end": 16474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16511,
											"end": 16543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16571,
											"end": 16575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16577,
											"end": 16579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16581,
											"end": 16586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16563,
											"end": 16587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23568,
											"end": 23730,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 23568,
											"end": 23730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23638,
											"end": 23650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23650,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 23638,
											"end": 23650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23627,
											"end": 23650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23627,
											"end": 23650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23627,
											"end": 23634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 23627,
											"end": 23632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23627,
											"end": 23634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23627,
											"end": 23634,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 23627,
											"end": 23634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23627,
											"end": 23650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23627,
											"end": 23650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23627,
											"end": 23650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 23623,
											"end": 23724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23700,
											"end": 23712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 23700,
											"end": 23710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23700,
											"end": 23712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23700,
											"end": 23712,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 23700,
											"end": 23712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23673,
											"end": 23713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23673,
											"end": 23713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23724,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 23623,
											"end": 23724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23568,
											"end": 23730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19091,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18885,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18974,
											"end": 18975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18955,
											"end": 18962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18999,
											"end": 19029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19057,
											"end": 19064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19074,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19049,
											"end": 19084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19084,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19049,
											"end": 19084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24871,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24684,
											"end": 24871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24801,
											"end": 24809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24798,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24792,
											"end": 24798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24845,
											"end": 24853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24864,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20731,
											"end": 20732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20714,
											"end": 20719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20756,
											"end": 20788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20884,
											"end": 20885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20856,
											"end": 20887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20937,
											"end": 20942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20918,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20919,
											"end": 20924,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20926,
											"end": 20933,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20956,
											"end": 20965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21011,
											"end": 21016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 20986,
											"end": 21017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17014,
											"end": 17015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16998,
											"end": 17002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17150,
											"end": 17155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17146,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17134,
											"end": 17146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17134,
											"end": 17155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17208,
											"end": 17217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17218,
											"end": 17222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17241,
											"end": 17252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17241,
											"end": 17260,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17331,
											"end": 17336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17287,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17504,
											"end": 17509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17482,
											"end": 17486,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17509,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17172,
											"end": 17534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17562,
											"end": 17563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17548,
											"end": 17550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17723,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17711,
											"end": 17723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17939,
											"end": 17944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17932,
											"end": 17934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17999,
											"end": 18001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 17997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18003,
											"end": 18008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17984,
											"end": 18009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5197,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5081,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5166,
											"end": 5171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5151,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5131,
											"end": 5191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5131,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5336,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5203,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5324,
											"end": 5329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5300,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5330,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5300,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5336,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5486,
											"end": 5495,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5484,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5466,
											"end": 5586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5505,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5586,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5466,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5692,
											"end": 5699,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5681,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5650,
											"end": 5700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5700,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5650,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5700,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5775,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5820,
											"end": 5827,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5775,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5775,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5828,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5948,
											"end": 5955,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5937,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 5946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5903,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5893,
											"end": 5956,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5893,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6031,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6076,
											"end": 6083,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6031,
											"end": 6084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6084,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6031,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 6101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6215,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6227,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6232,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6316,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6197,
											"end": 6316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6235,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6235,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6235,
											"end": 6314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6235,
											"end": 6314,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6235,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6316,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6197,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6425,
											"end": 6432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6416,
											"end": 6422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6414,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6380,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6380,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6508,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6550,
											"end": 6557,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6539,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6508,
											"end": 6558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6558,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6508,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6910,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6581,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6675,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6687,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6692,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6657,
											"end": 6776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6657,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6657,
											"end": 6776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6695,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6695,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6695,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6695,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6695,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6657,
											"end": 6776,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6657,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6885,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6874,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6840,
											"end": 6893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6893,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6840,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 7034,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6916,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7021,
											"end": 7026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7003,
											"end": 7027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7027,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7003,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 7034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 7034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 7034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7262,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7040,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7252,
											"end": 7253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7184,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7262,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7396,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7361,
											"end": 7480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7399,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7399,
											"end": 7478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7478,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7399,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7361,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7589,
											"end": 7596,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7578,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7544,
											"end": 7597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7597,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7544,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7490,
											"end": 7607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7717,
											"end": 7724,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7706,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7672,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 7748,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7873,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7793,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7897,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7890,
											"end": 7891,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7921,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7914,
											"end": 7915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 8254,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7934,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8009,
											"end": 8013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8017,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7995,
											"end": 8017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7995,
											"end": 8017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8073,
											"end": 8154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8143,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8131,
											"end": 8137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8154,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8073,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8193,
											"end": 8199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8204,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8167,
											"end": 8205,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8220,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 8254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 8254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 8254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8449,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8528,
											"end": 8529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8517,
											"end": 8526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8460,
											"end": 8531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8531,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8460,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8609,
											"end": 8611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8598,
											"end": 8607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8541,
											"end": 8613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8613,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8541,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8691,
											"end": 8693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 8694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8623,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8695,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8623,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8888,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8708,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8833,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8753,
											"end": 8754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8857,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8843,
											"end": 8858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8881,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8874,
											"end": 8875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 8882,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 9085,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8894,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8971,
											"end": 8972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8953,
											"end": 8973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8973,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8953,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8948,
											"end": 8973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8948,
											"end": 8973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9005,
											"end": 9006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8987,
											"end": 9007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9007,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8987,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9055,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9042,
											"end": 9078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9058,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9078,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9042,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 9085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 9085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 9085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 9085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 9085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/PingPongPlay_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklist(address,bool)": "404e5129",
							"blacklists(address)": "16c02129",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"limited()": "860a32ec",
							"maxHoldingAmount()": "89f9a1d3",
							"minHoldingAmount()": "1ab99e12",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setRule(bool,address,uint256,uint256)": "3aa633aa",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Pair()": "49bd5a5e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBlacklisting\",\"type\":\"bool\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHoldingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minHoldingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_limited\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2Pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxHoldingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minHoldingAmount\",\"type\":\"uint256\"}],\"name\":\"setRule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PingPongPlay_flattened.sol\":\"PINGPONGPLAY\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PingPongPlay_flattened.sol\":{\"keccak256\":\"0x17588c128693537d5a0db107ff82653a743735edcf3a5bee934290027078b86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395378feed682415597cc6bd0c3de9bbe7f09c99f71aca3fffaf78cf392d8978\",\"dweb:/ipfs/QmXdQ4Vspweqz6TRAy9C95L9PCtghZ83rmNxvq4yxwnyby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 927,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "limited",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 929,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "maxHoldingAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 931,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "minHoldingAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 933,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 937,
								"contract": "contracts/PingPongPlay_flattened.sol:PINGPONGPLAY",
								"label": "blacklists",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/PingPongPlay_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/PingPongPlay_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						],
						"PINGPONGPLAY": [
							1085
						]
					},
					"id": 1086,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "165:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "273:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "286:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "455:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:57:0"
									},
									"src": "449:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "527:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "718:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:63:0"
									},
									"src": "680:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "764:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "843:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 77,
									"src": "834:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "895:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:0"
									},
									"scope": 77,
									"src": "971:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1045:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1289:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:6:0"
									},
									"scope": 77,
									"src": "1263:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1338:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1616:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 77,
									"src": "1607:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1696:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:6:0"
									},
									"scope": 77,
									"src": "2368:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2447:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2758:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:0"
									},
									"scope": 77,
									"src": "2749:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1086,
							"src": "263:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3010:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3153:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3153:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3153:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3037:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3135:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3166:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3234:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3264:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:15:0"
									},
									"scope": 100,
									"src": "3225:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3285:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3355:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:15:0"
									},
									"scope": 100,
									"src": "3346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3408:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3487:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3521:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:7:0"
									},
									"scope": 100,
									"src": "3478:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1086,
							"src": "3125:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3654:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3680:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4195:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4271:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4288:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4292:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4288:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4281:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4218:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:9:0"
									},
									"scope": 129,
									"src": "4209:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4378:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4395:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4399:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4395:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4388:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4328:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4362:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:16:0"
									},
									"scope": 129,
									"src": "4311:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4488:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4498:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4425:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:0"
									},
									"scope": 129,
									"src": "4416:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1086,
							"src": "4177:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4662:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4688:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4840:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4859:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5179:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:49:0"
									},
									"src": "5173:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5259:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5422:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:16:0"
									},
									"src": "5416:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5463:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5633:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5662:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5654:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:18:0"
									},
									"src": "5627:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5678:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6034:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:52:0"
									},
									"src": "6028:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6119:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6304:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:18:0"
									},
									"src": "6298:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6349:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6555:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6574:17:0"
									},
									"src": "6549:43:0"
								}
							],
							"scope": 1086,
							"src": "4830:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6596:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6750:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6770:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7000:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:15:0"
									},
									"src": "6994:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7040:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7183:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:17:0"
									},
									"src": "7177:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7229:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7529:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7549:48:0"
									},
									"src": "7523:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7604:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7767:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:16:0"
									},
									"src": "7761:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7809:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7979:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8009:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8001:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8000:18:0"
									},
									"src": "7973:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8025:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8283:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8336:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:35:0"
									},
									"src": "8277:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8351:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8536:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8558:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8557:18:0"
									},
									"src": "8530:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8582:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8790:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:18:0"
									},
									"src": "8784:46:0"
								}
							],
							"scope": 1086,
							"src": "6740:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8834:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8990:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9011:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9383:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9410:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:66:0"
									},
									"src": "9377:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9482:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9645:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:16:0"
									},
									"src": "9639:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9688:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9858:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9880:18:0"
									},
									"src": "9852:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9905:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10172:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10200:33:0"
									},
									"src": "10166:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10240:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10425:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10448:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:18:0"
									},
									"src": "10419:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10472:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10680:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10703:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:18:0"
									},
									"src": "10674:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10727:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11018:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11052:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11044:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11071:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11043:41:0"
									},
									"src": "11012:73:0"
								}
							],
							"scope": 1086,
							"src": "8980:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11219:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12034:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12034:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12034:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12043:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12043:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12043:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12051:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12051:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12051:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12067:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12067:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12067:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11249:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12025:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12130:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12086:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12102:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12094:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12086:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12113:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12218:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12146:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12162:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12146:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12189:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12181:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12173:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12200:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12252:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12236:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12286:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12271:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12271:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12312:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12297:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12297:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12558:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12576:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12568:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12568:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12591:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12591:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12326:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12528:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12514:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12535:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12513:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12558:0:0"
									},
									"scope": 771,
									"src": "12502:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12740:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12750:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12621:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12689:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12693:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12725:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12724:15:0"
									},
									"scope": 771,
									"src": "12680:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12944:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12954:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12775:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12891:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12897:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12929:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12928:15:0"
									},
									"scope": 771,
									"src": "12882:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13664:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13681:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13674:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12981:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13617:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13625:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13657:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:7:0"
									},
									"scope": 771,
									"src": "13608:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13811:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13828:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13821:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13696:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13759:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13770:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13801:9:0"
									},
									"scope": 771,
									"src": "13750:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13979:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13996:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13996:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13989:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13853:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13914:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:9:0"
									},
									"scope": 771,
									"src": "13905:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14291:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14309:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14301:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14301:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14317:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14317:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14301:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14356:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14339:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14339:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14339:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14376:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14027:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14225:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14242:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14234:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14233:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14284:6:0"
									},
									"scope": 771,
									"src": "14216:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14541:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14558:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14558:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14558:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14551:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14400:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14461:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14479:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14471:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14470:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14531:9:0"
									},
									"scope": 771,
									"src": "14452:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14978:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14996:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14988:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14988:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15004:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15004:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14988:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15035:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15051:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15026:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15026:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15026:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15067:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14598:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14908:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14941:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14933:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14915:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14972:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14971:6:0"
									},
									"scope": 771,
									"src": "14899:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15770:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15788:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15780:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15780:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15798:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15780:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15851:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15820:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15820:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15820:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15883:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15887:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15867:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15867:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15910:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15903:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15091:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15686:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15707:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15699:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15721:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15713:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15733:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15698:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15764:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15763:6:0"
									},
									"scope": 771,
									"src": "15677:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16363:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16377:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16393:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16385:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16385:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16377:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16373:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16397:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16445:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16437:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16437:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16437:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16418:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16418:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16411:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16472:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16486:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16478:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16478:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16472:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16468:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16490:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16532:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16532:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16532:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16511:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16511:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16504:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16577:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16581:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16563:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16563:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15927:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16303:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16321:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16313:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16335:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16327:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16312:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16363:0:0"
									},
									"scope": 771,
									"src": "16294:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16984:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16998:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17006:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17006:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16998:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17172:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17194:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17186:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17208:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17218:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17208:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17186:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17241:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17255:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17241:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17237:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17262:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17312:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17318:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17331:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17287:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17287:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17280:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17365:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17472:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17482:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17472:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17490:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17504:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17490:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17472:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17472:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16994:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17018:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17134:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17134:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17548:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17554:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17554:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17548:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17763:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17777:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17922:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17932:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17922:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17939:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17922:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17922:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17544:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17566:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17580:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17711:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17727:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17711:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17711:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17993:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17999:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17984:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17984:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17979:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16600:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16918:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16948:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16925:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16984:0:0"
									},
									"scope": 771,
									"src": "16909:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18415:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18440:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18440:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18429:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18425:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18452:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18502:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18494:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18494:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18494:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18473:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18473:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18466:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18541:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18533:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18533:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18533:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18554:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18525:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18525:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18022:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18368:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18373:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18415:0:0"
									},
									"scope": 771,
									"src": "18359:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18941:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18966:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18966:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18955:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18951:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18978:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19018:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19018:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19018:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18999:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18999:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18992:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19074:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19066:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19066:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19066:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19049:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19049:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18573:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18894:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18925:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18917:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18899:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18941:0:0"
									},
									"scope": 771,
									"src": "18885:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19701:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19736:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19743:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19711:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19711:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19097:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19636:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19685:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19677:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19644:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19701:0:0"
									},
									"scope": 771,
									"src": "19627:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20700:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20714:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20723:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20723:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20714:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20710:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20735:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20777:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20777:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20777:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20756:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20756:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20749:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20831:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20823:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20823:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20812:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20808:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20835:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20884:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20876:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20876:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20876:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20856:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20856:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20849:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20907:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20907:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20907:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20937:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20907:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20907:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20952:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20967:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20995:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21002:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21011:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20986:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20986:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20981:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19761:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20611:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20620:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20643:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20660:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20652:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20672:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20619:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20700:0:0"
									},
									"scope": 771,
									"src": "20602:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21405:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21423:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21415:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21442:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21442:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21415:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21481:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21505:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21500:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21500:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21514:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21500:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21481:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21477:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21519:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21537:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21556:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21537:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21533:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21563:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21615:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21624:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21642:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21588:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21588:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21581:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21676:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21713:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21720:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21729:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21748:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21729:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21755:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21704:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21704:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21704:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21040:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21325:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21373:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21340:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21405:0:0"
									},
									"scope": 771,
									"src": "21316:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1086,
							"src": "12007:9787:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21920:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22464:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22464:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22464:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21947:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22453:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22494:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22478:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22478:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22507:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22603:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22638:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22630:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22629:17:0"
									},
									"src": "22597:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22653:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22746:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22765:15:0"
									},
									"src": "22740:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22793:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22830:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22814:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22861:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22845:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22813:57:0"
									},
									"src": "22787:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23031:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23045:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23061:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23061:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23045:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23041:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23073:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23122:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23114:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23114:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23114:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23094:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23094:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23087:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23164:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23145:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23145:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23145:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22877:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23017:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23009:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23008:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23031:0:0"
									},
									"scope": 916,
									"src": "22997:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23293:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23303:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23303:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23303:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23326:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23190:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23281:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23290:2:0"
									},
									"src": "23272:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23465:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23475:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23340:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23419:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23424:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23455:9:0"
									},
									"scope": 916,
									"src": "23410:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23613:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23627:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23638:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23638:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23627:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23623:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23652:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23700:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23700:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23673:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23673:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23666:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23501:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23577:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23588:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23613:0:0"
									},
									"scope": 916,
									"src": "23568:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24119:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24156:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24148:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24148:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24129:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24129:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24129:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23736:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24109:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24109:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24109:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24074:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24091:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24119:0:0"
									},
									"scope": 916,
									"src": "24065:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24385:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24399:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24411:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24411:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24399:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24395:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24423:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24472:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24464:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24464:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24464:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24444:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24444:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24437:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24514:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24495:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24495:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24495:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24172:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24375:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24375:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24375:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24324:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24350:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24342:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24341:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24385:0:0"
									},
									"scope": 916,
									"src": "24315:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24747:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24765:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24757:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24757:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24757:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24792:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24801:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24792:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24792:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24845:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24855:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24824:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24824:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24819:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24536:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24693:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24720:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24712:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24711:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24747:0:0"
									},
									"scope": 916,
									"src": "24684:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1086,
							"src": "22435:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "24914:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 918,
										"name": "ERC20",
										"nameLocations": [
											"24967:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "24967:5:0"
									},
									"id": 919,
									"nodeType": "InheritanceSpecifier",
									"src": "24967:5:0"
								},
								{
									"arguments": [
										{
											"arguments": [
												{
													"id": 923,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "24990:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PINGPONGPLAY_$1085",
														"typeString": "contract PINGPONGPLAY"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_PINGPONGPLAY_$1085",
														"typeString": "contract PINGPONGPLAY"
													}
												],
												"id": 922,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "24982:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24982:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 924,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "24982:13:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 920,
										"name": "Ownable",
										"nameLocations": [
											"24974:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "24974:7:0"
									},
									"id": 925,
									"nodeType": "InheritanceSpecifier",
									"src": "24974:22:0"
								}
							],
							"canonicalName": "PINGPONGPLAY",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1085,
							"linearizedBaseContracts": [
								1085,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "PINGPONGPLAY",
							"nameLocation": "24951:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "860a32ec",
									"id": 927,
									"mutability": "mutable",
									"name": "limited",
									"nameLocation": "25015:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "25003:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 926,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "25003:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89f9a1d3",
									"id": 929,
									"mutability": "mutable",
									"name": "maxHoldingAmount",
									"nameLocation": "25043:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "25028:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25028:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ab99e12",
									"id": 931,
									"mutability": "mutable",
									"name": "minHoldingAmount",
									"nameLocation": "25080:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "25065:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 930,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25065:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "49bd5a5e",
									"id": 933,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "25117:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "25102:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 932,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25102:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16c02129",
									"id": 937,
									"mutability": "mutable",
									"name": "blacklists",
									"nameLocation": "25168:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "25136:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 936,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25144:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25136:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 935,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "25155:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "25251:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 947,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "25267:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25271:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25267:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "25279:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25261:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25261:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "25261:31:0"
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50696e67506f6e67506c6179",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25225:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_921e3d9949beab033a54ebbbf56ba315209904f2ef0fd2572c7baec8528fbc7d",
														"typeString": "literal_string \"PingPongPlay\""
													},
													"value": "PingPongPlay"
												},
												{
													"hexValue": "50494e475050",
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25241:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3c5f3ebda6774994bd68ec5f0fa90f6785464c4d3f2331bfb8d022f2ed5e8071",
														"typeString": "literal_string \"PINGPP\""
													},
													"value": "PINGPP"
												}
											],
											"id": 944,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 941,
												"name": "ERC20",
												"nameLocations": [
													"25219:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "25219:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25219:31:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "25205:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "25197:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25196:22:0"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25251:0:0"
									},
									"scope": 1085,
									"src": "25185:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "25383:55:0",
										"statements": [
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 962,
															"name": "blacklists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "25393:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 964,
														"indexExpression": {
															"id": 963,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "25404:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25393:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "_isBlacklisting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "25416:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25393:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "25393:38:0"
											}
										]
									},
									"functionSelector": "404e5129",
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 960,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 959,
												"name": "onlyOwner",
												"nameLocations": [
													"25373:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "25373:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25373:9:0"
										}
									],
									"name": "blacklist",
									"nameLocation": "25314:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "25332:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "25324:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "_isBlacklisting",
												"nameLocation": "25347:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "25342:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25323:40:0"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25383:0:0"
									},
									"scope": 1085,
									"src": "25305:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "25573:167:0",
										"statements": [
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "limited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "25583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 983,
														"name": "_limited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "25593:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25583:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "25583:18:0"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "25611:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 987,
														"name": "_uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "25627:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25611:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "25611:30:0"
											},
											{
												"expression": {
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 990,
														"name": "maxHoldingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "25651:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 991,
														"name": "_maxHoldingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "25670:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25651:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "25651:36:0"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 994,
														"name": "minHoldingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "25697:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 995,
														"name": "_minHoldingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "25716:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25697:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "25697:36:0"
											}
										]
									},
									"functionSelector": "3aa633aa",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 980,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 979,
												"name": "onlyOwner",
												"nameLocations": [
													"25563:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "25563:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25563:9:0"
										}
									],
									"name": "setRule",
									"nameLocation": "25453:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "_limited",
												"nameLocation": "25466:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "25461:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "_uniswapV2Pair",
												"nameLocation": "25484:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "25476:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "_maxHoldingAmount",
												"nameLocation": "25508:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "25500:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "_minHoldingAmount",
												"nameLocation": "25535:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "25527:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25460:93:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25573:0:0"
									},
									"scope": 1085,
									"src": "25444:296:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "25865:424:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25883:15:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1009,
																		"name": "blacklists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "25884:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1011,
																	"indexExpression": {
																		"id": 1010,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "25895:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25884:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25902:17:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1013,
																		"name": "blacklists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "25903:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1015,
																	"indexExpression": {
																		"id": 1014,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "25914:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25903:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25883:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c6973746564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25921:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400",
																"typeString": "literal_string \"Blacklisted\""
															},
															"value": "Blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400",
																"typeString": "literal_string \"Blacklisted\""
															}
														],
														"id": 1008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25875:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "25875:60:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1021,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "25950:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25975:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1022,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25967:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25967:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25950:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "25946:145:0",
												"trueBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "25979:112:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1028,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "26001:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1029,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "26009:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26009:7:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "26001:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1032,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1003,
																				"src": "26020:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1033,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "26026:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26026:7:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "26020:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26001:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "74726164696e67206973206e6f742073746172746564",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26035:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b935f9ec3858d75bdeca353ffd6ea84cfce65ffc3da61d52b86a771f59a819f8",
																			"typeString": "literal_string \"trading is not started\""
																		},
																		"value": "trading is not started"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b935f9ec3858d75bdeca353ffd6ea84cfce65ffc3da61d52b86a771f59a819f8",
																			"typeString": "literal_string \"trading is not started\""
																		}
																	],
																	"id": 1027,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "25993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25993:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "ExpressionStatement",
															"src": "25993:67:0"
														},
														{
															"functionReturnParameters": 1007,
															"id": 1040,
															"nodeType": "Return",
															"src": "26074:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1043,
														"name": "limited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "26105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1044,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "26116:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1045,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "26124:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "26116:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26105:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "26101:182:0",
												"trueBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "26139:144:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1051,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1003,
																							"src": "26177:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"id": 1049,
																							"name": "super",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967271,
																							"src": "26161:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_super$_PINGPONGPLAY_$1085_$",
																								"typeString": "type(contract super PINGPONGPLAY)"
																							}
																						},
																						"id": 1050,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "26167:9:0",
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 357,
																						"src": "26161:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view returns (uint256)"
																						}
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26161:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1053,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "26183:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26161:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1055,
																				"name": "maxHoldingAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 929,
																				"src": "26193:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26161:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1059,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1003,
																							"src": "26229:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"id": 1057,
																							"name": "super",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967271,
																							"src": "26213:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_super$_PINGPONGPLAY_$1085_$",
																								"typeString": "type(contract super PINGPONGPLAY)"
																							}
																						},
																						"id": 1058,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "26219:9:0",
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 357,
																						"src": "26213:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view returns (uint256)"
																						}
																					},
																					"id": 1060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26213:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1061,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "26235:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26213:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1063,
																				"name": "minHoldingAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 931,
																				"src": "26245:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26213:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26161:100:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "466f72626964",
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26263:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5fb4b4a949617dfbdb48b85d14a3c69f6caffd0e3a614d22629fa75cc368309a",
																			"typeString": "literal_string \"Forbid\""
																		},
																		"value": "Forbid"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5fb4b4a949617dfbdb48b85d14a3c69f6caffd0e3a614d22629fa75cc368309a",
																			"typeString": "literal_string \"Forbid\""
																		}
																	],
																	"id": 1048,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "26153:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26153:119:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1068,
															"nodeType": "ExpressionStatement",
															"src": "26153:119:0"
														}
													]
												}
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "25755:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25793:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "25785:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25815:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "25807:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25835:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "25827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25775:72:0"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25865:0:0"
									},
									"scope": 1085,
									"src": "25746:543:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "26333:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26349:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26353:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26349:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "26361:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "26343:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26343:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "26343:24:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "26304:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26317:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "26309:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26308:15:0"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26333:0:0"
									},
									"scope": 1085,
									"src": "26295:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1086,
							"src": "24942:1434:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793
							]
						}
					],
					"src": "165:26212:0"
				},
				"id": 0
			}
		}
	}
}